var searchIndex={};
searchIndex["abstract_integers"] = {"doc":"This crate defines specification-friendly natural integers…","i":[[3,"SizeNatExample","abstract_integers","",null,null],[3,"SizeNatFieldExample","","",null,null],[11,"from_literal","","",0,[[["u128"]],["self"]]],[11,"from_hex","","",0,[[["str"]],["self"]]],[11,"from_bytes_le","","",0,[[],["self"]]],[11,"to_bytes_le","","",0,[[],[["vec",["u8"]],["u8"]]]],[11,"pow2","","Returns 2 to the power of the argument",0,[[["usize"]],["sizenatexample"]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",0,[[["usize"]],["bool"]]],[11,"inv","","",0,[[],["self"]]],[11,"pow_felem","","",0,[[],["self"]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",0,[[["u128"]],["self"]]],[11,"max","","",1,[[],["sizenatexample"]]],[11,"from_literal","","",1,[[["u128"]],["self"]]],[11,"from_hex","","",1,[[["str"]],["self"]]],[11,"inv","","",1,[[],["self"]]],[11,"pow_felem","","",1,[[],["self"]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",1,[[["u128"]],["self"]]],[11,"from_bytes_le","","",1,[[],["self"]]],[11,"to_bytes_le","","",1,[[],[["vec",["u8"]],["u8"]]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",1,[[["usize"]],["bool"]]],[14,"define_abstract_integer_checked","","Defines a bounded natural integer with regular arithmetic…",null,null],[14,"define_refined_modular_integer","","Defines a bounded natural integer with modular arithmetic…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["biguint"]],["sizenatexample"]]],[11,"from","","",1,[[["sizenatexample"]],["sizenatfieldexample"]]],[11,"into","","",0,[[],["biguint"]]],[11,"into","","",1,[[],["sizenatexample"]]],[11,"clone","","",0,[[["self"]],["sizenatexample"]]],[11,"clone","","",1,[[["self"]],["sizenatfieldexample"]]],[11,"cmp","","",0,[[["self"],["sizenatexample"]],["ordering"]]],[11,"cmp","","",1,[[["sizenatfieldexample"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["sizenatexample"]],["bool"]]],[11,"eq","","",1,[[["sizenatfieldexample"],["self"]],["bool"]]],[11,"ne","","",1,[[["sizenatfieldexample"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["sizenatexample"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["sizenatfieldexample"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["sizenatfieldexample"],["self"]],["bool"]]],[11,"le","","",1,[[["sizenatfieldexample"],["self"]],["bool"]]],[11,"gt","","",1,[[["sizenatfieldexample"],["self"]],["bool"]]],[11,"ge","","",1,[[["sizenatfieldexample"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"div","","",0,[[["sizenatexample"]],["sizenatexample"]]],[11,"div","","",1,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"rem","","",0,[[["sizenatexample"]],["sizenatexample"]]],[11,"rem","","",1,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"sub","","",0,[[["sizenatexample"]],["sizenatexample"]]],[11,"sub","","",1,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"add","","",0,[[["sizenatexample"]],["sizenatexample"]]],[11,"add","","",1,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"mul","","",0,[[["sizenatexample"]],["sizenatexample"]]],[11,"mul","","",1,[[["sizenatfieldexample"]],["sizenatfieldexample"]]]],"p":[[3,"SizeNatExample"],[3,"SizeNatFieldExample"]]};
searchIndex["c2_chacha"] = {"doc":"Pure Rust ChaCha with SIMD optimizations.","i":[[0,"guts","c2_chacha","",null,null],[8,"Machine","c2_chacha::guts","",null,null],[16,"u32x4","","",0,null],[16,"u64x2","","",0,null],[16,"u128x1","","",0,null],[16,"u32x4x2","","",0,null],[16,"u64x2x2","","",0,null],[16,"u64x4","","",0,null],[16,"u128x2","","",0,null],[16,"u32x4x4","","",0,null],[16,"u64x2x4","","",0,null],[16,"u128x4","","",0,null],[11,"unpack","","",0,[[["s"]],["v"]]],[11,"vec","","",0,[[["a"]],["v"]]],[11,"read_le","","",0,[[],["v"]]],[11,"read_be","","",0,[[],["v"]]],[10,"instance","","",0,[[],["self"]]],[3,"ChaCha","","",null,null],[3,"State","","",null,null],[11,"new","","",1,[[],["self"]]],[11,"refill4","","Produce 4 blocks of output, advancing the state",1,[[["self"],["u32"]]]],[11,"refill","","Produce a block of output, advancing the state",1,[[["self"],["u32"]]]],[11,"set_stream_param","","",1,[[["self"],["u32"],["u64"]]]],[11,"get_stream_param","","",1,[[["u32"],["self"]],["u64"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","","",1,[[["self"]],["chacha"]]],[11,"clone","","",2,[[["self"]],["state"]]]],"p":[[8,"Machine"],[3,"ChaCha"],[3,"State"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["error"],["result",["error"]]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["option",["i32"]],["i32"]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["hacspec"] = {"doc":"hacspec consists of three parts: * hacspec library *…","i":[[3,"Seq","hacspec","Variable length byte arrays.",null,null],[3,"U32Word","","Fixed length byte array. Because Rust requires fixed…",null,null],[12,"0","","",0,null],[3,"U128Word","","Fixed length byte array. Because Rust requires fixed…",null,null],[12,"0","","",1,null],[3,"U64Word","","Fixed length byte array. Because Rust requires fixed…",null,null],[12,"0","","",2,null],[3,"Counter","","Fixed length byte array. Because Rust requires fixed…",null,null],[12,"0","","",3,null],[5,"u32_to_le_bytes","","",null,[[["u32"]],["u32word"]]],[5,"u32_from_le_bytes","","",null,[[["u32word"]],["u32"]]],[5,"u32_to_be_bytes","","",null,[[["u32"]],["u32word"]]],[5,"u128_from_le_bytes","","",null,[[["u128word"]],["u128"]]],[5,"u128_from_be_bytes","","",null,[[["u128word"]],["u128"]]],[5,"u128_to_be_bytes","","",null,[[["u128"]],["u128word"]]],[5,"u64_to_be_bytes","","",null,[[["u64"]],["u64word"]]],[5,"u64_to_le_bytes","","",null,[[["u64"]],["u64word"]]],[5,"u64_slice_to_le_u8s","","",null,[[["seqtrait"]],["byteseq"]]],[0,"prelude","","This module conveniently exports common subroutines…",null,null],[3,"BigUint","hacspec::prelude","A big unsigned integer type.",null,null],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",4,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",4,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",5,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",5,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",5,[[["self"]],["bool"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",6,[[["self"]],["option"]]],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",7,null],[10,"add","","Performs the `+` operation.",7,[[["rhs"]]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",8,null],[10,"div","","Performs the `/` operation.",8,[[["rhs"]]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",9,null],[10,"mul","","Performs the `*` operation.",9,[[["rhs"]]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",10,null],[10,"neg","","Performs the unary `-` operation.",10,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",11,null],[10,"rem","","Performs the `%` operation.",11,[[["rhs"]]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",12,null],[10,"sub","","Performs the `-` operation.",12,[[["rhs"]]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",13,[[["self"],["rhs"]]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",14,[[["self"],["rhs"]]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",15,[[["self"],["rhs"]]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",16,[[["self"],["rhs"]]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",17,[[["self"],["rhs"]]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",18,null],[10,"bitand","","Performs the `&` operation.",18,[[["rhs"]]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",19,null],[10,"bitor","","Performs the `|` operation.",19,[[["rhs"]]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",20,null],[10,"bitxor","","Performs the `^` operation.",20,[[["rhs"]]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",21,null],[10,"not","","Performs the unary `!` operation.",21,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",22,null],[10,"shl","","Performs the `<<` operation.",22,[[["rhs"]]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",23,null],[10,"shr","","Performs the `>>` operation.",23,[[["rhs"]]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",24,[[["self"],["rhs"]]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",25,[[["self"],["rhs"]]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",26,[[["self"],["rhs"]]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",27,[[["self"],["rhs"]]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",28,[[["self"],["rhs"]]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",29,null],[10,"deref","","Dereferences the value.",29,[[["self"]]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",30,[[["self"]]]],[8,"Drop","","Used to run some code when a value goes out of scope. This…",null,null],[10,"drop","","Executes the destructor for this type.",31,[[["self"]]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",32,[[["args"],["self"]]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",33,[[["args"],["self"]]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",34,null],[10,"call_once","","Performs the call operation.",34,[[["args"]]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",35,null],[10,"index","","Performs the indexing (`container[index]`) operation.",35,[[["idx"],["self"]]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",36,[[["self"],["idx"]]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",37,null],[12,"end","","The upper bound of the range (exclusive).",37,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",38,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",39,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",40,null],[13,"Excluded","","An exclusive bound.",40,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",40,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust's built-in range…",null,null],[10,"start_bound","","Start index bound.",41,[[["self"]],[["t"],["bound"]]]],[10,"end_bound","","End index bound.",41,[[["self"]],[["t"],["bound"]]]],[11,"contains","","Returns `true` if `item` is contained in the range.",41,[[["self"],["u"]],["bool"]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",42,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",43,null],[16,"Error","","The type of this value when viewed as failed.",43,null],[10,"into_result","","Applies the \"?\" operator. A return of `Ok(t)` means that…",43,[[],["result"]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",43,[[],["self"]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",43,[[],["self"]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",44,null],[16,"Return","","The type of value this generator returns.",44,null],[10,"resume","","Resumes the execution of this generator.",44,[[["self"],["pin"]],["generatorstate"]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",45,null],[13,"Complete","","The generator completed with a return value.",45,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method's…",null,null],[5,"min","","Compares and returns the minimum of two values.",null,[[["t"]],["t"]]],[8,"PartialEq","","Trait for equality comparisons which are partial…",null,null],[10,"eq","","This method tests for `self` and `other` values to be…",46,[[["rhs"],["self"]],["bool"]]],[11,"ne","","This method tests for `!=`.",46,[[["rhs"],["self"]],["bool"]]],[14,"PartialEq","","Derive macro generating an impl of the trait `PartialEq`.",null,null],[0,"fmt","","Utilities for formatting and printing `String`s.",null,null],[5,"format","hacspec::prelude::fmt","The `format` function takes an [`Arguments`] struct and…",null,[[["arguments"]],["string"]]],[4,"Alignment","","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",47,null],[13,"Right","","Indication that contents should be right-aligned.",47,null],[13,"Center","","Indication that contents should be center-aligned.",47,null],[3,"Error","","The error type which is returned from formatting a message…",null,null],[5,"write","","The `write` function takes an output stream, and an…",null,[[["arguments"],["write"]],[["error"],["result",["error"]]]]],[3,"Arguments","","This structure represents a safely precompiled version of…",null,null],[8,"Binary","","`b` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",48,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[8,"Octal","","`o` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",49,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[8,"Debug","","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",50,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",51,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"Formatter","","Configuration for formatting.",null,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A collection of methods that are required to format a…",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether…",52,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",52,[[["self"],["char"]],[["error"],["result",["error"]]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",52,[[["self"],["arguments"]],[["error"],["result",["error"]]]]],[8,"LowerExp","","`e` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",53,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[8,"UpperExp","","`E` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",54,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[8,"LowerHex","","`x` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",55,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[8,"Pointer","","`p` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",56,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[8,"UpperHex","","`X` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",57,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[3,"SizeNatExample","hacspec::prelude","",null,null],[3,"SizeNatFieldExample","","",null,null],[14,"define_abstract_integer_checked","","Defines a bounded natural integer with regular arithmetic…",null,null],[14,"define_refined_modular_integer","","Defines a bounded natural integer with modular arithmetic…",null,null],[3,"U8","","",null,null],[12,"0","","",58,null],[3,"U16","","",null,null],[12,"0","","",59,null],[3,"U32","","",null,null],[12,"0","","",60,null],[3,"U64","","",null,null],[12,"0","","",61,null],[3,"U128","","",null,null],[12,"0","","",62,null],[3,"I8","","",null,null],[12,"0","","",63,null],[3,"I16","","",null,null],[12,"0","","",64,null],[3,"I32","","",null,null],[12,"0","","",65,null],[3,"I64","","",null,null],[12,"0","","",66,null],[3,"I128","","",null,null],[12,"0","","",67,null],[6,"ByteSeq","hacspec","",null,null],[8,"SeqTrait","","Common trait for all byte arrays.",null,null],[10,"raw","","",68,[[["self"]]]],[10,"len","","",68,[[["self"]],["usize"]]],[10,"iter","","",68,[[["self"]],["iter"]]],[11,"new_len","","",69,[[["usize"]],["self"]]],[11,"is_empty","","",69,[[["self"]],["bool"]]],[11,"from_array","","",69,[[],["self"]]],[11,"len","","",69,[[["self"]],["usize"]]],[11,"update","","",69,[[["usize"],["seqtrait"]],["self"]]],[11,"update_sub","","",69,[[["usize"],["seqtrait"]],["self"]]],[11,"from_sub","","",69,[[["usize"],["seqtrait"],["range",["usize"]]],["self"]]],[11,"random","","",69,[[["usize"]],["self"]]],[11,"new","","",0,[[],["self"]]],[11,"from_sub_pad","","",0,[[["range",["usize"]],["seqtrait",["u8"]],["usize"],["u8"]],["self"]]],[11,"from_sub","","",0,[[["range",["usize"]],["seqtrait",["u8"]],["usize"],["u8"]],["self"]]],[11,"copy_pad","","",0,[[["u8"],["seqtrait",["u8"]]],["self"]]],[11,"copy","","",0,[[["u8"],["seqtrait",["u8"]]],["self"]]],[11,"update","","",0,[[["u8"],["usize"],["seqtrait",["u8"]]],["self"]]],[11,"update_sub","","",0,[[["usize"],["seqtrait",["u8"]],["u8"]],["self"]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"random","","",0,[[],["u32word"]]],[11,"get_random_vec","","",0,[[["usize"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",1,[[],["self"]]],[11,"from_sub_pad","","",1,[[["range",["usize"]],["seqtrait",["u8"]],["usize"],["u8"]],["self"]]],[11,"from_sub","","",1,[[["range",["usize"]],["seqtrait",["u8"]],["usize"],["u8"]],["self"]]],[11,"copy_pad","","",1,[[["u8"],["seqtrait",["u8"]]],["self"]]],[11,"copy","","",1,[[["u8"],["seqtrait",["u8"]]],["self"]]],[11,"update","","",1,[[["u8"],["usize"],["seqtrait",["u8"]]],["self"]]],[11,"update_sub","","",1,[[["usize"],["seqtrait",["u8"]],["u8"]],["self"]]],[11,"len","","",1,[[["self"]],["usize"]]],[11,"random","","",1,[[],["u128word"]]],[11,"get_random_vec","","",1,[[["usize"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",2,[[],["self"]]],[11,"from_sub_pad","","",2,[[["range",["usize"]],["seqtrait",["u8"]],["usize"],["u8"]],["self"]]],[11,"from_sub","","",2,[[["range",["usize"]],["seqtrait",["u8"]],["usize"],["u8"]],["self"]]],[11,"copy_pad","","",2,[[["u8"],["seqtrait",["u8"]]],["self"]]],[11,"copy","","",2,[[["u8"],["seqtrait",["u8"]]],["self"]]],[11,"update","","",2,[[["u8"],["usize"],["seqtrait",["u8"]]],["self"]]],[11,"update_sub","","",2,[[["usize"],["seqtrait",["u8"]],["u8"]],["self"]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"random","","",2,[[],["u64word"]]],[11,"get_random_vec","","",2,[[["usize"]],[["u8"],["vec",["u8"]]]]],[11,"new","","",3,[[],["self"]]],[11,"from_sub_pad","","",3,[[["range",["usize"]],["usize"],["seqtrait",["usize"]]],["self"]]],[11,"from_sub","","",3,[[["range",["usize"]],["usize"],["seqtrait",["usize"]]],["self"]]],[11,"copy_pad","","",3,[[["usize"],["seqtrait",["usize"]]],["self"]]],[11,"copy","","",3,[[["usize"],["seqtrait",["usize"]]],["self"]]],[11,"update","","",3,[[["usize"],["seqtrait",["usize"]]],["self"]]],[11,"update_sub","","",3,[[["usize"],["seqtrait",["usize"]]],["self"]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"random","","",3,[[],["counter"]]],[11,"get_random_vec","","",3,[[["usize"]],[["vec",["usize"]],["usize"]]]],[14,"bytes","","",null,null],[14,"array_base","","",null,null],[14,"array","","",null,null],[14,"public_array","","",null,null],[14,"secret_array","","",null,null],[14,"secret_bytes","","",null,null],[14,"assert_secret_array_eq","","",null,null],[14,"assert_bytes_eq","","",null,null],[14,"unsigned_integer","","",null,null],[14,"field_integer","","",null,null],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","hacspec::prelude","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"to_string","","",71,[[["self"]],["string"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"into_iter","","",73,[[],["i"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","hacspec::prelude::fmt","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"from","hacspec::prelude","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"description","","",71,[[["self"]],["str"]]],[11,"description","hacspec::prelude::fmt","",74,[[["self"]],["str"]]],[11,"get","hacspec::prelude","",42,[[["str"]],["option"]]],[11,"get_mut","","",42,[[["str"]],["option"]]],[11,"get_unchecked","","",42,[[["str"]]]],[11,"get_unchecked_mut","","",42,[[["str"]]]],[11,"index","","",42,[[["str"]]]],[11,"index_mut","","",42,[[["str"]]]],[11,"get","","",73,[[],["option"]]],[11,"get_mut","","",73,[[],["option"]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",38,[[],["option"]]],[11,"get_mut","","",38,[[],["option"]]],[11,"get_unchecked","","",38,[[]]],[11,"get_unchecked_mut","","",38,[[]]],[11,"index","","",38,[[]]],[11,"index_mut","","",38,[[]]],[11,"get","","",39,[[],["option"]]],[11,"get_mut","","",39,[[],["option"]]],[11,"get_unchecked","","",39,[[]]],[11,"get_unchecked_mut","","",39,[[]]],[11,"index","","",39,[[]]],[11,"index_mut","","",39,[[]]],[11,"get","","",37,[[],["option"]]],[11,"get_mut","","",37,[[],["option"]]],[11,"get_unchecked","","",37,[[]]],[11,"get_unchecked_mut","","",37,[[]]],[11,"index","","",37,[[]]],[11,"index_mut","","",37,[[]]],[11,"get","","",72,[[["str"]],["option"]]],[11,"get_mut","","",72,[[["str"]],["option"]]],[11,"get_unchecked","","",72,[[["str"]]]],[11,"get_unchecked_mut","","",72,[[["str"]]]],[11,"index","","",72,[[["str"]]]],[11,"index_mut","","",72,[[["str"]]]],[11,"get","","",72,[[],["option"]]],[11,"get_mut","","",72,[[],["option"]]],[11,"get_unchecked","","",72,[[]]],[11,"get_unchecked_mut","","",72,[[]]],[11,"index","","",72,[[]]],[11,"index_mut","","",72,[[]]],[11,"get","","",39,[[["str"]],["option"]]],[11,"get_mut","","",39,[[["str"]],["option"]]],[11,"get_unchecked","","",39,[[["str"]]]],[11,"get_unchecked_mut","","",39,[[["str"]]]],[11,"index","","",39,[[["str"]]]],[11,"index_mut","","",39,[[["str"]]]],[11,"get","","",37,[[["str"]],["option"]]],[11,"get_mut","","",37,[[["str"]],["option"]]],[11,"get_unchecked","","",37,[[["str"]]]],[11,"get_unchecked_mut","","",37,[[["str"]]]],[11,"index","","",37,[[["str"]]]],[11,"index_mut","","",37,[[["str"]]]],[11,"get","","",42,[[],["option"]]],[11,"get_mut","","",42,[[],["option"]]],[11,"get_unchecked","","",42,[[]]],[11,"get_unchecked_mut","","",42,[[]]],[11,"index","","",42,[[]]],[11,"index_mut","","",42,[[]]],[11,"get","","",73,[[["str"]],["option"]]],[11,"get_mut","","",73,[[["str"]],["option"]]],[11,"get_unchecked","","",73,[[["str"]]]],[11,"get_unchecked_mut","","",73,[[["str"]]]],[11,"index","","",73,[[["str"]]]],[11,"index_mut","","",73,[[["str"]]]],[11,"get","","",38,[[["str"]],["option"]]],[11,"get_mut","","",38,[[["str"]],["option"]]],[11,"get_unchecked","","",38,[[["str"]]]],[11,"get_unchecked_mut","","",38,[[["str"]]]],[11,"index","","",38,[[["str"]]]],[11,"index_mut","","",38,[[["str"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",73,[[["self"],["h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","hacspec::prelude::fmt","",74,[[["self"],["__h"]]]],[11,"hash","hacspec::prelude","",42,[[["self"],["__h"]]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,[[["self"]]]],[11,"nth","","",38,[[["self"],["usize"]],["option"]]],[11,"next","","",73,[[["self"]],["option"]]],[11,"size_hint","","",73,[[["self"]]]],[11,"nth","","",73,[[["self"],["usize"]],["option"]]],[11,"try_fold","","",73,[[["self"],["b"],["f"]],["r"]]],[11,"last","","",73,[[],["option"]]],[11,"min","","",73,[[],["option"]]],[11,"max","","",73,[[],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,[[["self"]]]],[11,"nth","","",37,[[["self"],["usize"]],["option"]]],[11,"last","","",37,[[],["option"]]],[11,"min","","",37,[[],["option"]]],[11,"max","","",37,[[],["option"]]],[11,"fmt","hacspec::prelude::fmt","",74,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","hacspec::prelude","",71,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","hacspec::prelude::fmt","",75,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"eq","hacspec::prelude","",38,[[["rangefrom"],["self"]],["bool"]]],[11,"ne","","",38,[[["rangefrom"],["self"]],["bool"]]],[11,"eq","","",71,[[["parseinterror"],["self"]],["bool"]]],[11,"ne","","",71,[[["parseinterror"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["range"]],["bool"]]],[11,"ne","","",37,[[["self"],["range"]],["bool"]]],[11,"eq","","",40,[[["self"],["bound"]],["bool"]]],[11,"ne","","",40,[[["self"],["bound"]],["bool"]]],[11,"eq","","",72,[[["rangefull"],["self"]],["bool"]]],[11,"eq","","",45,[[["generatorstate"],["self"]],["bool"]]],[11,"ne","","",45,[[["generatorstate"],["self"]],["bool"]]],[11,"eq","hacspec::prelude::fmt","",74,[[["self"],["error"]],["bool"]]],[11,"eq","hacspec::prelude","",73,[[["rangeinclusive"],["self"]],["bool"]]],[11,"eq","","",39,[[["rangeto"],["self"]],["bool"]]],[11,"ne","","",39,[[["rangeto"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["rangetoinclusive"]],["bool"]]],[11,"ne","","",42,[[["self"],["rangetoinclusive"]],["bool"]]],[11,"fmt","","",73,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",38,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",72,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",71,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","hacspec::prelude::fmt","",74,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","hacspec::prelude","",37,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",40,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","hacspec::prelude::fmt","",75,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","hacspec::prelude","",71,[[["self"]],["parseinterror"]]],[11,"clone","","",42,[[["self"]],["rangetoinclusive"]]],[11,"clone","","",72,[[["self"]],["rangefull"]]],[11,"clone","","",38,[[["self"]],["rangefrom"]]],[11,"clone","","",39,[[["self"]],["rangeto"]]],[11,"clone","","",37,[[["self"]],["range"]]],[11,"clone","hacspec::prelude::fmt","",75,[[["self"]],["arguments"]]],[11,"clone","","",74,[[["self"]],["error"]]],[11,"clone","hacspec::prelude","",40,[[["self"]],["bound"]]],[11,"clone","","",73,[[["self"]],["rangeinclusive"]]],[11,"clone","","",45,[[["self"]],["generatorstate"]]],[11,"cmp","","",45,[[["generatorstate"],["self"]],["ordering"]]],[11,"cmp","hacspec::prelude::fmt","",74,[[["self"],["error"]],["ordering"]]],[11,"write_str","","",81,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"write_char","","",81,[[["self"],["char"]],[["error"],["result",["error"]]]]],[11,"write_fmt","","",81,[[["self"],["arguments"]],[["error"],["result",["error"]]]]],[11,"next_back","hacspec::prelude","",37,[[["self"]],["option"]]],[11,"nth_back","","",37,[[["self"],["usize"]],["option"]]],[11,"next_back","","",73,[[["self"]],["option"]]],[11,"nth_back","","",73,[[["self"],["usize"]],["option"]]],[11,"try_rfold","","",73,[[["self"],["b"],["f"]],["r"]]],[11,"partial_cmp","hacspec::prelude::fmt","",74,[[["self"],["error"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","hacspec::prelude","",45,[[["generatorstate"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",45,[[["generatorstate"],["self"]],["bool"]]],[11,"le","","",45,[[["generatorstate"],["self"]],["bool"]]],[11,"gt","","",45,[[["generatorstate"],["self"]],["bool"]]],[11,"ge","","",45,[[["generatorstate"],["self"]],["bool"]]],[11,"default","hacspec::prelude::fmt","",74,[[],["error"]]],[11,"start_bound","hacspec::prelude","",42,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",42,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",39,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",39,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",38,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",38,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",72,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",72,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",73,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",73,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",42,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",42,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",39,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",39,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",37,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",37,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",37,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",37,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",73,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",73,[[["self"]],[["t"],["bound"]]]],[11,"start_bound","","",38,[[["self"]],[["t"],["bound"]]]],[11,"end_bound","","",38,[[["self"]],[["t"],["bound"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"div_assign","","",70,[[["self"],["biguint"]]]],[11,"div_assign","","",70,[[["self"],["biguint"]]]],[11,"div_assign","","",70,[[["self"],["u64"]]]],[11,"div_assign","","",70,[[["self"],["u128"]]]],[11,"div_assign","","",70,[[["self"],["u8"]]]],[11,"div_assign","","",70,[[["self"],["usize"]]]],[11,"div_assign","","",70,[[["self"],["u32"]]]],[11,"div_assign","","",70,[[["u16"],["self"]]]],[11,"to_i64","","",70,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","",70,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_u64","","",70,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","",70,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","",70,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",70,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"mul_assign","","",70,[[["self"],["usize"]]]],[11,"mul_assign","","",70,[[["u16"],["self"]]]],[11,"mul_assign","","",70,[[["self"],["u64"]]]],[11,"mul_assign","","",70,[[["self"],["u128"]]]],[11,"mul_assign","","",70,[[["self"],["biguint"]]]],[11,"mul_assign","","",70,[[["self"],["u32"]]]],[11,"mul_assign","","",70,[[["self"],["biguint"]]]],[11,"mul_assign","","",70,[[["self"],["u8"]]]],[11,"add","","",70,[[["u64"]],["biguint"]]],[11,"add","","",70,[[["usize"]],["biguint"]]],[11,"add","","",70,[[["u32"]],["biguint"]]],[11,"add","","",70,[[["u32"]],["biguint"]]],[11,"add","","",70,[[["u16"]],["biguint"]]],[11,"add","","",70,[[["usize"]],["biguint"]]],[11,"add","","",70,[[["u8"]],["biguint"]]],[11,"add","","",70,[[["biguint"]],["biguint"]]],[11,"add","","",70,[[["biguint"]],["biguint"]]],[11,"add","","",70,[[["u16"]],["biguint"]]],[11,"add","","",70,[[["u128"]],["biguint"]]],[11,"add","","",70,[[["u64"]],["biguint"]]],[11,"add","","",70,[[["u8"]],["biguint"]]],[11,"add","","",70,[[["u128"]],["biguint"]]],[11,"zero","","",70,[[],["biguint"]]],[11,"set_zero","","",70,[[["self"]]]],[11,"is_zero","","",70,[[["self"]],["bool"]]],[11,"div","","",70,[[["u32"]],["biguint"]]],[11,"div","","",70,[[["u64"]],["biguint"]]],[11,"div","","",70,[[["u128"]],["biguint"]]],[11,"div","","",70,[[["biguint"]],["biguint"]]],[11,"div","","",70,[[["u32"]],["biguint"]]],[11,"div","","",70,[[["u128"]],["biguint"]]],[11,"div","","",70,[[["u8"]],["biguint"]]],[11,"div","","",70,[[["u64"]],["biguint"]]],[11,"div","","",70,[[["u16"]],["biguint"]]],[11,"div","","",70,[[["u16"]],["biguint"]]],[11,"div","","",70,[[["biguint"]],["biguint"]]],[11,"div","","",70,[[["u8"]],["biguint"]]],[11,"div","","",70,[[["usize"]],["biguint"]]],[11,"div","","",70,[[["usize"]],["biguint"]]],[11,"from_i64","","",70,[[["i64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_i128","","",70,[[["i128"]],[["option",["biguint"]],["biguint"]]]],[11,"from_u64","","",70,[[["u64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_u128","","",70,[[["u128"]],[["option",["biguint"]],["biguint"]]]],[11,"from_f64","","",70,[[["f64"]],[["option",["biguint"]],["biguint"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",70,[[],["biguint"]]],[11,"checked_mul","","",70,[[["self"],["biguint"]],[["option",["biguint"]],["biguint"]]]],[11,"eq","","",70,[[["self"],["biguint"]],["bool"]]],[11,"checked_sub","","",70,[[["self"],["biguint"]],[["option",["biguint"]],["biguint"]]]],[11,"product","","",70,[[["i"]],["biguint"]]],[11,"clone","","",70,[[["self"]],["biguint"]]],[11,"sum","","",70,[[["i"]],["biguint"]]],[11,"shl","","",70,[[["usize"]],["biguint"]]],[11,"bitand_assign","","",70,[[["self"],["biguint"]]]],[11,"bitand_assign","","",70,[[["self"],["biguint"]]]],[11,"to_bigint","","",70,[[["self"]],[["option",["bigint"]],["bigint"]]]],[11,"rem_assign","","",70,[[["self"],["u32"]]]],[11,"rem_assign","","",70,[[["self"],["usize"]]]],[11,"rem_assign","","",70,[[["self"],["u8"]]]],[11,"rem_assign","","",70,[[["self"],["biguint"]]]],[11,"rem_assign","","",70,[[["self"],["u128"]]]],[11,"rem_assign","","",70,[[["self"],["biguint"]]]],[11,"rem_assign","","",70,[[["u16"],["self"]]]],[11,"rem_assign","","",70,[[["self"],["u64"]]]],[11,"shr_assign","","",70,[[["self"],["usize"]]]],[11,"one","","",70,[[],["biguint"]]],[11,"set_one","","",70,[[["self"]]]],[11,"is_one","","",70,[[["self"]],["bool"]]],[11,"checked_add","","",70,[[["self"],["biguint"]],[["option",["biguint"]],["biguint"]]]],[11,"nth_root","","",70,[[["u32"],["self"]],["biguint"]]],[11,"sqrt","","",70,[[["self"]],["biguint"]]],[11,"cbrt","","",70,[[["self"]],["biguint"]]],[11,"sub","","",70,[[["u8"]],["biguint"]]],[11,"sub","","",70,[[["u32"]],["biguint"]]],[11,"sub","","",70,[[["u128"]],["biguint"]]],[11,"sub","","",70,[[["u64"]],["biguint"]]],[11,"sub","","",70,[[["u64"]],["biguint"]]],[11,"sub","","",70,[[["usize"]],["biguint"]]],[11,"sub","","",70,[[["u8"]],["biguint"]]],[11,"sub","","",70,[[["biguint"]],["biguint"]]],[11,"sub","","",70,[[["u32"]],["biguint"]]],[11,"sub","","",70,[[["biguint"]],["biguint"]]],[11,"sub","","",70,[[["usize"]],["biguint"]]],[11,"sub","","",70,[[["u16"]],["biguint"]]],[11,"sub","","",70,[[["u16"]],["biguint"]]],[11,"sub","","",70,[[["u128"]],["biguint"]]],[11,"div_rem","","",70,[[["self"],["biguint"]]]],[11,"div_floor","","",70,[[["self"],["biguint"]],["biguint"]]],[11,"mod_floor","","",70,[[["self"],["biguint"]],["biguint"]]],[11,"div_mod_floor","","",70,[[["self"],["biguint"]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",70,[[["self"],["biguint"]],["biguint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",70,[[["self"],["biguint"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",70,[[["self"],["biguint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",70,[[["self"],["biguint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",70,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",70,[[["self"]],["bool"]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from_str","","",70,[[["str"]],[["biguint"],["parsebiginterror"],["result",["biguint","parsebiginterror"]]]]],[11,"add_assign","","",70,[[["self"],["u128"]]]],[11,"add_assign","","",70,[[["self"],["u32"]]]],[11,"add_assign","","",70,[[["self"],["biguint"]]]],[11,"add_assign","","",70,[[["u16"],["self"]]]],[11,"add_assign","","",70,[[["self"],["biguint"]]]],[11,"add_assign","","",70,[[["self"],["u8"]]]],[11,"add_assign","","",70,[[["self"],["u64"]]]],[11,"add_assign","","",70,[[["self"],["usize"]]]],[11,"cmp","","",70,[[["self"],["biguint"]],["ordering"]]],[11,"neg","","",70,[[],["biguint"]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"bitand","","",70,[[["biguint"]],["biguint"]]],[11,"bitand","","",70,[[["biguint"]],["biguint"]]],[11,"shr","","",70,[[["usize"]],["biguint"]]],[11,"bitxor_assign","","",70,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",70,[[["self"],["biguint"]]]],[11,"to_biguint","","",70,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"bitor_assign","","",70,[[["self"],["biguint"]]]],[11,"bitor_assign","","",70,[[["self"],["biguint"]]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"sub_assign","","",70,[[["self"],["biguint"]]]],[11,"sub_assign","","",70,[[["self"],["u32"]]]],[11,"sub_assign","","",70,[[["self"],["u128"]]]],[11,"sub_assign","","",70,[[["self"],["u8"]]]],[11,"sub_assign","","",70,[[["self"],["u64"]]]],[11,"sub_assign","","",70,[[["u16"],["self"]]]],[11,"sub_assign","","",70,[[["self"],["usize"]]]],[11,"sub_assign","","",70,[[["self"],["biguint"]]]],[11,"bitor","","",70,[[["biguint"]],["biguint"]]],[11,"bitor","","",70,[[["biguint"]],["biguint"]]],[11,"bitxor","","",70,[[["biguint"]],["biguint"]]],[11,"bitxor","","",70,[[["biguint"]],["biguint"]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"rem","","",70,[[["u16"]],["biguint"]]],[11,"rem","","",70,[[["biguint"]],["biguint"]]],[11,"rem","","",70,[[["usize"]],["biguint"]]],[11,"rem","","",70,[[["u16"]],["biguint"]]],[11,"rem","","",70,[[["u8"]],["biguint"]]],[11,"rem","","",70,[[["biguint"]],["biguint"]]],[11,"rem","","",70,[[["usize"]],["biguint"]]],[11,"rem","","",70,[[["u32"]],["biguint"]]],[11,"rem","","",70,[[["u64"]],["biguint"]]],[11,"rem","","",70,[[["u64"]],["biguint"]]],[11,"rem","","",70,[[["u8"]],["biguint"]]],[11,"rem","","",70,[[["u32"]],["biguint"]]],[11,"rem","","",70,[[["u128"]],["biguint"]]],[11,"rem","","",70,[[["u128"]],["biguint"]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",70,[[["str"],["u32"]],[["biguint"],["parsebiginterror"],["result",["biguint","parsebiginterror"]]]]],[11,"checked_div","","",70,[[["self"],["biguint"]],[["option",["biguint"]],["biguint"]]]],[11,"mul","","",70,[[["biguint"]],["biguint"]]],[11,"mul","","",70,[[["usize"]],["biguint"]]],[11,"mul","","",70,[[["u16"]],["biguint"]]],[11,"mul","","",70,[[["usize"]],["biguint"]]],[11,"mul","","",70,[[["u16"]],["biguint"]]],[11,"mul","","",70,[[["u8"]],["biguint"]]],[11,"mul","","",70,[[["u64"]],["biguint"]]],[11,"mul","","",70,[[["u32"]],["biguint"]]],[11,"mul","","",70,[[["u32"]],["biguint"]]],[11,"mul","","",70,[[["u64"]],["biguint"]]],[11,"mul","","",70,[[["u8"]],["biguint"]]],[11,"mul","","",70,[[["u128"]],["biguint"]]],[11,"mul","","",70,[[["u128"]],["biguint"]]],[11,"mul","","",70,[[["biguint"]],["biguint"]]],[11,"shl_assign","","",70,[[["self"],["usize"]]]],[11,"partial_cmp","","",70,[[["self"],["biguint"]],[["option",["ordering"]],["ordering"]]]],[11,"from","","",70,[[["u64"]],["biguint"]]],[11,"from","","",70,[[["u8"]],["biguint"]]],[11,"from","","",70,[[["u32"]],["biguint"]]],[11,"from","","",70,[[["u16"]],["biguint"]]],[11,"from","","",70,[[["u128"]],["biguint"]]],[11,"from","","",70,[[["usize"]],["biguint"]]],[11,"fmt","","",82,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",83,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from","","",83,[[["sizenatexample"]],["sizenatfieldexample"]]],[11,"from","","",82,[[["biguint"]],["sizenatexample"]]],[11,"clone","","",83,[[["self"]],["sizenatfieldexample"]]],[11,"clone","","",82,[[["self"]],["sizenatexample"]]],[11,"add","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"add","","",83,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"rem","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"rem","","",83,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"div","","",83,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"div","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"fmt","","",83,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",82,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"into","","",83,[[],["sizenatexample"]]],[11,"into","","",82,[[],["biguint"]]],[11,"sub","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"sub","","",83,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"mul","","",83,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"mul","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"eq","","",82,[[["sizenatexample"],["self"]],["bool"]]],[11,"eq","","",83,[[["self"],["sizenatfieldexample"]],["bool"]]],[11,"ne","","",83,[[["self"],["sizenatfieldexample"]],["bool"]]],[11,"cmp","","",83,[[["self"],["sizenatfieldexample"]],["ordering"]]],[11,"cmp","","",82,[[["sizenatexample"],["self"]],["ordering"]]],[11,"partial_cmp","","",82,[[["sizenatexample"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",83,[[["self"],["sizenatfieldexample"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",83,[[["self"],["sizenatfieldexample"]],["bool"]]],[11,"le","","",83,[[["self"],["sizenatfieldexample"]],["bool"]]],[11,"gt","","",83,[[["self"],["sizenatfieldexample"]],["bool"]]],[11,"ge","","",83,[[["self"],["sizenatfieldexample"]],["bool"]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",67,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",61,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",64,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"add_assign","","",64,[[["i16"],["self"]]]],[11,"add_assign","","",59,[[["self"],["u16"]]]],[11,"add_assign","","",58,[[["self"],["u8"]]]],[11,"add_assign","","",63,[[["self"],["i8"]]]],[11,"add_assign","","",60,[[["self"],["u32"]]]],[11,"add_assign","","",65,[[["self"],["i32"]]]],[11,"add_assign","","",61,[[["self"],["u64"]]]],[11,"add_assign","","",66,[[["self"],["i64"]]]],[11,"add_assign","","",62,[[["self"],["u128"]]]],[11,"add_assign","","",67,[[["self"],["i128"]]]],[11,"from","","",67,[[["u128"]],["i128"]]],[11,"from","","",58,[[["u32"]],["u8"]]],[11,"from","","",63,[[["i16"]],["i8"]]],[11,"from","","",67,[[["i16"]],["i128"]]],[11,"from","","",59,[[["u64"]],["u16"]]],[11,"from","","",65,[[["i128"]],["i32"]]],[11,"from","","",58,[[["u64"]],["u8"]]],[11,"from","","",65,[[["i16"]],["i32"]]],[11,"from","","",58,[[["u8"]],["u8"]]],[11,"from","","",59,[[["u16"]],["u16"]]],[11,"from","","",63,[[["i64"]],["i8"]]],[11,"from","","",67,[[["i8"]],["i128"]]],[11,"from","","",62,[[["u8"]],["u128"]]],[11,"from","","",61,[[["u16"]],["u64"]]],[11,"from","","",63,[[["u8"]],["i8"]]],[11,"from","","",66,[[["i64"]],["i64"]]],[11,"from","","",67,[[["i32"]],["i128"]]],[11,"from","","",59,[[["u8"]],["u16"]]],[11,"from","","",61,[[["u64"]],["u64"]]],[11,"from","","",64,[[["u16"]],["i16"]]],[11,"from","","",60,[[["u32"]],["u32"]]],[11,"from","","",61,[[["u8"]],["u64"]]],[11,"from","","",60,[[["u16"]],["u32"]]],[11,"from","","",65,[[["i32"]],["i32"]]],[11,"from","","",66,[[["u64"]],["i64"]]],[11,"from","","",58,[[["u16"]],["u8"]]],[11,"from","","",64,[[["i32"]],["i16"]]],[11,"from","","",60,[[["u64"]],["u32"]]],[11,"from","","",62,[[["u128"]],["u128"]]],[11,"from","","",61,[[["u128"]],["u64"]]],[11,"from","","",64,[[["i8"]],["i16"]]],[11,"from","","",67,[[["i128"]],["i128"]]],[11,"from","","",65,[[["i8"]],["i32"]]],[11,"from","","",66,[[["i16"]],["i64"]]],[11,"from","","",66,[[["i128"]],["i64"]]],[11,"from","","",64,[[["i128"]],["i16"]]],[11,"from","","",62,[[["u16"]],["u128"]]],[11,"from","","",66,[[["i32"]],["i64"]]],[11,"from","","",63,[[["i128"]],["i8"]]],[11,"from","","",62,[[["u64"]],["u128"]]],[11,"from","","",60,[[["u128"]],["u32"]]],[11,"from","","",67,[[["i64"]],["i128"]]],[11,"from","","",59,[[["u32"]],["u16"]]],[11,"from","","",60,[[["u8"]],["u32"]]],[11,"from","","",65,[[["i64"]],["i32"]]],[11,"from","","",65,[[["u32"]],["i32"]]],[11,"from","","",61,[[["u32"]],["u64"]]],[11,"from","","",63,[[["i32"]],["i8"]]],[11,"from","","",63,[[["i8"]],["i8"]]],[11,"from","","",66,[[["i8"]],["i64"]]],[11,"from","","",59,[[["u128"]],["u16"]]],[11,"from","","",64,[[["i16"]],["i16"]]],[11,"from","","",62,[[["u32"]],["u128"]]],[11,"from","","",64,[[["i64"]],["i16"]]],[11,"from","","",58,[[["u128"]],["u8"]]],[11,"bitxor","","",64,[[["i16"]],["i16"]]],[11,"bitxor","","",59,[[["u16"]],["u16"]]],[11,"bitxor","","",63,[[["i8"]],["i8"]]],[11,"bitxor","","",67,[[["i128"]],["i128"]]],[11,"bitxor","","",62,[[["u128"]],["u128"]]],[11,"bitxor","","",58,[[["u8"]],["u8"]]],[11,"bitxor","","",61,[[["u64"]],["u64"]]],[11,"bitxor","","",65,[[["i32"]],["i32"]]],[11,"bitxor","","",66,[[["i64"]],["i64"]]],[11,"bitxor","","",60,[[["u32"]],["u32"]]],[11,"clone","","",67,[[["self"]],["i128"]]],[11,"clone","","",61,[[["self"]],["u64"]]],[11,"clone","","",64,[[["self"]],["i16"]]],[11,"clone","","",63,[[["self"]],["i8"]]],[11,"clone","","",60,[[["self"]],["u32"]]],[11,"clone","","",65,[[["self"]],["i32"]]],[11,"clone","","",66,[[["self"]],["i64"]]],[11,"clone","","",62,[[["self"]],["u128"]]],[11,"clone","","",58,[[["self"]],["u8"]]],[11,"clone","","",59,[[["self"]],["u16"]]],[11,"shl","","",60,[[["u32"]],["u32"]]],[11,"shl","","",58,[[["u32"]],["u8"]]],[11,"shl","","",62,[[["u32"]],["u128"]]],[11,"shl","","",64,[[["u32"]],["i16"]]],[11,"shl","","",63,[[["u32"]],["i8"]]],[11,"shl","","",66,[[["u32"]],["i64"]]],[11,"shl","","",65,[[["u32"]],["i32"]]],[11,"shl","","",61,[[["u32"]],["u64"]]],[11,"shl","","",59,[[["u32"]],["u16"]]],[11,"shl","","",67,[[["u32"]],["i128"]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",67,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",61,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",64,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"add","","",66,[[["i64"]],["i64"]]],[11,"add","","",58,[[["u8"]],["u8"]]],[11,"add","","",59,[[["u16"]],["u16"]]],[11,"add","","",67,[[["i128"]],["i128"]]],[11,"add","","",62,[[["u128"]],["u128"]]],[11,"add","","",60,[[["u32"]],["u32"]]],[11,"add","","",64,[[["i16"]],["i16"]]],[11,"add","","",65,[[["i32"]],["i32"]]],[11,"add","","",63,[[["i8"]],["i8"]]],[11,"add","","",61,[[["u64"]],["u64"]]],[11,"mul_assign","","",66,[[["self"],["i64"]]]],[11,"mul_assign","","",62,[[["self"],["u128"]]]],[11,"mul_assign","","",59,[[["self"],["u16"]]]],[11,"mul_assign","","",60,[[["self"],["u32"]]]],[11,"mul_assign","","",64,[[["i16"],["self"]]]],[11,"mul_assign","","",61,[[["self"],["u64"]]]],[11,"mul_assign","","",58,[[["self"],["u8"]]]],[11,"mul_assign","","",63,[[["self"],["i8"]]]],[11,"mul_assign","","",67,[[["self"],["i128"]]]],[11,"mul_assign","","",65,[[["self"],["i32"]]]],[11,"bitand","","",65,[[["i32"]],["i32"]]],[11,"bitand","","",67,[[["i128"]],["i128"]]],[11,"bitand","","",63,[[["i8"]],["i8"]]],[11,"bitand","","",58,[[["u8"]],["u8"]]],[11,"bitand","","",64,[[["i16"]],["i16"]]],[11,"bitand","","",60,[[["u32"]],["u32"]]],[11,"bitand","","",62,[[["u128"]],["u128"]]],[11,"bitand","","",61,[[["u64"]],["u64"]]],[11,"bitand","","",66,[[["i64"]],["i64"]]],[11,"bitand","","",59,[[["u16"]],["u16"]]],[11,"shr","","",66,[[["u32"]],["i64"]]],[11,"shr","","",61,[[["u32"]],["u64"]]],[11,"shr","","",65,[[["u32"]],["i32"]]],[11,"shr","","",60,[[["u32"]],["u32"]]],[11,"shr","","",62,[[["u32"]],["u128"]]],[11,"shr","","",58,[[["u32"]],["u8"]]],[11,"shr","","",64,[[["u32"]],["i16"]]],[11,"shr","","",63,[[["u32"]],["i8"]]],[11,"shr","","",67,[[["u32"]],["i128"]]],[11,"shr","","",59,[[["u32"]],["u16"]]],[11,"bitand_assign","","",59,[[["self"],["u16"]]]],[11,"bitand_assign","","",63,[[["self"],["i8"]]]],[11,"bitand_assign","","",64,[[["i16"],["self"]]]],[11,"bitand_assign","","",61,[[["self"],["u64"]]]],[11,"bitand_assign","","",58,[[["self"],["u8"]]]],[11,"bitand_assign","","",62,[[["self"],["u128"]]]],[11,"bitand_assign","","",65,[[["self"],["i32"]]]],[11,"bitand_assign","","",60,[[["self"],["u32"]]]],[11,"bitand_assign","","",67,[[["self"],["i128"]]]],[11,"bitand_assign","","",66,[[["self"],["i64"]]]],[11,"shr_assign","","",65,[[["self"],["u32"]]]],[11,"shr_assign","","",59,[[["self"],["u32"]]]],[11,"shr_assign","","",66,[[["self"],["u32"]]]],[11,"shr_assign","","",58,[[["self"],["u32"]]]],[11,"shr_assign","","",67,[[["self"],["u32"]]]],[11,"shr_assign","","",64,[[["self"],["u32"]]]],[11,"shr_assign","","",63,[[["self"],["u32"]]]],[11,"shr_assign","","",61,[[["self"],["u32"]]]],[11,"shr_assign","","",62,[[["self"],["u32"]]]],[11,"shr_assign","","",60,[[["self"],["u32"]]]],[11,"fmt","","",61,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",64,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",67,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",66,[[],["i64"]]],[11,"default","","",67,[[],["i128"]]],[11,"default","","",65,[[],["i32"]]],[11,"default","","",58,[[],["u8"]]],[11,"default","","",64,[[],["i16"]]],[11,"default","","",62,[[],["u128"]]],[11,"default","","",63,[[],["i8"]]],[11,"default","","",59,[[],["u16"]]],[11,"default","","",61,[[],["u64"]]],[11,"default","","",60,[[],["u32"]]],[11,"bitxor_assign","","",61,[[["self"],["u64"]]]],[11,"bitxor_assign","","",63,[[["self"],["i8"]]]],[11,"bitxor_assign","","",62,[[["self"],["u128"]]]],[11,"bitxor_assign","","",65,[[["self"],["i32"]]]],[11,"bitxor_assign","","",60,[[["self"],["u32"]]]],[11,"bitxor_assign","","",58,[[["self"],["u8"]]]],[11,"bitxor_assign","","",64,[[["i16"],["self"]]]],[11,"bitxor_assign","","",66,[[["self"],["i64"]]]],[11,"bitxor_assign","","",67,[[["self"],["i128"]]]],[11,"bitxor_assign","","",59,[[["self"],["u16"]]]],[11,"bitor_assign","","",59,[[["self"],["u16"]]]],[11,"bitor_assign","","",65,[[["self"],["i32"]]]],[11,"bitor_assign","","",58,[[["self"],["u8"]]]],[11,"bitor_assign","","",67,[[["self"],["i128"]]]],[11,"bitor_assign","","",64,[[["i16"],["self"]]]],[11,"bitor_assign","","",63,[[["self"],["i8"]]]],[11,"bitor_assign","","",60,[[["self"],["u32"]]]],[11,"bitor_assign","","",66,[[["self"],["i64"]]]],[11,"bitor_assign","","",62,[[["self"],["u128"]]]],[11,"bitor_assign","","",61,[[["self"],["u64"]]]],[11,"sub_assign","","",63,[[["self"],["i8"]]]],[11,"sub_assign","","",65,[[["self"],["i32"]]]],[11,"sub_assign","","",59,[[["self"],["u16"]]]],[11,"sub_assign","","",61,[[["self"],["u64"]]]],[11,"sub_assign","","",66,[[["self"],["i64"]]]],[11,"sub_assign","","",64,[[["i16"],["self"]]]],[11,"sub_assign","","",60,[[["self"],["u32"]]]],[11,"sub_assign","","",58,[[["self"],["u8"]]]],[11,"sub_assign","","",67,[[["self"],["i128"]]]],[11,"sub_assign","","",62,[[["self"],["u128"]]]],[11,"mul","","",62,[[["u128"]],["u128"]]],[11,"mul","","",67,[[["i128"]],["i128"]]],[11,"mul","","",59,[[["u16"]],["u16"]]],[11,"mul","","",61,[[["u64"]],["u64"]]],[11,"mul","","",60,[[["u32"]],["u32"]]],[11,"mul","","",58,[[["u8"]],["u8"]]],[11,"mul","","",65,[[["i32"]],["i32"]]],[11,"mul","","",64,[[["i16"]],["i16"]]],[11,"mul","","",66,[[["i64"]],["i64"]]],[11,"mul","","",63,[[["i8"]],["i8"]]],[11,"bitor","","",64,[[["i16"]],["i16"]]],[11,"bitor","","",59,[[["u16"]],["u16"]]],[11,"bitor","","",67,[[["i128"]],["i128"]]],[11,"bitor","","",61,[[["u64"]],["u64"]]],[11,"bitor","","",60,[[["u32"]],["u32"]]],[11,"bitor","","",58,[[["u8"]],["u8"]]],[11,"bitor","","",63,[[["i8"]],["i8"]]],[11,"bitor","","",62,[[["u128"]],["u128"]]],[11,"bitor","","",65,[[["i32"]],["i32"]]],[11,"bitor","","",66,[[["i64"]],["i64"]]],[11,"sub","","",61,[[["u64"]],["u64"]]],[11,"sub","","",63,[[["i8"]],["i8"]]],[11,"sub","","",64,[[["i16"]],["i16"]]],[11,"sub","","",67,[[["i128"]],["i128"]]],[11,"sub","","",62,[[["u128"]],["u128"]]],[11,"sub","","",60,[[["u32"]],["u32"]]],[11,"sub","","",59,[[["u16"]],["u16"]]],[11,"sub","","",66,[[["i64"]],["i64"]]],[11,"sub","","",65,[[["i32"]],["i32"]]],[11,"sub","","",58,[[["u8"]],["u8"]]],[11,"shl_assign","","",67,[[["self"],["u32"]]]],[11,"shl_assign","","",58,[[["self"],["u32"]]]],[11,"shl_assign","","",62,[[["self"],["u32"]]]],[11,"shl_assign","","",66,[[["self"],["u32"]]]],[11,"shl_assign","","",59,[[["self"],["u32"]]]],[11,"shl_assign","","",61,[[["self"],["u32"]]]],[11,"shl_assign","","",63,[[["self"],["u32"]]]],[11,"shl_assign","","",60,[[["self"],["u32"]]]],[11,"shl_assign","","",65,[[["self"],["u32"]]]],[11,"shl_assign","","",64,[[["self"],["u32"]]]],[11,"not","","",62,[[],["u128"]]],[11,"not","","",60,[[],["u32"]]],[11,"not","","",64,[[],["i16"]]],[11,"not","","",58,[[],["u8"]]],[11,"not","","",66,[[],["i64"]]],[11,"not","","",65,[[],["i32"]]],[11,"not","","",67,[[],["i128"]]],[11,"not","","",61,[[],["u64"]]],[11,"not","","",59,[[],["u16"]]],[11,"not","","",63,[[],["i8"]]],[11,"neg","","",58,[[],["u8"]]],[11,"neg","","",67,[[],["i128"]]],[11,"neg","","",64,[[],["i16"]]],[11,"neg","","",61,[[],["u64"]]],[11,"neg","","",62,[[],["u128"]]],[11,"neg","","",60,[[],["u32"]]],[11,"neg","","",63,[[],["i8"]]],[11,"neg","","",65,[[],["i32"]]],[11,"neg","","",59,[[],["u16"]]],[11,"neg","","",66,[[],["i64"]]],[11,"raw","hacspec","",69,[[["self"]]]],[11,"len","","",69,[[["self"]],["usize"]]],[11,"iter","","",69,[[["self"]],["iter"]]],[11,"raw","","",0,[[["self"]]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"iter","","",0,[[["self"]],[["u8"],["iter",["u8"]]]]],[11,"raw","","",1,[[["self"]]]],[11,"len","","",1,[[["self"]],["usize"]]],[11,"iter","","",1,[[["self"]],[["u8"],["iter",["u8"]]]]],[11,"raw","","",2,[[["self"]]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"iter","","",2,[[["self"]],[["u8"],["iter",["u8"]]]]],[11,"raw","","",3,[[["self"]]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"iter","","",3,[[["self"]],[["iter",["usize"]],["usize"]]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",1,[[["self"]]]],[11,"as_mut","","",2,[[["self"]]]],[11,"as_mut","","",3,[[["self"]]]],[11,"from","","",69,[[["vec"]],["seq"]]],[11,"from","","",69,[[["str"]],[["u8"],["seq",["u8"]]]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[["u8"],["vec",["u8"]]],["u32word"]]],[11,"from","","",0,[[["str"]],["u32word"]]],[11,"from","","",1,[[],["self"]]],[11,"from","","",1,[[["u8"],["vec",["u8"]]],["u128word"]]],[11,"from","","",1,[[["str"]],["u128word"]]],[11,"from","","",2,[[],["self"]]],[11,"from","","",2,[[["u8"],["vec",["u8"]]],["u64word"]]],[11,"from","","",2,[[["str"]],["u64word"]]],[11,"from","","",3,[[],["self"]]],[11,"from","","",3,[[["vec",["usize"]],["usize"]],["counter"]]],[11,"from","","",3,[[["str"]],["counter"]]],[11,"clone","","",69,[[["self"]],["seq"]]],[11,"clone","","",0,[[["self"]],["u32word"]]],[11,"clone","","",1,[[["self"]],["u128word"]]],[11,"clone","","",2,[[["self"]],["u64word"]]],[11,"clone","","",3,[[["self"]],["counter"]]],[11,"default","","",69,[[],["seq"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"eq","","",69,[[["seq"],["self"]],["bool"]]],[11,"ne","","",69,[[["seq"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"eq","","",2,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"index","","",69,[[["self"],["u8"]],["t"]]],[11,"index","","",69,[[["u32"],["self"]],["t"]]],[11,"index","","",69,[[["self"],["i32"]],["t"]]],[11,"index","","",69,[[["self"],["usize"]],["t"]]],[11,"index","","",0,[[["self"],["usize"]],["u8"]]],[11,"index","","",0,[[["self"],["u8"]],["u8"]]],[11,"index","","",0,[[["u32"],["self"]],["u8"]]],[11,"index","","",0,[[["self"],["i32"]],["u8"]]],[11,"index","","",0,[[["rangefull"],["self"]]]],[11,"index","","",1,[[["self"],["usize"]],["u8"]]],[11,"index","","",1,[[["self"],["u8"]],["u8"]]],[11,"index","","",1,[[["u32"],["self"]],["u8"]]],[11,"index","","",1,[[["self"],["i32"]],["u8"]]],[11,"index","","",1,[[["rangefull"],["self"]]]],[11,"index","","",2,[[["self"],["usize"]],["u8"]]],[11,"index","","",2,[[["self"],["u8"]],["u8"]]],[11,"index","","",2,[[["u32"],["self"]],["u8"]]],[11,"index","","",2,[[["self"],["i32"]],["u8"]]],[11,"index","","",2,[[["rangefull"],["self"]]]],[11,"index","","",3,[[["self"],["usize"]],["usize"]]],[11,"index","","",3,[[["self"],["u8"]],["usize"]]],[11,"index","","",3,[[["u32"],["self"]],["usize"]]],[11,"index","","",3,[[["self"],["i32"]],["usize"]]],[11,"index","","",3,[[["rangefull"],["self"]]]],[11,"index_mut","","",69,[[["self"],["u8"]],["t"]]],[11,"index_mut","","",69,[[["self"],["u32"]],["t"]]],[11,"index_mut","","",69,[[["self"],["i32"]],["t"]]],[11,"index_mut","","",69,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",0,[[["self"],["u8"]],["u8"]]],[11,"index_mut","","",0,[[["self"],["u32"]],["u8"]]],[11,"index_mut","","",0,[[["self"],["i32"]],["u8"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",1,[[["self"],["u8"]],["u8"]]],[11,"index_mut","","",1,[[["self"],["u32"]],["u8"]]],[11,"index_mut","","",1,[[["self"],["i32"]],["u8"]]],[11,"index_mut","","",2,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",2,[[["self"],["u8"]],["u8"]]],[11,"index_mut","","",2,[[["self"],["u32"]],["u8"]]],[11,"index_mut","","",2,[[["self"],["i32"]],["u8"]]],[11,"index_mut","","",3,[[["self"],["usize"]],["usize"]]],[11,"index_mut","","",3,[[["self"],["u8"]],["usize"]]],[11,"index_mut","","",3,[[["self"],["u32"]],["usize"]]],[11,"index_mut","","",3,[[["self"],["i32"]],["usize"]]],[11,"new","hacspec::prelude","Creates and initializes a `BigUint`.",70,[[["u32"],["vec",["u32"]]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",70,[[],["biguint"]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",70,[[["self"]]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",70,[[],["biguint"]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",70,[[],["biguint"]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",70,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",70,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",70,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",70,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",70,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",70,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",70,[[["u32"],["self"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",70,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",70,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",70,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",70,[[["self"],["biguint"]],["biguint"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",70,[[["self"]],["biguint"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",70,[[["self"]],["biguint"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",70,[[["u32"],["self"]],["biguint"]]],[11,"kind","","Outputs the detailed cause of parsing an integer failing.",71,[[["self"]],["interrorkind"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",37,[[["self"],["u"]],["bool"]]],[11,"is_empty","","Returns `true` if the range contains no items.",37,[[["self"]],["bool"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",38,[[["self"],["u"]],["bool"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",39,[[["self"],["u"]],["bool"]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",40,[[],["bound"]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",73,[[["idx"]],["rangeinclusive"]]],[11,"start","","Returns the lower bound of the range (inclusive).",73,[[["self"]],["idx"]]],[11,"end","","Returns the upper bound of the range (inclusive).",73,[[["self"]],["idx"]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",73,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",73,[[["self"],["u"]],["bool"]]],[11,"is_empty","","Returns `true` if the range contains no items.",73,[[["self"]],["bool"]]],[11,"contains","","Returns `true` if `item` is contained in the range.",42,[[["self"],["u"]],["bool"]]],[11,"entry","hacspec::prelude::fmt","Adds a new entry to the list output.",76,[[["self"],["debug"]],["debuglist"]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",76,[[["self"],["i"]],["debuglist"]]],[11,"finish","","Finishes output and returns any error encountered.",76,[[["self"]],[["error"],["result",["error"]]]]],[11,"entry","","Adds a new entry to the map output.",77,[[["self"],["debug"]],["debugmap"]]],[11,"key","","Adds the key part of a new entry to the map output.",77,[[["self"],["debug"]],["debugmap"]]],[11,"value","","Adds the value part of a new entry to the map output.",77,[[["self"],["debug"]],["debugmap"]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",77,[[["self"],["i"]],["debugmap"]]],[11,"finish","","Finishes output and returns any error encountered.",77,[[["self"]],[["error"],["result",["error"]]]]],[11,"entry","","Adds a new entry to the set output.",78,[[["self"],["debug"]],["debugset"]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",78,[[["self"],["i"]],["debugset"]]],[11,"finish","","Finishes output and returns any error encountered.",78,[[["self"]],[["error"],["result",["error"]]]]],[11,"field","","Adds a new field to the generated struct output.",79,[[["str"],["self"],["debug"]],["debugstruct"]]],[11,"finish","","Finishes output and returns any error encountered.",79,[[["self"]],[["error"],["result",["error"]]]]],[11,"field","","Adds a new field to the generated tuple struct output.",80,[[["self"],["debug"]],["debugtuple"]]],[11,"finish","","Finishes output and returns any error encountered.",80,[[["self"]],[["error"],["result",["error"]]]]],[11,"pad_integral","","Performs the correct padding for an integer which has…",81,[[["str"],["self"],["bool"]],[["error"],["result",["error"]]]]],[11,"pad","","This function takes a string slice and emits it to the…",81,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",81,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"write_fmt","","Writes some formatted information into this instance.",81,[[["self"],["arguments"]],[["error"],["result",["error"]]]]],[11,"flags","","Flags for formatting",81,[[["self"]],["u32"]]],[11,"fill","","Character used as 'fill' whenever there is alignment.",81,[[["self"]],["char"]]],[11,"align","","Flag indicating what form of alignment was requested.",81,[[["self"]],[["alignment"],["option",["alignment"]]]]],[11,"width","","Optionally specified integer width that the output should…",81,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"precision","","Optionally specified precision for numeric types.",81,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"sign_plus","","Determines if the `+` flag was specified.",81,[[["self"]],["bool"]]],[11,"sign_minus","","Determines if the `-` flag was specified.",81,[[["self"]],["bool"]]],[11,"alternate","","Determines if the `#` flag was specified.",81,[[["self"]],["bool"]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",81,[[["self"]],["bool"]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",81,[[["self"],["str"]],["debugstruct"]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",81,[[["self"],["str"]],["debugtuple"]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",81,[[["self"]],["debuglist"]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",81,[[["self"]],["debugset"]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",81,[[["self"]],["debugmap"]]],[11,"from_literal","hacspec::prelude","",82,[[["u128"]],["sizenatexample"]]],[11,"from_hex","","",82,[[["str"]],["sizenatexample"]]],[11,"from_bytes_le","","",82,[[],["sizenatexample"]]],[11,"to_bytes_le","","",82,[[],[["vec",["u8"]],["u8"]]]],[11,"pow2","","Returns 2 to the power of the argument",82,[[["usize"]],["sizenatexample"]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",82,[[["usize"]],["bool"]]],[11,"inv","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"pow_felem","","",82,[[["sizenatexample"]],["sizenatexample"]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",82,[[["sizenatexample"],["u128"]],["sizenatexample"]]],[11,"max","","",83,[[],["sizenatexample"]]],[11,"from_literal","","",83,[[["u128"]],["sizenatfieldexample"]]],[11,"from_hex","","",83,[[["str"]],["sizenatfieldexample"]]],[11,"inv","","",83,[[],["sizenatfieldexample"]]],[11,"pow_felem","","",83,[[["sizenatfieldexample"]],["sizenatfieldexample"]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",83,[[["u128"]],["sizenatfieldexample"]]],[11,"from_bytes_le","","",83,[[],["sizenatfieldexample"]]],[11,"to_bytes_le","","",83,[[],[["vec",["u8"]],["u8"]]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",83,[[["usize"]],["bool"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",58,[[["u8"]],["u8"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",58,[[["u8"]],["u8"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",58,[[["u8"]],["u8"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",58,[[["u8"]],["u8"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",58,[[["u8"]],["u8"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",58,[[["u8"]],["u8"]]],[11,"classify","","",58,[[["t"]],["u8"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",58,[[],["u8"]]],[11,"zero","","",58,[[],["u8"]]],[11,"one","","",58,[[],["u8"]]],[11,"ones","","",58,[[],["u8"]]],[11,"from_bytes_le","","",58,[[],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_le","","",58,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",58,[[],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_be","","",58,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",58,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",58,[[["u32"]],["u8"]]],[11,"rotate_right","","",58,[[["u32"]],["u8"]]],[11,"checked_add","","Warning: panics when overflow.",58,[[["u8"]],["u8"]]],[11,"checked_sub","","Warning: panics when overflow.",58,[[["u8"]],["u8"]]],[11,"checked_mul","","Warning: panics when overflow.",58,[[["u8"]],["u8"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",59,[[["u16"]],["u16"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",59,[[["u16"]],["u16"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",59,[[["u16"]],["u16"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",59,[[["u16"]],["u16"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",59,[[["u16"]],["u16"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",59,[[["u16"]],["u16"]]],[11,"classify","","",59,[[["t"]],["u16"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",59,[[],["u16"]]],[11,"zero","","",59,[[],["u16"]]],[11,"one","","",59,[[],["u16"]]],[11,"ones","","",59,[[],["u16"]]],[11,"from_bytes_le","","",59,[[],[["vec",["u16"]],["u16"]]]],[11,"to_bytes_le","","",59,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",59,[[],[["vec",["u16"]],["u16"]]]],[11,"to_bytes_be","","",59,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",59,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",59,[[["u32"]],["u16"]]],[11,"rotate_right","","",59,[[["u32"]],["u16"]]],[11,"checked_add","","Warning: panics when overflow.",59,[[["u16"]],["u16"]]],[11,"checked_sub","","Warning: panics when overflow.",59,[[["u16"]],["u16"]]],[11,"checked_mul","","Warning: panics when overflow.",59,[[["u16"]],["u16"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",60,[[["u32"]],["u32"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",60,[[["u32"]],["u32"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",60,[[["u32"]],["u32"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",60,[[["u32"]],["u32"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",60,[[["u32"]],["u32"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",60,[[["u32"]],["u32"]]],[11,"classify","","",60,[[["t"]],["u32"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",60,[[],["u32"]]],[11,"zero","","",60,[[],["u32"]]],[11,"one","","",60,[[],["u32"]]],[11,"ones","","",60,[[],["u32"]]],[11,"from_bytes_le","","",60,[[],[["u32"],["vec",["u32"]]]]],[11,"to_bytes_le","","",60,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",60,[[],[["u32"],["vec",["u32"]]]]],[11,"to_bytes_be","","",60,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",60,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",60,[[["u32"]],["u32"]]],[11,"rotate_right","","",60,[[["u32"]],["u32"]]],[11,"checked_add","","Warning: panics when overflow.",60,[[["u32"]],["u32"]]],[11,"checked_sub","","Warning: panics when overflow.",60,[[["u32"]],["u32"]]],[11,"checked_mul","","Warning: panics when overflow.",60,[[["u32"]],["u32"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",61,[[["u64"]],["u64"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",61,[[["u64"]],["u64"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",61,[[["u64"]],["u64"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",61,[[["u64"]],["u64"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",61,[[["u64"]],["u64"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",61,[[["u64"]],["u64"]]],[11,"classify","","",61,[[["t"]],["u64"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",61,[[],["u64"]]],[11,"zero","","",61,[[],["u64"]]],[11,"one","","",61,[[],["u64"]]],[11,"ones","","",61,[[],["u64"]]],[11,"from_bytes_le","","",61,[[],[["vec",["u64"]],["u64"]]]],[11,"to_bytes_le","","",61,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",61,[[],[["vec",["u64"]],["u64"]]]],[11,"to_bytes_be","","",61,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",61,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",61,[[["u32"]],["u64"]]],[11,"rotate_right","","",61,[[["u32"]],["u64"]]],[11,"checked_add","","Warning: panics when overflow.",61,[[["u64"]],["u64"]]],[11,"checked_sub","","Warning: panics when overflow.",61,[[["u64"]],["u64"]]],[11,"checked_mul","","Warning: panics when overflow.",61,[[["u64"]],["u64"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",62,[[["u128"]],["u128"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",62,[[["u128"]],["u128"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",62,[[["u128"]],["u128"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",62,[[["u128"]],["u128"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",62,[[["u128"]],["u128"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",62,[[["u128"]],["u128"]]],[11,"classify","","",62,[[["t"]],["u128"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",62,[[],["u128"]]],[11,"zero","","",62,[[],["u128"]]],[11,"one","","",62,[[],["u128"]]],[11,"ones","","",62,[[],["u128"]]],[11,"from_bytes_le","","",62,[[],[["vec",["u128"]],["u128"]]]],[11,"to_bytes_le","","",62,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",62,[[],[["vec",["u128"]],["u128"]]]],[11,"to_bytes_be","","",62,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",62,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",62,[[["u32"]],["u128"]]],[11,"rotate_right","","",62,[[["u32"]],["u128"]]],[11,"checked_add","","Warning: panics when overflow.",62,[[["u128"]],["u128"]]],[11,"checked_sub","","Warning: panics when overflow.",62,[[["u128"]],["u128"]]],[11,"checked_mul","","Warning: panics when overflow.",62,[[["u128"]],["u128"]]],[11,"classify","","",63,[[["t"]],["i8"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",63,[[],["i8"]]],[11,"zero","","",63,[[],["i8"]]],[11,"one","","",63,[[],["i8"]]],[11,"ones","","",63,[[],["i8"]]],[11,"from_bytes_le","","",63,[[],[["vec",["i8"]],["i8"]]]],[11,"to_bytes_le","","",63,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",63,[[],[["vec",["i8"]],["i8"]]]],[11,"to_bytes_be","","",63,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",63,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",63,[[["u32"]],["i8"]]],[11,"rotate_right","","",63,[[["u32"]],["i8"]]],[11,"checked_add","","Warning: panics when overflow.",63,[[["i8"]],["i8"]]],[11,"checked_sub","","Warning: panics when overflow.",63,[[["i8"]],["i8"]]],[11,"checked_mul","","Warning: panics when overflow.",63,[[["i8"]],["i8"]]],[11,"classify","","",64,[[["t"]],["i16"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",64,[[],["i16"]]],[11,"zero","","",64,[[],["i16"]]],[11,"one","","",64,[[],["i16"]]],[11,"ones","","",64,[[],["i16"]]],[11,"from_bytes_le","","",64,[[],[["i16"],["vec",["i16"]]]]],[11,"to_bytes_le","","",64,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",64,[[],[["i16"],["vec",["i16"]]]]],[11,"to_bytes_be","","",64,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",64,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",64,[[["u32"]],["i16"]]],[11,"rotate_right","","",64,[[["u32"]],["i16"]]],[11,"checked_add","","Warning: panics when overflow.",64,[[["i16"]],["i16"]]],[11,"checked_sub","","Warning: panics when overflow.",64,[[["i16"]],["i16"]]],[11,"checked_mul","","Warning: panics when overflow.",64,[[["i16"]],["i16"]]],[11,"classify","","",65,[[["t"]],["i32"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",65,[[],["i32"]]],[11,"zero","","",65,[[],["i32"]]],[11,"one","","",65,[[],["i32"]]],[11,"ones","","",65,[[],["i32"]]],[11,"from_bytes_le","","",65,[[],[["vec",["i32"]],["i32"]]]],[11,"to_bytes_le","","",65,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",65,[[],[["vec",["i32"]],["i32"]]]],[11,"to_bytes_be","","",65,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",65,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",65,[[["u32"]],["i32"]]],[11,"rotate_right","","",65,[[["u32"]],["i32"]]],[11,"checked_add","","Warning: panics when overflow.",65,[[["i32"]],["i32"]]],[11,"checked_sub","","Warning: panics when overflow.",65,[[["i32"]],["i32"]]],[11,"checked_mul","","Warning: panics when overflow.",65,[[["i32"]],["i32"]]],[11,"classify","","",66,[[["t"]],["i64"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",66,[[],["i64"]]],[11,"zero","","",66,[[],["i64"]]],[11,"one","","",66,[[],["i64"]]],[11,"ones","","",66,[[],["i64"]]],[11,"from_bytes_le","","",66,[[],[["i64"],["vec",["i64"]]]]],[11,"to_bytes_le","","",66,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",66,[[],[["i64"],["vec",["i64"]]]]],[11,"to_bytes_be","","",66,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",66,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",66,[[["u32"]],["i64"]]],[11,"rotate_right","","",66,[[["u32"]],["i64"]]],[11,"checked_add","","Warning: panics when overflow.",66,[[["i64"]],["i64"]]],[11,"checked_sub","","Warning: panics when overflow.",66,[[["i64"]],["i64"]]],[11,"checked_mul","","Warning: panics when overflow.",66,[[["i64"]],["i64"]]],[11,"classify","","",67,[[["t"]],["i128"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",67,[[],["i128"]]],[11,"zero","","",67,[[],["i128"]]],[11,"one","","",67,[[],["i128"]]],[11,"ones","","",67,[[],["i128"]]],[11,"from_bytes_le","","",67,[[],[["i128"],["vec",["i128"]]]]],[11,"to_bytes_le","","",67,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",67,[[],[["i128"],["vec",["i128"]]]]],[11,"to_bytes_be","","",67,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",67,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rotate_left","","",67,[[["u32"]],["i128"]]],[11,"rotate_right","","",67,[[["u32"]],["i128"]]],[11,"checked_add","","Warning: panics when overflow.",67,[[["i128"]],["i128"]]],[11,"checked_sub","","Warning: panics when overflow.",67,[[["i128"]],["i128"]]],[11,"checked_mul","","Warning: panics when overflow.",67,[[["i128"]],["i128"]]]],"p":[[3,"U32Word"],[3,"U128Word"],[3,"U64Word"],[3,"Counter"],[8,"Num"],[8,"Zero"],[8,"CheckedSub"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[8,"PartialEq"],[4,"Alignment"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[3,"U8"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"U128"],[3,"I8"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"I128"],[8,"SeqTrait"],[3,"Seq"],[3,"BigUint"],[3,"ParseIntError"],[3,"RangeFull"],[3,"RangeInclusive"],[3,"Error"],[3,"Arguments"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"],[3,"SizeNatExample"],[3,"SizeNatFieldExample"]]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",82,null],[12,"svm_reserved1","","",82,null],[12,"svm_port","","",82,null],[12,"svm_cid","","",82,null],[12,"svm_zero","","",82,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",83,null],[12,"nl_pid","","",83,null],[12,"nl_groups","","",83,null],[3,"dirent","","",null,null],[12,"d_ino","","",84,null],[12,"d_off","","",84,null],[12,"d_reclen","","",84,null],[12,"d_type","","",84,null],[12,"d_name","","",84,null],[3,"dirent64","","",null,null],[12,"d_ino","","",85,null],[12,"d_off","","",85,null],[12,"d_reclen","","",85,null],[12,"d_type","","",85,null],[12,"d_name","","",85,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",86,null],[12,"salg_type","","",86,null],[12,"salg_feat","","",86,null],[12,"salg_mask","","",86,null],[12,"salg_name","","",86,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",87,null],[12,"iv","","",87,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",88,null],[12,"mq_maxmsg","","",88,null],[12,"mq_msgsize","","",88,null],[12,"mq_curmsgs","","",88,null],[3,"statx","","",null,null],[12,"stx_mask","","",89,null],[12,"stx_blksize","","",89,null],[12,"stx_attributes","","",89,null],[12,"stx_nlink","","",89,null],[12,"stx_uid","","",89,null],[12,"stx_gid","","",89,null],[12,"stx_mode","","",89,null],[12,"__statx_pad1","","",89,null],[12,"stx_ino","","",89,null],[12,"stx_size","","",89,null],[12,"stx_blocks","","",89,null],[12,"stx_attributes_mask","","",89,null],[12,"stx_atime","","",89,null],[12,"stx_btime","","",89,null],[12,"stx_ctime","","",89,null],[12,"stx_mtime","","",89,null],[12,"stx_rdev_major","","",89,null],[12,"stx_rdev_minor","","",89,null],[12,"stx_dev_major","","",89,null],[12,"stx_dev_minor","","",89,null],[12,"__statx_pad2","","",89,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",90,null],[12,"tv_nsec","","",90,null],[12,"__statx_timestamp_pad1","","",90,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",91,null],[12,"aio_lio_opcode","","",91,null],[12,"aio_reqprio","","",91,null],[12,"aio_buf","","",91,null],[12,"aio_nbytes","","",91,null],[12,"aio_sigevent","","",91,null],[12,"aio_offset","","",91,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",92,null],[12,"e_exit","","",92,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_usec","","",93,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",94,null],[12,"gl_pathv","","",94,null],[12,"gl_offs","","",94,null],[12,"gl_flags","","",94,null],[3,"msghdr","","",null,null],[12,"msg_name","","",95,null],[12,"msg_namelen","","",95,null],[12,"msg_iov","","",95,null],[12,"msg_iovlen","","",95,null],[12,"msg_control","","",95,null],[12,"msg_controllen","","",95,null],[12,"msg_flags","","",95,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",96,null],[12,"cmsg_level","","",96,null],[12,"cmsg_type","","",96,null],[3,"termios","","",null,null],[12,"c_iflag","","",97,null],[12,"c_oflag","","",97,null],[12,"c_cflag","","",97,null],[12,"c_lflag","","",97,null],[12,"c_line","","",97,null],[12,"c_cc","","",97,null],[12,"c_ispeed","","",97,null],[12,"c_ospeed","","",97,null],[3,"mallinfo","","",null,null],[12,"arena","","",98,null],[12,"ordblks","","",98,null],[12,"smblks","","",98,null],[12,"hblks","","",98,null],[12,"hblkhd","","",98,null],[12,"usmblks","","",98,null],[12,"fsmblks","","",98,null],[12,"uordblks","","",98,null],[12,"fordblks","","",98,null],[12,"keepcost","","",98,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",99,null],[12,"nlmsg_type","","",99,null],[12,"nlmsg_flags","","",99,null],[12,"nlmsg_seq","","",99,null],[12,"nlmsg_pid","","",99,null],[3,"nlmsgerr","","",null,null],[12,"error","","",100,null],[12,"msg","","",100,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",101,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",102,null],[12,"nm_block_nr","","",102,null],[12,"nm_frame_size","","",102,null],[12,"nm_frame_nr","","",102,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",103,null],[12,"nm_len","","",103,null],[12,"nm_group","","",103,null],[12,"nm_pid","","",103,null],[12,"nm_uid","","",103,null],[12,"nm_gid","","",103,null],[3,"nlattr","","",null,null],[12,"nla_len","","",104,null],[12,"nla_type","","",104,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",105,null],[12,"rt_dst","","",105,null],[12,"rt_gateway","","",105,null],[12,"rt_genmask","","",105,null],[12,"rt_flags","","",105,null],[12,"rt_pad2","","",105,null],[12,"rt_pad3","","",105,null],[12,"rt_tos","","",105,null],[12,"rt_class","","",105,null],[12,"rt_pad4","","",105,null],[12,"rt_metric","","",105,null],[12,"rt_dev","","",105,null],[12,"rt_mtu","","",105,null],[12,"rt_window","","",105,null],[12,"rt_irtt","","",105,null],[3,"utmpx","","",null,null],[12,"ut_type","","",106,null],[12,"ut_pid","","",106,null],[12,"ut_line","","",106,null],[12,"ut_id","","",106,null],[12,"ut_user","","",106,null],[12,"ut_host","","",106,null],[12,"ut_exit","","",106,null],[12,"ut_session","","",106,null],[12,"ut_tv","","",106,null],[12,"ut_addr_v6","","",106,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",107,null],[12,"loads","","",107,null],[12,"totalram","","",107,null],[12,"freeram","","",107,null],[12,"sharedram","","",107,null],[12,"bufferram","","",107,null],[12,"totalswap","","",107,null],[12,"freeswap","","",107,null],[12,"procs","","",107,null],[12,"pad","","",107,null],[12,"totalhigh","","",107,null],[12,"freehigh","","",107,null],[12,"mem_unit","","",107,null],[12,"_f","","",107,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",108,null],[12,"msg_stime","","",108,null],[12,"msg_rtime","","",108,null],[12,"msg_ctime","","",108,null],[12,"msg_qnum","","",108,null],[12,"msg_qbytes","","",108,null],[12,"msg_lspid","","",108,null],[12,"msg_lrpid","","",108,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",109,null],[12,"sa_mask","","",109,null],[12,"sa_flags","","",109,null],[12,"sa_restorer","","",109,null],[3,"statfs","","",null,null],[12,"f_type","","",110,null],[12,"f_bsize","","",110,null],[12,"f_blocks","","",110,null],[12,"f_bfree","","",110,null],[12,"f_bavail","","",110,null],[12,"f_files","","",110,null],[12,"f_ffree","","",110,null],[12,"f_fsid","","",110,null],[12,"f_namelen","","",110,null],[12,"f_frsize","","",110,null],[3,"flock","","",null,null],[12,"l_type","","",111,null],[12,"l_whence","","",111,null],[12,"l_start","","",111,null],[12,"l_len","","",111,null],[12,"l_pid","","",111,null],[3,"flock64","","",null,null],[12,"l_type","","",112,null],[12,"l_whence","","",112,null],[12,"l_start","","",112,null],[12,"l_len","","",112,null],[12,"l_pid","","",112,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",113,null],[12,"si_errno","","",113,null],[12,"si_code","","",113,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",114,null],[12,"ss_flags","","",114,null],[12,"ss_size","","",114,null],[3,"stat","","",null,null],[12,"st_dev","","",115,null],[12,"st_ino","","",115,null],[12,"st_nlink","","",115,null],[12,"st_mode","","",115,null],[12,"st_uid","","",115,null],[12,"st_gid","","",115,null],[12,"st_rdev","","",115,null],[12,"st_size","","",115,null],[12,"st_blksize","","",115,null],[12,"st_blocks","","",115,null],[12,"st_atime","","",115,null],[12,"st_atime_nsec","","",115,null],[12,"st_mtime","","",115,null],[12,"st_mtime_nsec","","",115,null],[12,"st_ctime","","",115,null],[12,"st_ctime_nsec","","",115,null],[3,"stat64","","",null,null],[12,"st_dev","","",116,null],[12,"st_ino","","",116,null],[12,"st_nlink","","",116,null],[12,"st_mode","","",116,null],[12,"st_uid","","",116,null],[12,"st_gid","","",116,null],[12,"st_rdev","","",116,null],[12,"st_size","","",116,null],[12,"st_blksize","","",116,null],[12,"st_blocks","","",116,null],[12,"st_atime","","",116,null],[12,"st_atime_nsec","","",116,null],[12,"st_mtime","","",116,null],[12,"st_mtime_nsec","","",116,null],[12,"st_ctime","","",116,null],[12,"st_ctime_nsec","","",116,null],[3,"statfs64","","",null,null],[12,"f_type","","",117,null],[12,"f_bsize","","",117,null],[12,"f_blocks","","",117,null],[12,"f_bfree","","",117,null],[12,"f_bavail","","",117,null],[12,"f_files","","",117,null],[12,"f_ffree","","",117,null],[12,"f_fsid","","",117,null],[12,"f_namelen","","",117,null],[12,"f_frsize","","",117,null],[12,"f_flags","","",117,null],[12,"f_spare","","",117,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",118,null],[12,"f_frsize","","",118,null],[12,"f_blocks","","",118,null],[12,"f_bfree","","",118,null],[12,"f_bavail","","",118,null],[12,"f_files","","",118,null],[12,"f_ffree","","",118,null],[12,"f_favail","","",118,null],[12,"f_fsid","","",118,null],[12,"f_flag","","",118,null],[12,"f_namemax","","",118,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",119,null],[12,"exponent","","",119,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",120,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",121,null],[12,"swd","","",121,null],[12,"ftw","","",121,null],[12,"fop","","",121,null],[12,"rip","","",121,null],[12,"rdp","","",121,null],[12,"mxcsr","","",121,null],[12,"mxcr_mask","","",121,null],[12,"_st","","",121,null],[12,"_xmm","","",121,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",122,null],[12,"r14","","",122,null],[12,"r13","","",122,null],[12,"r12","","",122,null],[12,"rbp","","",122,null],[12,"rbx","","",122,null],[12,"r11","","",122,null],[12,"r10","","",122,null],[12,"r9","","",122,null],[12,"r8","","",122,null],[12,"rax","","",122,null],[12,"rcx","","",122,null],[12,"rdx","","",122,null],[12,"rsi","","",122,null],[12,"rdi","","",122,null],[12,"orig_rax","","",122,null],[12,"rip","","",122,null],[12,"cs","","",122,null],[12,"eflags","","",122,null],[12,"rsp","","",122,null],[12,"ss","","",122,null],[12,"fs_base","","",122,null],[12,"gs_base","","",122,null],[12,"ds","","",122,null],[12,"es","","",122,null],[12,"fs","","",122,null],[12,"gs","","",122,null],[3,"user","","",null,null],[12,"regs","","",123,null],[12,"u_fpvalid","","",123,null],[12,"i387","","",123,null],[12,"u_tsize","","",123,null],[12,"u_dsize","","",123,null],[12,"u_ssize","","",123,null],[12,"start_code","","",123,null],[12,"start_stack","","",123,null],[12,"signal","","",123,null],[12,"u_ar0","","",123,null],[12,"u_fpstate","","",123,null],[12,"magic","","",123,null],[12,"u_comm","","",123,null],[12,"u_debugreg","","",123,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",124,null],[12,"fpregs","","",124,null],[3,"ipc_perm","","",null,null],[12,"__key","","",125,null],[12,"uid","","",125,null],[12,"gid","","",125,null],[12,"cuid","","",125,null],[12,"cgid","","",125,null],[12,"mode","","",125,null],[12,"__seq","","",125,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",126,null],[12,"shm_segsz","","",126,null],[12,"shm_atime","","",126,null],[12,"shm_dtime","","",126,null],[12,"shm_ctime","","",126,null],[12,"shm_cpid","","",126,null],[12,"shm_lpid","","",126,null],[12,"shm_nattch","","",126,null],[3,"termios2","","",null,null],[12,"c_iflag","","",127,null],[12,"c_oflag","","",127,null],[12,"c_cflag","","",127,null],[12,"c_lflag","","",127,null],[12,"c_line","","",127,null],[12,"c_cc","","",127,null],[12,"c_ispeed","","",127,null],[12,"c_ospeed","","",127,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",128,null],[12,"imr_address","","",128,null],[12,"imr_ifindex","","",128,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",129,null],[12,"swd","","",129,null],[12,"ftw","","",129,null],[12,"fop","","",129,null],[12,"rip","","",129,null],[12,"rdp","","",129,null],[12,"mxcsr","","",129,null],[12,"mxcr_mask","","",129,null],[12,"st_space","","",129,null],[12,"xmm_space","","",129,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",130,null],[12,"uc_link","","",130,null],[12,"uc_stack","","",130,null],[12,"uc_mcontext","","",130,null],[12,"uc_sigmask","","",130,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",131,null],[12,"f_frsize","","",131,null],[12,"f_blocks","","",131,null],[12,"f_bfree","","",131,null],[12,"f_bavail","","",131,null],[12,"f_files","","",131,null],[12,"f_ffree","","",131,null],[12,"f_favail","","",131,null],[12,"f_fsid","","",131,null],[12,"f_flag","","",131,null],[12,"f_namemax","","",131,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",132,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["usize"],["cpu_set_t"]]]],[5,"CPU_CLR","","",null,[[["usize"],["cpu_set_t"]]]],[5,"CPU_ISSET","","",null,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",113,[[["self"]]]],[11,"si_value","","",113,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"fmt","","",133,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",150,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",151,[[["self"]],["file"]]],[11,"clone","","",152,[[["self"]],["fpos_t"]]],[11,"clone","","",153,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",134,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",135,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["epoll_event"]]],[11,"clone","","",36,[[["self"]],["sockaddr_un"]]],[11,"clone","","",37,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",38,[[["self"]],["utsname"]]],[11,"clone","","",39,[[["self"]],["sigevent"]]],[11,"clone","","",154,[[["self"]],["fpos64_t"]]],[11,"clone","","",40,[[["self"]],["rlimit64"]]],[11,"clone","","",41,[[["self"]],["glob_t"]]],[11,"clone","","",42,[[["self"]],["passwd"]]],[11,"clone","","",43,[[["self"]],["spwd"]]],[11,"clone","","",44,[[["self"]],["dqblk"]]],[11,"clone","","",45,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",46,[[["self"]],["itimerspec"]]],[11,"clone","","",136,[[["self"]],["fsid_t"]]],[11,"clone","","",47,[[["self"]],["packet_mreq"]]],[11,"clone","","",137,[[["self"]],["cpu_set_t"]]],[11,"clone","","",48,[[["self"]],["if_nameindex"]]],[11,"clone","","",49,[[["self"]],["msginfo"]]],[11,"clone","","",50,[[["self"]],["sembuf"]]],[11,"clone","","",51,[[["self"]],["input_event"]]],[11,"clone","","",52,[[["self"]],["input_id"]]],[11,"clone","","",53,[[["self"]],["input_absinfo"]]],[11,"clone","","",54,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",55,[[["self"]],["input_mask"]]],[11,"clone","","",56,[[["self"]],["ff_replay"]]],[11,"clone","","",57,[[["self"]],["ff_trigger"]]],[11,"clone","","",58,[[["self"]],["ff_envelope"]]],[11,"clone","","",59,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",60,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",61,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",62,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",63,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",64,[[["self"]],["ff_effect"]]],[11,"clone","","",65,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",66,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",67,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf32_sym"]]],[11,"clone","","",69,[[["self"]],["elf64_sym"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["elf32_shdr"]]],[11,"clone","","",73,[[["self"]],["elf64_shdr"]]],[11,"clone","","",74,[[["self"]],["elf32_chdr"]]],[11,"clone","","",75,[[["self"]],["elf64_chdr"]]],[11,"clone","","",76,[[["self"]],["ucred"]]],[11,"clone","","",77,[[["self"]],["mntent"]]],[11,"clone","","",138,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",139,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",78,[[["self"]],["genlmsghdr"]]],[11,"clone","","",79,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",80,[[["self"]],["arpd_request"]]],[11,"clone","","",81,[[["self"]],["inotify_event"]]],[11,"clone","","",82,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",83,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",84,[[["self"]],["dirent"]]],[11,"clone","","",85,[[["self"]],["dirent64"]]],[11,"clone","","",86,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",87,[[["self"]],["af_alg_iv"]]],[11,"clone","","",88,[[["self"]],["mq_attr"]]],[11,"clone","","",89,[[["self"]],["statx"]]],[11,"clone","","",90,[[["self"]],["statx_timestamp"]]],[11,"clone","","",91,[[["self"]],["aiocb"]]],[11,"clone","","",92,[[["self"]],["__exit_status"]]],[11,"clone","","",93,[[["self"]],["__timeval"]]],[11,"clone","","",94,[[["self"]],["glob64_t"]]],[11,"clone","","",95,[[["self"]],["msghdr"]]],[11,"clone","","",96,[[["self"]],["cmsghdr"]]],[11,"clone","","",97,[[["self"]],["termios"]]],[11,"clone","","",98,[[["self"]],["mallinfo"]]],[11,"clone","","",99,[[["self"]],["nlmsghdr"]]],[11,"clone","","",100,[[["self"]],["nlmsgerr"]]],[11,"clone","","",101,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",102,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",104,[[["self"]],["nlattr"]]],[11,"clone","","",105,[[["self"]],["rtentry"]]],[11,"clone","","",106,[[["self"]],["utmpx"]]],[11,"clone","","",140,[[["self"]],["sigset_t"]]],[11,"clone","","",107,[[["self"]],["sysinfo"]]],[11,"clone","","",108,[[["self"]],["msqid_ds"]]],[11,"clone","","",109,[[["self"]],["sigaction"]]],[11,"clone","","",110,[[["self"]],["statfs"]]],[11,"clone","","",111,[[["self"]],["flock"]]],[11,"clone","","",112,[[["self"]],["flock64"]]],[11,"clone","","",113,[[["self"]],["siginfo_t"]]],[11,"clone","","",114,[[["self"]],["stack_t"]]],[11,"clone","","",115,[[["self"]],["stat"]]],[11,"clone","","",116,[[["self"]],["stat64"]]],[11,"clone","","",117,[[["self"]],["statfs64"]]],[11,"clone","","",118,[[["self"]],["statvfs64"]]],[11,"clone","","",141,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",119,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",120,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",121,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",122,[[["self"]],["user_regs_struct"]]],[11,"clone","","",123,[[["self"]],["user"]]],[11,"clone","","",124,[[["self"]],["mcontext_t"]]],[11,"clone","","",125,[[["self"]],["ipc_perm"]]],[11,"clone","","",126,[[["self"]],["shmid_ds"]]],[11,"clone","","",127,[[["self"]],["termios2"]]],[11,"clone","","",128,[[["self"]],["ip_mreqn"]]],[11,"clone","","",129,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",130,[[["self"]],["ucontext_t"]]],[11,"clone","","",131,[[["self"]],["statvfs"]]],[11,"clone","","",142,[[["self"]],["max_align_t"]]],[11,"clone","","",143,[[["self"]],["sem_t"]]],[11,"clone","","",144,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",145,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",146,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",147,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",148,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",149,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",132,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",1,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[["self"]],["self"]]],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[["a"]],["rangestepinclusive"]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[],["self"]]],[10,"infinity","","Returns the infinite value.",2,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",2,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",2,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",2,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",2,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",2,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",2,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",2,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",2,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",2,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",2,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",2,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",2,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",2,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",2,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",2,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[5,"abs","","Computes the absolute value.",null,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["t"]],["t"]]],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[5,"cast","num","Cast from one machine scalar to another.",null,[[["t"]],["option"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["t"],["usize"]],["option"]]],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["t"]],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["t"]]],[0,"pow","","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[["rhs"]]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["t"],["usize"]],["option"]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation…",null,[[["t"],["usize"]],["t"]]],[5,"signum","","Returns the sign of the number.",null,[[["t"]],["t"]]],[5,"zero","","Returns the additive identity, `0`.",null,[[],["t"]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[["self"]],["option"]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",13,[[["str"],["u32"]],["result"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[["self"]],["bool"]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",15,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",15,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",15,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",15,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[["u32"]],["self"]]],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[],["self"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",17,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[["self"]],["bool"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[["self"]],["bool"]]],[0,"bigint","","",null,null],[3,"ParseBigIntError","num::bigint","",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",19,[[["self"]],[["option",["biguint"]],["biguint"]]]],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",20,null],[13,"NoSign","","",20,null],[13,"Plus","","",20,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",21,[[["self"]],[["bigint"],["option",["bigint"]]]]],[0,"complex","num","",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[3,"ParseComplexError","","",null,null],[0,"integer","num","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",1,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",1,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[["self"]],["self"]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",22,null],[12,"x","","",22,null],[12,"y","","",22,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["t"]]]],[5,"div_floor","","Floored integer division",null,[[["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",null,[[["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["t"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["t"]],["t"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["t"]],["t"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["t"]]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"binomial","","Calculate the binomial coefficient.",null,[[["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],["t"]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",23,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",23,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",23,[[["self"]],["self"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["u32"],["t"]],["t"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["t"]],["t"]]],[0,"iter","num","",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[["a"]],["range"]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[["a"]],["rangeinclusive"]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[["a"]],["rangestep"]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[["a"]],["rangestepinclusive"]]],[0,"traits","num","",null,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[],["self"]]],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num::traits","",null,null],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",24,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",24,[[],["self"]]],[10,"nan","","Returns NaN.",24,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",24,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",24,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",24,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",24,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",24,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",24,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",24,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",24,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",24,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",24,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",24,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",24,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",24,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",24,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",24,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",24,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",24,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",24,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",24,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",24,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",24,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",24,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",24,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",24,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",24,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",24,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[],["self"]]],[10,"infinity","","Returns the infinite value.",2,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",2,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",2,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",2,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",2,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",2,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",2,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",2,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",2,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",2,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",2,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",2,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",2,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",2,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",2,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",2,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",25,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",25,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",25,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",25,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",25,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",25,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",25,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",25,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",25,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",25,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",25,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",25,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",25,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",25,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",25,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",25,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",25,[[],["self"]]],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",null,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["t"]]],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",15,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",15,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",15,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",15,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[["u32"]],["self"]]],[0,"ops","num::traits","",null,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",26,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",27,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",28,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",29,[[["u32"],["self"]],["option"]]],[0,"inv","num::traits::ops","",null,null],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"inv","","Returns the multiplicative inverse of `self`.",30,[[]]],[0,"mul_add","num::traits::ops","",null,null],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",31,null],[10,"mul_add","","Performs the fused multiply-add operation.",31,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",32,[[["a"],["self"],["b"]]]],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[],["self"]]],[0,"wrapping","num::traits::ops","",null,null],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",33,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",34,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",35,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",36,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",37,[[["u32"],["self"]],["self"]]],[0,"pow","num::traits","",null,null],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[["rhs"]]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["t"],["usize"]],["option"]]],[0,"real","num::traits","",null,null],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",38,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",38,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",38,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",38,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",38,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",38,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",38,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",38,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",38,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",38,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",38,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",38,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",38,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",38,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",38,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",38,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",38,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",38,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",38,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",38,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",38,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",38,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",38,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",38,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",38,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",38,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",38,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",38,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",38,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",38,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",38,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",38,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",38,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",38,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",38,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",38,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",38,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",38,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",38,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",38,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",38,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",38,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",38,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",38,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",38,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",38,[[],["self"]]],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",17,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",null,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",null,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",13,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",39,null],[13,"Invalid","","",39,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",40,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["t"]],["t"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["t"]],["t"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["t"]],["t"]]],[0,"rational","num","",null,null],[3,"Ratio","num::rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[3,"ParseRatioError","","",null,null],[11,"from","num::bigint","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"from","num::complex","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","num::bigint","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"from","num::complex","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"from","num::integer","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","num::iter","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"from","num::traits","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"from","num::rational","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"fmt","num::bigint","",20,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",43,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"div_assign","","",41,[[["self"],["i32"]]]],[11,"div_assign","","",42,[[["self"],["biguint"]]]],[11,"div_assign","","",41,[[["self"],["u64"]]]],[11,"div_assign","","",42,[[["self"],["biguint"]]]],[11,"div_assign","","",41,[[["self"],["i8"]]]],[11,"div_assign","","",41,[[["self"],["u128"]]]],[11,"div_assign","","",41,[[["self"],["usize"]]]],[11,"div_assign","","",41,[[["self"],["u8"]]]],[11,"div_assign","","",42,[[["self"],["u64"]]]],[11,"div_assign","","",41,[[["self"],["i16"]]]],[11,"div_assign","","",41,[[["i64"],["self"]]]],[11,"div_assign","","",42,[[["self"],["u128"]]]],[11,"div_assign","","",42,[[["self"],["u8"]]]],[11,"div_assign","","",42,[[["self"],["usize"]]]],[11,"div_assign","","",42,[[["self"],["u32"]]]],[11,"div_assign","","",41,[[["self"],["u32"]]]],[11,"div_assign","","",41,[[["self"],["i128"]]]],[11,"div_assign","","",42,[[["u16"],["self"]]]],[11,"div_assign","","",41,[[["self"],["bigint"]]]],[11,"div_assign","","",41,[[["self"],["bigint"]]]],[11,"div_assign","","",41,[[["isize"],["self"]]]],[11,"div_assign","","",41,[[["u16"],["self"]]]],[11,"description","","",43,[[["self"]],["str"]]],[11,"to_i64","","",42,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","",42,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_u64","","",42,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","",42,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","",42,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",42,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"to_i64","","",41,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","",41,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_u64","","",41,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_u128","","",41,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","",41,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",41,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"mul_assign","","",41,[[["self"],["i128"]]]],[11,"mul_assign","","",41,[[["self"],["u64"]]]],[11,"mul_assign","","",41,[[["self"],["bigint"]]]],[11,"mul_assign","","",41,[[["i64"],["self"]]]],[11,"mul_assign","","",42,[[["self"],["usize"]]]],[11,"mul_assign","","",42,[[["u16"],["self"]]]],[11,"mul_assign","","",41,[[["self"],["usize"]]]],[11,"mul_assign","","",41,[[["self"],["u128"]]]],[11,"mul_assign","","",41,[[["self"],["i16"]]]],[11,"mul_assign","","",41,[[["self"],["i32"]]]],[11,"mul_assign","","",41,[[["self"],["bigint"]]]],[11,"mul_assign","","",42,[[["self"],["u64"]]]],[11,"mul_assign","","",42,[[["self"],["u128"]]]],[11,"mul_assign","","",41,[[["self"],["u8"]]]],[11,"mul_assign","","",42,[[["self"],["biguint"]]]],[11,"mul_assign","","",41,[[["isize"],["self"]]]],[11,"mul_assign","","",42,[[["self"],["u32"]]]],[11,"mul_assign","","",41,[[["self"],["u32"]]]],[11,"mul_assign","","",42,[[["self"],["biguint"]]]],[11,"mul_assign","","",41,[[["u16"],["self"]]]],[11,"mul_assign","","",41,[[["self"],["i8"]]]],[11,"mul_assign","","",42,[[["self"],["u8"]]]],[11,"add","","",41,[[["i32"]],["bigint"]]],[11,"add","","",41,[[["i32"]],["bigint"]]],[11,"add","","",41,[[["bigint"]],["bigint"]]],[11,"add","","",41,[[["u32"]],["bigint"]]],[11,"add","","",42,[[["u64"]],["biguint"]]],[11,"add","","",41,[[["u128"]],["bigint"]]],[11,"add","","",41,[[["usize"]],["bigint"]]],[11,"add","","",41,[[["i128"]],["bigint"]]],[11,"add","","",42,[[["usize"]],["biguint"]]],[11,"add","","",42,[[["u32"]],["biguint"]]],[11,"add","","",41,[[["u64"]],["bigint"]]],[11,"add","","",42,[[["u32"]],["biguint"]]],[11,"add","","",42,[[["u16"]],["biguint"]]],[11,"add","","",41,[[["u16"]],["bigint"]]],[11,"add","","",42,[[["usize"]],["biguint"]]],[11,"add","","",41,[[["u8"]],["bigint"]]],[11,"add","","",41,[[["bigint"]],["bigint"]]],[11,"add","","",42,[[["u8"]],["biguint"]]],[11,"add","","",41,[[["u128"]],["bigint"]]],[11,"add","","",41,[[["isize"]],["bigint"]]],[11,"add","","",42,[[["biguint"]],["biguint"]]],[11,"add","","",42,[[["biguint"]],["biguint"]]],[11,"add","","",41,[[["i64"]],["bigint"]]],[11,"add","","",41,[[["i16"]],["bigint"]]],[11,"add","","",41,[[["u16"]],["bigint"]]],[11,"add","","",41,[[["i8"]],["bigint"]]],[11,"add","","",41,[[["i64"]],["bigint"]]],[11,"add","","",42,[[["u16"]],["biguint"]]],[11,"add","","",42,[[["u128"]],["biguint"]]],[11,"add","","",41,[[["u64"]],["bigint"]]],[11,"add","","",42,[[["u64"]],["biguint"]]],[11,"add","","",42,[[["u8"]],["biguint"]]],[11,"add","","",41,[[["i16"]],["bigint"]]],[11,"add","","",41,[[["usize"]],["bigint"]]],[11,"add","","",41,[[["isize"]],["bigint"]]],[11,"add","","",41,[[["i8"]],["bigint"]]],[11,"add","","",41,[[["u32"]],["bigint"]]],[11,"add","","",42,[[["u128"]],["biguint"]]],[11,"add","","",41,[[["u8"]],["bigint"]]],[11,"add","","",41,[[["i128"]],["bigint"]]],[11,"zero","","",41,[[],["bigint"]]],[11,"set_zero","","",41,[[["self"]]]],[11,"is_zero","","",41,[[["self"]],["bool"]]],[11,"zero","","",42,[[],["biguint"]]],[11,"set_zero","","",42,[[["self"]]]],[11,"is_zero","","",42,[[["self"]],["bool"]]],[11,"div","","",42,[[["u32"]],["biguint"]]],[11,"div","","",41,[[["u64"]],["bigint"]]],[11,"div","","",41,[[["isize"]],["bigint"]]],[11,"div","","",41,[[["i32"]],["bigint"]]],[11,"div","","",41,[[["i128"]],["bigint"]]],[11,"div","","",41,[[["bigint"]],["bigint"]]],[11,"div","","",41,[[["i8"]],["bigint"]]],[11,"div","","",41,[[["u8"]],["bigint"]]],[11,"div","","",42,[[["u64"]],["biguint"]]],[11,"div","","",41,[[["u128"]],["bigint"]]],[11,"div","","",41,[[["u32"]],["bigint"]]],[11,"div","","",42,[[["u128"]],["biguint"]]],[11,"div","","",42,[[["biguint"]],["biguint"]]],[11,"div","","",42,[[["u32"]],["biguint"]]],[11,"div","","",42,[[["u128"]],["biguint"]]],[11,"div","","",41,[[["i128"]],["bigint"]]],[11,"div","","",41,[[["i16"]],["bigint"]]],[11,"div","","",41,[[["i32"]],["bigint"]]],[11,"div","","",41,[[["u64"]],["bigint"]]],[11,"div","","",42,[[["u8"]],["biguint"]]],[11,"div","","",41,[[["u128"]],["bigint"]]],[11,"div","","",42,[[["u64"]],["biguint"]]],[11,"div","","",41,[[["u16"]],["bigint"]]],[11,"div","","",41,[[["usize"]],["bigint"]]],[11,"div","","",41,[[["u16"]],["bigint"]]],[11,"div","","",42,[[["u16"]],["biguint"]]],[11,"div","","",41,[[["u32"]],["bigint"]]],[11,"div","","",41,[[["i16"]],["bigint"]]],[11,"div","","",41,[[["i64"]],["bigint"]]],[11,"div","","",42,[[["u16"]],["biguint"]]],[11,"div","","",41,[[["u8"]],["bigint"]]],[11,"div","","",42,[[["biguint"]],["biguint"]]],[11,"div","","",41,[[["isize"]],["bigint"]]],[11,"div","","",41,[[["usize"]],["bigint"]]],[11,"div","","",42,[[["u8"]],["biguint"]]],[11,"div","","",42,[[["usize"]],["biguint"]]],[11,"div","","",42,[[["usize"]],["biguint"]]],[11,"div","","",41,[[["i8"]],["bigint"]]],[11,"div","","",41,[[["bigint"]],["bigint"]]],[11,"div","","",41,[[["i64"]],["bigint"]]],[11,"abs","","",41,[[["self"]],["bigint"]]],[11,"abs_sub","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"signum","","",41,[[["self"]],["bigint"]]],[11,"is_positive","","",41,[[["self"]],["bool"]]],[11,"is_negative","","",41,[[["self"]],["bool"]]],[11,"from_i64","","",41,[[["i64"]],[["bigint"],["option",["bigint"]]]]],[11,"from_i128","","",41,[[["i128"]],[["bigint"],["option",["bigint"]]]]],[11,"from_u64","","",41,[[["u64"]],[["bigint"],["option",["bigint"]]]]],[11,"from_u128","","",41,[[["u128"]],[["bigint"],["option",["bigint"]]]]],[11,"from_f64","","",41,[[["f64"]],[["bigint"],["option",["bigint"]]]]],[11,"from_i64","","",42,[[["i64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_i128","","",42,[[["i128"]],[["option",["biguint"]],["biguint"]]]],[11,"from_u64","","",42,[[["u64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_u128","","",42,[[["u128"]],[["option",["biguint"]],["biguint"]]]],[11,"from_f64","","",42,[[["f64"]],[["option",["biguint"]],["biguint"]]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",43,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"default","","",42,[[],["biguint"]]],[11,"default","","",41,[[],["bigint"]]],[11,"checked_mul","","",42,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_mul","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"eq","","",20,[[["self"],["sign"]],["bool"]]],[11,"eq","","",42,[[["biguint"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["parsebiginterror"]],["bool"]]],[11,"ne","","",43,[[["self"],["parsebiginterror"]],["bool"]]],[11,"eq","","",41,[[["self"],["bigint"]],["bool"]]],[11,"checked_sub","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"checked_sub","","",42,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"not","","",41,[[],["bigint"]]],[11,"product","","",42,[[["i"]],["biguint"]]],[11,"product","","",41,[[["i"]],["bigint"]]],[11,"clone","","",42,[[["self"]],["biguint"]]],[11,"clone","","",43,[[["self"]],["parsebiginterror"]]],[11,"clone","","",20,[[["self"]],["sign"]]],[11,"clone","","",41,[[["self"]],["bigint"]]],[11,"sum","","",41,[[["i"]],["bigint"]]],[11,"sum","","",42,[[["i"]],["biguint"]]],[11,"shl","","",41,[[["usize"]],["bigint"]]],[11,"shl","","",42,[[["usize"]],["biguint"]]],[11,"bitand_assign","","",41,[[["self"],["bigint"]]]],[11,"bitand_assign","","",42,[[["self"],["biguint"]]]],[11,"bitand_assign","","",41,[[["self"],["bigint"]]]],[11,"bitand_assign","","",42,[[["biguint"],["self"]]]],[11,"to_bigint","","",42,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,"to_bigint","","",41,[[["self"]],[["bigint"],["option",["bigint"]]]]],[11,"rem_assign","","",41,[[["self"],["u32"]]]],[11,"rem_assign","","",41,[[["self"],["bigint"]]]],[11,"rem_assign","","",41,[[["self"],["i8"]]]],[11,"rem_assign","","",41,[[["i64"],["self"]]]],[11,"rem_assign","","",42,[[["self"],["u32"]]]],[11,"rem_assign","","",41,[[["self"],["i32"]]]],[11,"rem_assign","","",42,[[["self"],["usize"]]]],[11,"rem_assign","","",41,[[["self"],["u128"]]]],[11,"rem_assign","","",42,[[["self"],["u8"]]]],[11,"rem_assign","","",41,[[["self"],["usize"]]]],[11,"rem_assign","","",42,[[["self"],["biguint"]]]],[11,"rem_assign","","",41,[[["isize"],["self"]]]],[11,"rem_assign","","",41,[[["self"],["i128"]]]],[11,"rem_assign","","",41,[[["self"],["u64"]]]],[11,"rem_assign","","",42,[[["self"],["u128"]]]],[11,"rem_assign","","",41,[[["self"],["u8"]]]],[11,"rem_assign","","",42,[[["biguint"],["self"]]]],[11,"rem_assign","","",42,[[["u16"],["self"]]]],[11,"rem_assign","","",41,[[["u16"],["self"]]]],[11,"rem_assign","","",41,[[["self"],["bigint"]]]],[11,"rem_assign","","",41,[[["self"],["i16"]]]],[11,"rem_assign","","",42,[[["self"],["u64"]]]],[11,"shr_assign","","",41,[[["self"],["usize"]]]],[11,"shr_assign","","",42,[[["self"],["usize"]]]],[11,"one","","",42,[[],["biguint"]]],[11,"set_one","","",42,[[["self"]]]],[11,"is_one","","",42,[[["self"]],["bool"]]],[11,"one","","",41,[[],["bigint"]]],[11,"set_one","","",41,[[["self"]]]],[11,"is_one","","",41,[[["self"]],["bool"]]],[11,"checked_add","","",42,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_add","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"nth_root","","",42,[[["u32"],["self"]],["biguint"]]],[11,"sqrt","","",42,[[["self"]],["biguint"]]],[11,"cbrt","","",42,[[["self"]],["biguint"]]],[11,"nth_root","","",41,[[["u32"],["self"]],["bigint"]]],[11,"sqrt","","",41,[[["self"]],["bigint"]]],[11,"cbrt","","",41,[[["self"]],["bigint"]]],[11,"sub","","",41,[[["bigint"]],["bigint"]]],[11,"sub","","",42,[[["u8"]],["biguint"]]],[11,"sub","","",42,[[["u32"]],["biguint"]]],[11,"sub","","",41,[[["u32"]],["bigint"]]],[11,"sub","","",41,[[["i32"]],["bigint"]]],[11,"sub","","",41,[[["u64"]],["bigint"]]],[11,"sub","","",41,[[["i8"]],["bigint"]]],[11,"sub","","",42,[[["u128"]],["biguint"]]],[11,"sub","","",41,[[["i16"]],["bigint"]]],[11,"sub","","",41,[[["usize"]],["bigint"]]],[11,"sub","","",42,[[["u64"]],["biguint"]]],[11,"sub","","",42,[[["u64"]],["biguint"]]],[11,"sub","","",42,[[["usize"]],["biguint"]]],[11,"sub","","",41,[[["i16"]],["bigint"]]],[11,"sub","","",42,[[["u8"]],["biguint"]]],[11,"sub","","",41,[[["i64"]],["bigint"]]],[11,"sub","","",41,[[["i32"]],["bigint"]]],[11,"sub","","",42,[[["biguint"]],["biguint"]]],[11,"sub","","",41,[[["u32"]],["bigint"]]],[11,"sub","","",42,[[["u32"]],["biguint"]]],[11,"sub","","",41,[[["u16"]],["bigint"]]],[11,"sub","","",41,[[["isize"]],["bigint"]]],[11,"sub","","",41,[[["isize"]],["bigint"]]],[11,"sub","","",41,[[["i128"]],["bigint"]]],[11,"sub","","",41,[[["usize"]],["bigint"]]],[11,"sub","","",41,[[["i64"]],["bigint"]]],[11,"sub","","",42,[[["biguint"]],["biguint"]]],[11,"sub","","",41,[[["i128"]],["bigint"]]],[11,"sub","","",42,[[["usize"]],["biguint"]]],[11,"sub","","",42,[[["u16"]],["biguint"]]],[11,"sub","","",41,[[["u8"]],["bigint"]]],[11,"sub","","",41,[[["bigint"]],["bigint"]]],[11,"sub","","",42,[[["u16"]],["biguint"]]],[11,"sub","","",41,[[["u64"]],["bigint"]]],[11,"sub","","",42,[[["u128"]],["biguint"]]],[11,"sub","","",41,[[["u8"]],["bigint"]]],[11,"sub","","",41,[[["u128"]],["bigint"]]],[11,"sub","","",41,[[["i8"]],["bigint"]]],[11,"sub","","",41,[[["u128"]],["bigint"]]],[11,"sub","","",41,[[["u16"]],["bigint"]]],[11,"div_rem","","",41,[[["self"],["bigint"]]]],[11,"div_floor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"mod_floor","","",41,[[["self"],["bigint"]],["bigint"]]],[11,"div_mod_floor","","",41,[[["self"],["bigint"]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",41,[[["self"],["bigint"]],["bigint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",41,[[["self"],["bigint"]],["bigint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",41,[[["self"],["bigint"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",41,[[["self"],["bigint"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",41,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",41,[[["self"]],["bool"]]],[11,"div_rem","","",42,[[["biguint"],["self"]]]],[11,"div_floor","","",42,[[["biguint"],["self"]],["biguint"]]],[11,"mod_floor","","",42,[[["biguint"],["self"]],["biguint"]]],[11,"div_mod_floor","","",42,[[["biguint"],["self"]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",42,[[["biguint"],["self"]],["biguint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",42,[[["biguint"],["self"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",42,[[["biguint"],["self"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",42,[[["biguint"],["self"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",42,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",42,[[["self"]],["bool"]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"from_str","","",41,[[["str"]],[["result",["bigint","parsebiginterror"]],["bigint"],["parsebiginterror"]]]],[11,"from_str","","",42,[[["str"]],[["parsebiginterror"],["result",["biguint","parsebiginterror"]],["biguint"]]]],[11,"add_assign","","",42,[[["self"],["u128"]]]],[11,"add_assign","","",42,[[["self"],["u32"]]]],[11,"add_assign","","",41,[[["self"],["u8"]]]],[11,"add_assign","","",41,[[["self"],["i32"]]]],[11,"add_assign","","",42,[[["biguint"],["self"]]]],[11,"add_assign","","",41,[[["self"],["u64"]]]],[11,"add_assign","","",41,[[["u16"],["self"]]]],[11,"add_assign","","",41,[[["isize"],["self"]]]],[11,"add_assign","","",41,[[["self"],["u128"]]]],[11,"add_assign","","",41,[[["self"],["bigint"]]]],[11,"add_assign","","",42,[[["u16"],["self"]]]],[11,"add_assign","","",41,[[["self"],["usize"]]]],[11,"add_assign","","",42,[[["self"],["biguint"]]]],[11,"add_assign","","",41,[[["self"],["i16"]]]],[11,"add_assign","","",41,[[["self"],["bigint"]]]],[11,"add_assign","","",42,[[["self"],["u8"]]]],[11,"add_assign","","",42,[[["self"],["u64"]]]],[11,"add_assign","","",42,[[["self"],["usize"]]]],[11,"add_assign","","",41,[[["self"],["i8"]]]],[11,"add_assign","","",41,[[["i64"],["self"]]]],[11,"add_assign","","",41,[[["self"],["u32"]]]],[11,"add_assign","","",41,[[["self"],["i128"]]]],[11,"cmp","","",41,[[["self"],["bigint"]],["ordering"]]],[11,"cmp","","",20,[[["self"],["sign"]],["ordering"]]],[11,"cmp","","",42,[[["biguint"],["self"]],["ordering"]]],[11,"neg","","",41,[[],["bigint"]]],[11,"neg","","Negate Sign value.",20,[[],["sign"]]],[11,"neg","","",42,[[],["biguint"]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"bitand","","",41,[[["bigint"]],["bigint"]]],[11,"bitand","","",42,[[["biguint"]],["biguint"]]],[11,"bitand","","",42,[[["biguint"]],["biguint"]]],[11,"bitand","","",41,[[["bigint"]],["bigint"]]],[11,"shr","","",42,[[["usize"]],["biguint"]]],[11,"shr","","",41,[[["usize"]],["bigint"]]],[11,"bitxor_assign","","",42,[[["biguint"],["self"]]]],[11,"bitxor_assign","","",41,[[["self"],["bigint"]]]],[11,"bitxor_assign","","",41,[[["self"],["bigint"]]]],[11,"bitxor_assign","","",42,[[["self"],["biguint"]]]],[11,"to_biguint","","",42,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"to_biguint","","",41,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"bitor_assign","","",41,[[["self"],["bigint"]]]],[11,"bitor_assign","","",42,[[["self"],["biguint"]]]],[11,"bitor_assign","","",42,[[["biguint"],["self"]]]],[11,"bitor_assign","","",41,[[["self"],["bigint"]]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"sub_assign","","",41,[[["self"],["bigint"]]]],[11,"sub_assign","","",41,[[["self"],["u32"]]]],[11,"sub_assign","","",42,[[["self"],["biguint"]]]],[11,"sub_assign","","",41,[[["self"],["i32"]]]],[11,"sub_assign","","",42,[[["self"],["u32"]]]],[11,"sub_assign","","",42,[[["self"],["u128"]]]],[11,"sub_assign","","",41,[[["isize"],["self"]]]],[11,"sub_assign","","",42,[[["self"],["u8"]]]],[11,"sub_assign","","",41,[[["u16"],["self"]]]],[11,"sub_assign","","",42,[[["self"],["u64"]]]],[11,"sub_assign","","",41,[[["self"],["u64"]]]],[11,"sub_assign","","",41,[[["self"],["usize"]]]],[11,"sub_assign","","",42,[[["u16"],["self"]]]],[11,"sub_assign","","",41,[[["self"],["i16"]]]],[11,"sub_assign","","",42,[[["self"],["usize"]]]],[11,"sub_assign","","",41,[[["self"],["bigint"]]]],[11,"sub_assign","","",41,[[["self"],["i8"]]]],[11,"sub_assign","","",41,[[["self"],["i128"]]]],[11,"sub_assign","","",42,[[["self"],["biguint"]]]],[11,"sub_assign","","",41,[[["self"],["u8"]]]],[11,"sub_assign","","",41,[[["self"],["u128"]]]],[11,"sub_assign","","",41,[[["i64"],["self"]]]],[11,"bitor","","",41,[[["bigint"]],["bigint"]]],[11,"bitor","","",41,[[["bigint"]],["bigint"]]],[11,"bitor","","",42,[[["biguint"]],["biguint"]]],[11,"bitor","","",42,[[["biguint"]],["biguint"]]],[11,"bitxor","","",42,[[["biguint"]],["biguint"]]],[11,"bitxor","","",41,[[["bigint"]],["bigint"]]],[11,"bitxor","","",41,[[["bigint"]],["bigint"]]],[11,"bitxor","","",42,[[["biguint"]],["biguint"]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"rem","","",41,[[["i16"]],["bigint"]]],[11,"rem","","",41,[[["u16"]],["bigint"]]],[11,"rem","","",42,[[["u16"]],["biguint"]]],[11,"rem","","",41,[[["u32"]],["bigint"]]],[11,"rem","","",42,[[["biguint"]],["biguint"]]],[11,"rem","","",42,[[["usize"]],["biguint"]]],[11,"rem","","",42,[[["u16"]],["biguint"]]],[11,"rem","","",41,[[["i8"]],["bigint"]]],[11,"rem","","",41,[[["u64"]],["bigint"]]],[11,"rem","","",41,[[["u32"]],["bigint"]]],[11,"rem","","",41,[[["u16"]],["bigint"]]],[11,"rem","","",41,[[["u8"]],["bigint"]]],[11,"rem","","",41,[[["u64"]],["bigint"]]],[11,"rem","","",41,[[["usize"]],["bigint"]]],[11,"rem","","",41,[[["u128"]],["bigint"]]],[11,"rem","","",41,[[["usize"]],["bigint"]]],[11,"rem","","",42,[[["u8"]],["biguint"]]],[11,"rem","","",41,[[["i128"]],["bigint"]]],[11,"rem","","",42,[[["biguint"]],["biguint"]]],[11,"rem","","",42,[[["usize"]],["biguint"]]],[11,"rem","","",41,[[["u128"]],["bigint"]]],[11,"rem","","",41,[[["isize"]],["bigint"]]],[11,"rem","","",42,[[["u32"]],["biguint"]]],[11,"rem","","",42,[[["u64"]],["biguint"]]],[11,"rem","","",42,[[["u64"]],["biguint"]]],[11,"rem","","",41,[[["bigint"]],["bigint"]]],[11,"rem","","",42,[[["u8"]],["biguint"]]],[11,"rem","","",41,[[["i64"]],["bigint"]]],[11,"rem","","",42,[[["u32"]],["biguint"]]],[11,"rem","","",41,[[["isize"]],["bigint"]]],[11,"rem","","",41,[[["u8"]],["bigint"]]],[11,"rem","","",41,[[["bigint"]],["bigint"]]],[11,"rem","","",41,[[["i32"]],["bigint"]]],[11,"rem","","",41,[[["i128"]],["bigint"]]],[11,"rem","","",41,[[["i32"]],["bigint"]]],[11,"rem","","",42,[[["u128"]],["biguint"]]],[11,"rem","","",41,[[["i64"]],["bigint"]]],[11,"rem","","",41,[[["i16"]],["bigint"]]],[11,"rem","","",42,[[["u128"]],["biguint"]]],[11,"rem","","",41,[[["i8"]],["bigint"]]],[11,"from_str_radix","","Creates and initializes a BigInt.",41,[[["str"],["u32"]],[["result",["bigint","parsebiginterror"]],["bigint"],["parsebiginterror"]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",42,[[["str"],["u32"]],[["parsebiginterror"],["result",["biguint","parsebiginterror"]],["biguint"]]]],[11,"checked_div","","",42,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_div","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"mul","","",41,[[["i16"]],["bigint"]]],[11,"mul","","",41,[[["u128"]],["bigint"]]],[11,"mul","","",42,[[["biguint"]],["biguint"]]],[11,"mul","","",41,[[["isize"]],["bigint"]]],[11,"mul","","",41,[[["isize"]],["bigint"]]],[11,"mul","","",41,[[["usize"]],["bigint"]]],[11,"mul","","",41,[[["i8"]],["bigint"]]],[11,"mul","","",41,[[["u32"]],["bigint"]]],[11,"mul","","",41,[[["bigint"]],["bigint"]]],[11,"mul","","",42,[[["usize"]],["biguint"]]],[11,"mul","","",42,[[["u16"]],["biguint"]]],[11,"mul","","",41,[[["usize"]],["bigint"]]],[11,"mul","","",41,[[["i8"]],["bigint"]]],[11,"mul","","",42,[[["usize"]],["biguint"]]],[11,"mul","","",20,[[["sign"]],["sign"]]],[11,"mul","","",41,[[["i64"]],["bigint"]]],[11,"mul","","",41,[[["i32"]],["bigint"]]],[11,"mul","","",42,[[["u16"]],["biguint"]]],[11,"mul","","",41,[[["u128"]],["bigint"]]],[11,"mul","","",42,[[["u8"]],["biguint"]]],[11,"mul","","",41,[[["i64"]],["bigint"]]],[11,"mul","","",42,[[["u64"]],["biguint"]]],[11,"mul","","",41,[[["u32"]],["bigint"]]],[11,"mul","","",41,[[["i128"]],["bigint"]]],[11,"mul","","",42,[[["u32"]],["biguint"]]],[11,"mul","","",41,[[["i128"]],["bigint"]]],[11,"mul","","",42,[[["u32"]],["biguint"]]],[11,"mul","","",41,[[["bigint"]],["bigint"]]],[11,"mul","","",41,[[["u16"]],["bigint"]]],[11,"mul","","",42,[[["u64"]],["biguint"]]],[11,"mul","","",41,[[["i32"]],["bigint"]]],[11,"mul","","",41,[[["u64"]],["bigint"]]],[11,"mul","","",42,[[["u8"]],["biguint"]]],[11,"mul","","",41,[[["u64"]],["bigint"]]],[11,"mul","","",41,[[["u8"]],["bigint"]]],[11,"mul","","",42,[[["u128"]],["biguint"]]],[11,"mul","","",41,[[["i16"]],["bigint"]]],[11,"mul","","",41,[[["u16"]],["bigint"]]],[11,"mul","","",42,[[["u128"]],["biguint"]]],[11,"mul","","",41,[[["u8"]],["bigint"]]],[11,"mul","","",42,[[["biguint"]],["biguint"]]],[11,"shl_assign","","",41,[[["self"],["usize"]]]],[11,"shl_assign","","",42,[[["self"],["usize"]]]],[11,"partial_cmp","","",42,[[["biguint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",20,[[["self"],["sign"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",41,[[["self"],["bigint"]],[["option",["ordering"]],["ordering"]]]],[11,"from","","",41,[[["i8"]],["bigint"]]],[11,"from","","",41,[[["biguint"]],["bigint"]]],[11,"from","","",42,[[["u64"]],["biguint"]]],[11,"from","","",41,[[["u128"]],["bigint"]]],[11,"from","","",41,[[["u8"]],["bigint"]]],[11,"from","","",41,[[["usize"]],["bigint"]]],[11,"from","","",41,[[["i16"]],["bigint"]]],[11,"from","","",42,[[["u8"]],["biguint"]]],[11,"from","","",42,[[["u32"]],["biguint"]]],[11,"from","","",42,[[["u16"]],["biguint"]]],[11,"from","","",42,[[["u128"]],["biguint"]]],[11,"from","","",41,[[["u16"]],["bigint"]]],[11,"from","","",42,[[["usize"]],["biguint"]]],[11,"from","","",41,[[["u64"]],["bigint"]]],[11,"from","","",41,[[["u32"]],["bigint"]]],[11,"from","","",41,[[["i64"]],["bigint"]]],[11,"from","","",41,[[["i32"]],["bigint"]]],[11,"from","","",41,[[["isize"]],["bigint"]]],[11,"from","","",41,[[["i128"]],["bigint"]]],[11,"fmt","num::integer","",22,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",22,[[["self"]],["extendedgcd"]]],[11,"eq","","",22,[[["extendedgcd"],["self"]],["bool"]]],[11,"ne","","",22,[[["extendedgcd"],["self"]],["bool"]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"fmt","num::traits","",40,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",39,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",40,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"to_usize","num::complex","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_isize","","",0,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_u8","","",0,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","",0,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","",0,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"to_u64","","",0,[[["self"]],[["u64"],["option",["u64"]]]]],[11,"to_i8","","",0,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","",0,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"to_i64","","",0,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_u128","","",0,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_i128","","",0,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_f32","","",0,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",0,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"neg","","",0,[[]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["complex"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["complex"],["self"]]]],[11,"default","","",0,[[],["complex"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"mul_add_assign","","",0,[[["self"],["complex"]]]],[11,"mul_add_assign","","",0,[[["complex"],["self"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"zero","","",0,[[],["complex"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[["t"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"as_","","",0,[[],["u"]]],[11,"rem_assign","","",0,[[["self"],["complex"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["complex"],["self"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"inv","","",0,[[]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",44,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"rem","","",0,[[["t"]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[["t"]]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"from","","",0,[[["t"]],["complex"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],[["complex"],["result",["complex"]]]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"sum","","",0,[[["i"]],["complex"]]],[11,"sum","","",0,[[["i"]],["complex"]]],[11,"from_usize","","",0,[[["usize"]],[["complex"],["option",["complex"]]]]],[11,"from_isize","","",0,[[["isize"]],[["complex"],["option",["complex"]]]]],[11,"from_u8","","",0,[[["u8"]],[["complex"],["option",["complex"]]]]],[11,"from_u16","","",0,[[["u16"]],[["complex"],["option",["complex"]]]]],[11,"from_u32","","",0,[[["u32"]],[["complex"],["option",["complex"]]]]],[11,"from_u64","","",0,[[["u64"]],[["complex"],["option",["complex"]]]]],[11,"from_i8","","",0,[[["i8"]],[["complex"],["option",["complex"]]]]],[11,"from_i16","","",0,[[["i16"]],[["complex"],["option",["complex"]]]]],[11,"from_i32","","",0,[[["i32"]],[["complex"],["option",["complex"]]]]],[11,"from_i64","","",0,[[["i64"]],[["complex"],["option",["complex"]]]]],[11,"from_u128","","",0,[[["u128"]],[["complex"],["option",["complex"]]]]],[11,"from_i128","","",0,[[["i128"]],[["complex"],["option",["complex"]]]]],[11,"from_f32","","",0,[[["f32"]],[["complex"],["option",["complex"]]]]],[11,"from_f64","","",0,[[["f64"]],[["complex"],["option",["complex"]]]]],[11,"mul","","",0,[[["complex"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["complex"]]]],[11,"product","","",0,[[["i"]],["complex"]]],[11,"product","","",0,[[["i"]],["complex"]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"sub_assign","","",0,[[["self"],["complex"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["complex"],["self"]]]],[11,"mul_add","","",0,[[["complex"]],["complex"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",44,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",0,[[["complex"]]]],[11,"div","","",0,[[["complex"]]]],[11,"div","","",0,[[["t"]]]],[11,"description","","",44,[[["self"]],["str"]]],[11,"from","","",0,[[["u"]],[["complex"],["option",["complex"]]]]],[11,"eq","","",0,[[["complex"],["self"]],["bool"]]],[11,"ne","","",0,[[["complex"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"ne","","",44,[[["self"],["parsecomplexerror"]],["bool"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],[["complex"],["result",["complex"]]]]],[11,"one","","",0,[[],["complex"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"mul_assign","","",0,[[["self"],["complex"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["complex"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["complex"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["complex"]]]],[11,"next_back","num::iter","",47,[[["self"]],["option"]]],[11,"next_back","","",46,[[["self"]],["option"]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"clone","","",47,[[["self"]],["rangeinclusive"]]],[11,"clone","","",46,[[["self"]],["range"]]],[11,"clone","","",49,[[["self"]],["rangestepinclusive"]]],[11,"clone","","",48,[[["self"]],["rangestep"]]],[11,"div_assign","num::rational","",50,[[["self"],["ratio"]]]],[11,"div_assign","","",50,[[["self"],["t"]]]],[11,"div_assign","","",50,[[["ratio"],["self"]]]],[11,"div_assign","","",50,[[["self"],["t"]]]],[11,"neg","","",50,[[],["ratio"]]],[11,"checked_mul","","",50,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"add_assign","","",50,[[["self"],["t"]]]],[11,"add_assign","","",50,[[["ratio"],["self"]]]],[11,"add_assign","","",50,[[["self"],["t"]]]],[11,"add_assign","","",50,[[["self"],["ratio"]]]],[11,"partial_cmp","","",50,[[["ratio"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"sub","","",50,[[["t"]],["ratio"]]],[11,"sub","","",50,[[["ratio"]],["ratio"]]],[11,"sub","","",50,[[["ratio"]],["ratio"]]],[11,"sub","","",50,[[["t"]],["ratio"]]],[11,"into","","",50,[[]]],[11,"description","","",51,[[["self"]],["str"]]],[11,"one","","",50,[[],["ratio"]]],[11,"is_one","","",50,[[["self"]],["bool"]]],[11,"set_one","","",50,[[["self"]]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",50,[[["str"],["u32"]],[["parseratioerror"],["ratio"],["result",["ratio","parseratioerror"]]]]],[11,"add","","",50,[[["t"]],["ratio"]]],[11,"add","","",50,[[["ratio"]],["ratio"]]],[11,"add","","",50,[[["t"]],["ratio"]]],[11,"add","","",50,[[["ratio"]],["ratio"]]],[11,"zero","","",50,[[],["ratio"]]],[11,"is_zero","","",50,[[["self"]],["bool"]]],[11,"set_zero","","",50,[[["self"]]]],[11,"rem_assign","","",50,[[["self"],["ratio"]]]],[11,"rem_assign","","",50,[[["ratio"],["self"]]]],[11,"rem_assign","","",50,[[["self"],["t"]]]],[11,"rem_assign","","",50,[[["self"],["t"]]]],[11,"hash","","",50,[[["self"],["h"]]]],[11,"fmt","","",51,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",50,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"rem","","",50,[[["ratio"]],["ratio"]]],[11,"rem","","",50,[[["t"]],["ratio"]]],[11,"rem","","",50,[[["t"]],["ratio"]]],[11,"rem","","",50,[[["ratio"]],["ratio"]]],[11,"cmp","","",50,[[["ratio"],["self"]],["ordering"]]],[11,"from","","",50,[[],["ratio"]]],[11,"from","","",50,[[["t"]],["ratio"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",50,[[["str"]],[["parseratioerror"],["ratio"],["result",["ratio","parseratioerror"]]]]],[11,"clone","","",51,[[["self"]],["parseratioerror"]]],[11,"clone","","",50,[[["self"]],["ratio"]]],[11,"sum","","",50,[[["i"]],["ratio"]]],[11,"sum","","",50,[[["i"]],["ratio"]]],[11,"mul","","",50,[[["t"]],["ratio"]]],[11,"mul","","",50,[[["t"]],["ratio"]]],[11,"mul","","",50,[[["ratio"]],["ratio"]]],[11,"mul","","",50,[[["ratio"]],["ratio"]]],[11,"product","","",50,[[["i"]],["ratio"]]],[11,"product","","",50,[[["i"]],["ratio"]]],[11,"inv","","",50,[[],["ratio"]]],[11,"sub_assign","","",50,[[["self"],["ratio"]]]],[11,"sub_assign","","",50,[[["self"],["t"]]]],[11,"sub_assign","","",50,[[["self"],["t"]]]],[11,"sub_assign","","",50,[[["ratio"],["self"]]]],[11,"checked_add","","",50,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_div","","",50,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"from_i64","","",50,[[["i64"]],[["ratio",["u128"]],["option",["ratio"]]]]],[11,"from_i128","","",50,[[["i128"]],[["ratio",["u128"]],["option",["ratio"]]]]],[11,"from_u64","","",50,[[["u64"]],[["ratio",["u128"]],["option",["ratio"]]]]],[11,"from_u128","","",50,[[["u128"]],[["ratio",["u128"]],["option",["ratio"]]]]],[11,"from_f32","","",50,[[["f32"]],[["ratio",["u128"]],["option",["ratio"]]]]],[11,"from_f64","","",50,[[["f64"]],[["ratio",["u128"]],["option",["ratio"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["i32"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["u32"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["u32"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["u32"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["u32"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["u32"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["u32"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["i16"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["u64"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["u64"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["u64"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["u64"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["u64"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["u64"]]]]],[11,"from_i64","","",50,[[["i64"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,"from_i128","","",50,[[["i128"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,"from_u64","","",50,[[["u64"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,"from_u128","","",50,[[["u128"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,"from_f32","","",50,[[["f32"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,"from_f64","","",50,[[["f64"]],[["ratio",["usize"]],["option",["ratio"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["i64"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["isize"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["isize"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["isize"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["isize"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["isize"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["isize"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["i128"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["i128"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["i128"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["i128"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["i128"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["i128"]]]]],[11,"from_i64","","",50,[[["i64"]],[["ratio",["i8"]],["option",["ratio"]]]]],[11,"from_i128","","",50,[[["i128"]],[["ratio",["i8"]],["option",["ratio"]]]]],[11,"from_u64","","",50,[[["u64"]],[["ratio",["i8"]],["option",["ratio"]]]]],[11,"from_u128","","",50,[[["u128"]],[["ratio",["i8"]],["option",["ratio"]]]]],[11,"from_f32","","",50,[[["f32"]],[["ratio",["i8"]],["option",["ratio"]]]]],[11,"from_f64","","",50,[[["f64"]],[["ratio",["i8"]],["option",["ratio"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["u16"]]]]],[11,"from_i64","","",50,[[["i64"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,"from_i128","","",50,[[["i128"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,"from_u64","","",50,[[["u64"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,"from_u128","","",50,[[["u128"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,"from_f32","","",50,[[["f32"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,"from_f64","","",50,[[["f64"]],[["option",["ratio"]],["ratio",["u8"]]]]],[11,"pow","","",50,[[["i8"]],["ratio"]]],[11,"pow","","",50,[[["u32"]],["ratio"]]],[11,"pow","","",50,[[["u16"]],["ratio"]]],[11,"pow","","",50,[[["u64"]],["ratio"]]],[11,"pow","","",50,[[["i16"]],["ratio"]]],[11,"pow","","",50,[[["i32"]],["ratio"]]],[11,"pow","","",50,[[["u8"]],["ratio"]]],[11,"pow","","",50,[[["i16"]],["ratio"]]],[11,"pow","","",50,[[["u16"]],["ratio"]]],[11,"pow","","",50,[[["isize"]],["ratio"]]],[11,"pow","","",50,[[["isize"]],["ratio"]]],[11,"pow","","",50,[[["i64"]],["ratio"]]],[11,"pow","","",50,[[["usize"]],["ratio"]]],[11,"pow","","",50,[[["i32"]],["ratio"]]],[11,"pow","","",50,[[["u32"]],["ratio"]]],[11,"pow","","",50,[[["i8"]],["ratio"]]],[11,"pow","","",50,[[["u8"]],["ratio"]]],[11,"pow","","",50,[[["usize"]],["ratio"]]],[11,"pow","","",50,[[["u64"]],["ratio"]]],[11,"pow","","",50,[[["i64"]],["ratio"]]],[11,"abs","","",50,[[["self"]],["ratio"]]],[11,"abs_sub","","",50,[[["ratio"],["self"]],["ratio"]]],[11,"signum","","",50,[[["self"]],["ratio"]]],[11,"is_positive","","",50,[[["self"]],["bool"]]],[11,"is_negative","","",50,[[["self"]],["bool"]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",50,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",51,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"div","","",50,[[["t"]],["ratio"]]],[11,"div","","",50,[[["t"]],["ratio"]]],[11,"div","","",50,[[["ratio"]],["ratio"]]],[11,"div","","",50,[[["ratio"]],["ratio"]]],[11,"eq","","",50,[[["ratio"],["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",51,[[["self"],["parseratioerror"]],["bool"]]],[11,"mul_assign","","",50,[[["ratio"],["self"]]]],[11,"mul_assign","","",50,[[["self"],["t"]]]],[11,"mul_assign","","",50,[[["self"],["ratio"]]]],[11,"mul_assign","","",50,[[["self"],["t"]]]],[11,"checked_sub","","",50,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"new","num::bigint","Creates and initializes a BigInt.",41,[[["u32"],["sign"],["vec",["u32"]]],["bigint"]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",41,[[["sign"],["biguint"]],["bigint"]]],[11,"from_slice","","Creates and initializes a `BigInt`.",41,[[["sign"]],["bigint"]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",41,[[["self"],["sign"]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",41,[[["sign"]],["bigint"]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",41,[[["sign"]],["bigint"]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",41,[[],["bigint"]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",41,[[],["bigint"]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",41,[[["u32"]],[["bigint"],["option",["bigint"]]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",41,[[["u32"],["sign"]],[["bigint"],["option",["bigint"]]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",41,[[["u32"],["sign"]],[["bigint"],["option",["bigint"]]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",41,[[["self"]]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",41,[[["self"]]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",41,[[["self"]]]],[11,"to_signed_bytes_be","","Returns the two's-complement byte representation of the…",41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_signed_bytes_le","","Returns the two's-complement byte representation of the…",41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",41,[[["u32"],["self"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",41,[[["u32"],["self"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",41,[[["u32"],["self"]]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",41,[[["self"]],["sign"]]],[11,"bits","","Determines the fewest bits necessary to express the…",41,[[["self"]],["usize"]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not…",41,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_add","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"checked_sub","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"checked_mul","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"checked_div","","",41,[[["self"],["bigint"]],[["bigint"],["option",["bigint"]]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",41,[[["self"],["bigint"]],["bigint"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",41,[[["self"]],["bigint"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",41,[[["self"]],["bigint"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",41,[[["u32"],["self"]],["bigint"]]],[11,"new","","Creates and initializes a `BigUint`.",42,[[["u32"],["vec",["u32"]]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",42,[[],["biguint"]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",42,[[["self"]]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",42,[[],["biguint"]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",42,[[],["biguint"]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",42,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",42,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",42,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",42,[[["self"]],[["u32"],["vec",["u32"]]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",42,[[["u32"],["self"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",42,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",42,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",42,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",42,[[["biguint"],["self"]],["biguint"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",42,[[["self"]],["biguint"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",42,[[["self"]],["biguint"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",42,[[["u32"],["self"]],["biguint"]]],[11,"new","num::complex","Create a new Complex",0,[[["t"]],["complex"]]],[11,"i","","Returns imaginary unit",0,[[],["complex"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["complex"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["u32"],["self"]],["complex"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["complex"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["complex"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["complex"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[["self"]]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"]],["complex"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["complex"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["complex"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["complex"]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[["self"]],["complex"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["complex"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["complex"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["complex"],["self"]],["complex"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["complex"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["complex"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["complex"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["complex"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["complex"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["complex"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["complex"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["complex"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["complex"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["complex"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["complex"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex"],["self"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool"]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients…",45,[[["t"]],["iterbinomial"]]],[11,"new_raw","num::rational","Creates a `Ratio` without checking for `denom == 0` or…",50,[[["t"]],["ratio"]]],[11,"numer","","Gets an immutable reference to the numerator.",50,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",50,[[["self"]],["t"]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",50,[[["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",50,[[["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",50,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",50,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",50,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",50,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",50,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",50,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",50,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",50,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",50,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",50,[[["self"],["i32"]],["ratio"]]],[11,"from_float","","Converts a float into a rational number.",50,[[["t"]],[["option",["ratio"]],["ratio",["bigint"]]]]],[11,"approximate_float","","",50,[[["f"]],[["option",["ratio"]],["ratio"]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Bounded"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedSub"],[8,"Num"],[8,"One"],[8,"PrimInt"],[8,"Saturating"],[8,"Signed"],[8,"Zero"],[8,"ToBigUint"],[4,"Sign"],[8,"ToBigInt"],[3,"ExtendedGcd"],[8,"Roots"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"BigInt"],[3,"BigUint"],[3,"ParseBigIntError"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_bigint"] = {"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"ParseBigIntError","num_bigint","",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[11,"new","","Creates and initializes a BigInt.",1,[[["sign"],["vec",["u32"]],["u32"]],["bigint"]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",1,[[["sign"],["biguint"]],["bigint"]]],[11,"from_slice","","Creates and initializes a `BigInt`.",1,[[["sign"]],["bigint"]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",1,[[["sign"],["self"]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",1,[[["sign"]],["bigint"]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",1,[[["sign"]],["bigint"]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint"]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint"]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",1,[[["u32"]],[["option",["bigint"]],["bigint"]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign"],["u32"]],[["option",["bigint"]],["bigint"]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign"],["u32"]],[["option",["bigint"]],["bigint"]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",1,[[["self"]]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",1,[[["self"]]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",1,[[["self"]]]],[11,"to_signed_bytes_be","","Returns the two's-complement byte representation of the…",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_signed_bytes_le","","Returns the two's-complement byte representation of the…",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",1,[[["u32"],["self"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",1,[[["u32"],["self"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",1,[[["u32"],["self"]]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",1,[[["self"]],["sign"]]],[11,"bits","","Determines the fewest bits necessary to express the…",1,[[["self"]],["usize"]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not…",1,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_add","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_sub","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_mul","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_div","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",1,[[["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",1,[[["self"]],["self"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",1,[[["u32"],["self"]],["self"]]],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",["u32"]],["u32"]],["biguint"]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,[[],["biguint"]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,[[["self"]]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,[[],["biguint"]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,[[],["biguint"]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[["u32"]],[["option",["biguint"]],["biguint"]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",2,[[["self"]],[["vec",["u32"]],["u32"]]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[["u32"],["self"]],["string"]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[["u32"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[["self"]],["usize"]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",2,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",2,[[["self"]],["self"]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",2,[[["u32"],["self"]],["self"]]],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",3,[[["self"]],[["option",["biguint"]],["biguint"]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",4,[[["self"]],[["option",["bigint"]],["bigint"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_bigint","","",1,[[["self"]],[["option",["bigint"]],["bigint"]]]],[11,"to_bigint","","",2,[[["self"]],[["option",["bigint"]],["bigint"]]]],[11,"to_biguint","","",1,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"to_biguint","","",2,[[["self"]],[["option",["biguint"]],["biguint"]]]],[11,"from","","",1,[[["i64"]],["self"]]],[11,"from","","",1,[[["i128"]],["self"]]],[11,"from","","",1,[[["i8"]],["self"]]],[11,"from","","",1,[[["i16"]],["self"]]],[11,"from","","",1,[[["i32"]],["self"]]],[11,"from","","",1,[[["isize"]],["self"]]],[11,"from","","",1,[[["u64"]],["self"]]],[11,"from","","",1,[[["u128"]],["self"]]],[11,"from","","",1,[[["u8"]],["self"]]],[11,"from","","",1,[[["u16"]],["self"]]],[11,"from","","",1,[[["u32"]],["self"]]],[11,"from","","",1,[[["usize"]],["self"]]],[11,"from","","",1,[[["biguint"]],["self"]]],[11,"from","","",2,[[["u64"]],["self"]]],[11,"from","","",2,[[["u128"]],["self"]]],[11,"from","","",2,[[["u8"]],["self"]]],[11,"from","","",2,[[["u16"]],["self"]]],[11,"from","","",2,[[["u32"]],["self"]]],[11,"from","","",2,[[["usize"]],["self"]]],[11,"clone","","",0,[[["self"]],["sign"]]],[11,"clone","","",1,[[["self"]],["bigint"]]],[11,"clone","","",2,[[["self"]],["biguint"]]],[11,"clone","","",5,[[["self"]],["parsebiginterror"]]],[11,"default","","",1,[[],["bigint"]]],[11,"default","","",2,[[],["biguint"]]],[11,"cmp","","",0,[[["self"],["sign"]],["ordering"]]],[11,"cmp","","",1,[[["bigint"],["self"]],["ordering"]]],[11,"cmp","","",2,[[["biguint"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["sign"]],["bool"]]],[11,"eq","","",1,[[["bigint"],["self"]],["bool"]]],[11,"eq","","",2,[[["biguint"],["self"]],["bool"]]],[11,"eq","","",5,[[["parsebiginterror"],["self"]],["bool"]]],[11,"ne","","",5,[[["parsebiginterror"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["sign"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["bigint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["biguint"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"div","","",1,[[["bigint"]],["bigint"]]],[11,"div","","",1,[[["bigint"]],["bigint"]]],[11,"div","","",1,[[["u8"]],["bigint"]]],[11,"div","","",1,[[["u8"]],["bigint"]]],[11,"div","","",1,[[["u16"]],["bigint"]]],[11,"div","","",1,[[["u16"]],["bigint"]]],[11,"div","","",1,[[["usize"]],["bigint"]]],[11,"div","","",1,[[["usize"]],["bigint"]]],[11,"div","","",1,[[["i8"]],["bigint"]]],[11,"div","","",1,[[["i8"]],["bigint"]]],[11,"div","","",1,[[["i16"]],["bigint"]]],[11,"div","","",1,[[["i16"]],["bigint"]]],[11,"div","","",1,[[["isize"]],["bigint"]]],[11,"div","","",1,[[["isize"]],["bigint"]]],[11,"div","","",1,[[["u32"]],["bigint"]]],[11,"div","","",1,[[["u64"]],["bigint"]]],[11,"div","","",1,[[["u128"]],["bigint"]]],[11,"div","","",1,[[["u32"]],["bigint"]]],[11,"div","","",1,[[["u64"]],["bigint"]]],[11,"div","","",1,[[["u128"]],["bigint"]]],[11,"div","","",1,[[["i32"]],["bigint"]]],[11,"div","","",1,[[["i64"]],["bigint"]]],[11,"div","","",1,[[["i128"]],["bigint"]]],[11,"div","","",1,[[["i32"]],["bigint"]]],[11,"div","","",1,[[["i64"]],["bigint"]]],[11,"div","","",1,[[["i128"]],["bigint"]]],[11,"div","","",2,[[["biguint"]],["biguint"]]],[11,"div","","",2,[[["biguint"]],["biguint"]]],[11,"div","","",2,[[["u8"]],["biguint"]]],[11,"div","","",2,[[["u8"]],["biguint"]]],[11,"div","","",2,[[["u16"]],["biguint"]]],[11,"div","","",2,[[["u16"]],["biguint"]]],[11,"div","","",2,[[["usize"]],["biguint"]]],[11,"div","","",2,[[["usize"]],["biguint"]]],[11,"div","","",2,[[["u32"]],["biguint"]]],[11,"div","","",2,[[["u64"]],["biguint"]]],[11,"div","","",2,[[["u128"]],["biguint"]]],[11,"div","","",2,[[["u32"]],["biguint"]]],[11,"div","","",2,[[["u64"]],["biguint"]]],[11,"div","","",2,[[["u128"]],["biguint"]]],[11,"rem","","",1,[[["bigint"]],["bigint"]]],[11,"rem","","",1,[[["bigint"]],["bigint"]]],[11,"rem","","",1,[[["u8"]],["bigint"]]],[11,"rem","","",1,[[["u8"]],["bigint"]]],[11,"rem","","",1,[[["u16"]],["bigint"]]],[11,"rem","","",1,[[["u16"]],["bigint"]]],[11,"rem","","",1,[[["usize"]],["bigint"]]],[11,"rem","","",1,[[["usize"]],["bigint"]]],[11,"rem","","",1,[[["i8"]],["bigint"]]],[11,"rem","","",1,[[["i8"]],["bigint"]]],[11,"rem","","",1,[[["i16"]],["bigint"]]],[11,"rem","","",1,[[["i16"]],["bigint"]]],[11,"rem","","",1,[[["isize"]],["bigint"]]],[11,"rem","","",1,[[["isize"]],["bigint"]]],[11,"rem","","",1,[[["u32"]],["bigint"]]],[11,"rem","","",1,[[["u64"]],["bigint"]]],[11,"rem","","",1,[[["u128"]],["bigint"]]],[11,"rem","","",1,[[["u32"]],["bigint"]]],[11,"rem","","",1,[[["u64"]],["bigint"]]],[11,"rem","","",1,[[["u128"]],["bigint"]]],[11,"rem","","",1,[[["i32"]],["bigint"]]],[11,"rem","","",1,[[["i64"]],["bigint"]]],[11,"rem","","",1,[[["i128"]],["bigint"]]],[11,"rem","","",1,[[["i32"]],["bigint"]]],[11,"rem","","",1,[[["i64"]],["bigint"]]],[11,"rem","","",1,[[["i128"]],["bigint"]]],[11,"rem","","",2,[[["biguint"]],["biguint"]]],[11,"rem","","",2,[[["biguint"]],["biguint"]]],[11,"rem","","",2,[[["u8"]],["biguint"]]],[11,"rem","","",2,[[["u8"]],["biguint"]]],[11,"rem","","",2,[[["u16"]],["biguint"]]],[11,"rem","","",2,[[["u16"]],["biguint"]]],[11,"rem","","",2,[[["usize"]],["biguint"]]],[11,"rem","","",2,[[["usize"]],["biguint"]]],[11,"rem","","",2,[[["u32"]],["biguint"]]],[11,"rem","","",2,[[["u32"]],["biguint"]]],[11,"rem","","",2,[[["u64"]],["biguint"]]],[11,"rem","","",2,[[["u128"]],["biguint"]]],[11,"rem","","",2,[[["u64"]],["biguint"]]],[11,"rem","","",2,[[["u128"]],["biguint"]]],[11,"sub","","",1,[[["bigint"]],["bigint"]]],[11,"sub","","",1,[[["bigint"]],["bigint"]]],[11,"sub","","",1,[[["u8"]],["bigint"]]],[11,"sub","","",1,[[["u8"]],["bigint"]]],[11,"sub","","",1,[[["u16"]],["bigint"]]],[11,"sub","","",1,[[["u16"]],["bigint"]]],[11,"sub","","",1,[[["usize"]],["bigint"]]],[11,"sub","","",1,[[["usize"]],["bigint"]]],[11,"sub","","",1,[[["i8"]],["bigint"]]],[11,"sub","","",1,[[["i8"]],["bigint"]]],[11,"sub","","",1,[[["i16"]],["bigint"]]],[11,"sub","","",1,[[["i16"]],["bigint"]]],[11,"sub","","",1,[[["isize"]],["bigint"]]],[11,"sub","","",1,[[["isize"]],["bigint"]]],[11,"sub","","",1,[[["u32"]],["bigint"]]],[11,"sub","","",1,[[["u64"]],["bigint"]]],[11,"sub","","",1,[[["u128"]],["bigint"]]],[11,"sub","","",1,[[["u32"]],["bigint"]]],[11,"sub","","",1,[[["u64"]],["bigint"]]],[11,"sub","","",1,[[["u128"]],["bigint"]]],[11,"sub","","",1,[[["i32"]],["bigint"]]],[11,"sub","","",1,[[["i64"]],["bigint"]]],[11,"sub","","",1,[[["i128"]],["bigint"]]],[11,"sub","","",1,[[["i32"]],["bigint"]]],[11,"sub","","",1,[[["i64"]],["bigint"]]],[11,"sub","","",1,[[["i128"]],["bigint"]]],[11,"sub","","",2,[[["biguint"]],["biguint"]]],[11,"sub","","",2,[[["biguint"]],["biguint"]]],[11,"sub","","",2,[[["u8"]],["biguint"]]],[11,"sub","","",2,[[["u8"]],["biguint"]]],[11,"sub","","",2,[[["u16"]],["biguint"]]],[11,"sub","","",2,[[["u16"]],["biguint"]]],[11,"sub","","",2,[[["usize"]],["biguint"]]],[11,"sub","","",2,[[["usize"]],["biguint"]]],[11,"sub","","",2,[[["u32"]],["biguint"]]],[11,"sub","","",2,[[["u64"]],["biguint"]]],[11,"sub","","",2,[[["u128"]],["biguint"]]],[11,"sub","","",2,[[["u32"]],["biguint"]]],[11,"sub","","",2,[[["u64"]],["biguint"]]],[11,"sub","","",2,[[["u128"]],["biguint"]]],[11,"from_str","","",1,[[["str"]],[["result",["bigint","parsebiginterror"]],["bigint"],["parsebiginterror"]]]],[11,"from_str","","",2,[[["str"]],[["parsebiginterror"],["result",["biguint","parsebiginterror"]],["biguint"]]]],[11,"add","","",1,[[["bigint"]],["bigint"]]],[11,"add","","",1,[[["bigint"]],["bigint"]]],[11,"add","","",1,[[["u8"]],["bigint"]]],[11,"add","","",1,[[["u8"]],["bigint"]]],[11,"add","","",1,[[["u16"]],["bigint"]]],[11,"add","","",1,[[["u16"]],["bigint"]]],[11,"add","","",1,[[["usize"]],["bigint"]]],[11,"add","","",1,[[["usize"]],["bigint"]]],[11,"add","","",1,[[["i8"]],["bigint"]]],[11,"add","","",1,[[["i8"]],["bigint"]]],[11,"add","","",1,[[["i16"]],["bigint"]]],[11,"add","","",1,[[["i16"]],["bigint"]]],[11,"add","","",1,[[["isize"]],["bigint"]]],[11,"add","","",1,[[["isize"]],["bigint"]]],[11,"add","","",1,[[["u32"]],["bigint"]]],[11,"add","","",1,[[["u64"]],["bigint"]]],[11,"add","","",1,[[["u128"]],["bigint"]]],[11,"add","","",1,[[["u32"]],["bigint"]]],[11,"add","","",1,[[["u64"]],["bigint"]]],[11,"add","","",1,[[["u128"]],["bigint"]]],[11,"add","","",1,[[["i32"]],["bigint"]]],[11,"add","","",1,[[["i64"]],["bigint"]]],[11,"add","","",1,[[["i128"]],["bigint"]]],[11,"add","","",1,[[["i32"]],["bigint"]]],[11,"add","","",1,[[["i64"]],["bigint"]]],[11,"add","","",1,[[["i128"]],["bigint"]]],[11,"add","","",2,[[["biguint"]],["biguint"]]],[11,"add","","",2,[[["biguint"]],["biguint"]]],[11,"add","","",2,[[["u8"]],["biguint"]]],[11,"add","","",2,[[["u8"]],["biguint"]]],[11,"add","","",2,[[["u16"]],["biguint"]]],[11,"add","","",2,[[["u16"]],["biguint"]]],[11,"add","","",2,[[["usize"]],["biguint"]]],[11,"add","","",2,[[["usize"]],["biguint"]]],[11,"add","","",2,[[["u32"]],["biguint"]]],[11,"add","","",2,[[["u64"]],["biguint"]]],[11,"add","","",2,[[["u128"]],["biguint"]]],[11,"add","","",2,[[["u32"]],["biguint"]]],[11,"add","","",2,[[["u64"]],["biguint"]]],[11,"add","","",2,[[["u128"]],["biguint"]]],[11,"mul","","",0,[[["sign"]],["sign"]]],[11,"mul","","",1,[[["bigint"]],["bigint"]]],[11,"mul","","",1,[[["bigint"]],["bigint"]]],[11,"mul","","",1,[[["u8"]],["bigint"]]],[11,"mul","","",1,[[["u8"]],["bigint"]]],[11,"mul","","",1,[[["u16"]],["bigint"]]],[11,"mul","","",1,[[["u16"]],["bigint"]]],[11,"mul","","",1,[[["usize"]],["bigint"]]],[11,"mul","","",1,[[["usize"]],["bigint"]]],[11,"mul","","",1,[[["i8"]],["bigint"]]],[11,"mul","","",1,[[["i8"]],["bigint"]]],[11,"mul","","",1,[[["i16"]],["bigint"]]],[11,"mul","","",1,[[["i16"]],["bigint"]]],[11,"mul","","",1,[[["isize"]],["bigint"]]],[11,"mul","","",1,[[["isize"]],["bigint"]]],[11,"mul","","",1,[[["u32"]],["bigint"]]],[11,"mul","","",1,[[["u64"]],["bigint"]]],[11,"mul","","",1,[[["u128"]],["bigint"]]],[11,"mul","","",1,[[["u32"]],["bigint"]]],[11,"mul","","",1,[[["u64"]],["bigint"]]],[11,"mul","","",1,[[["u128"]],["bigint"]]],[11,"mul","","",1,[[["i32"]],["bigint"]]],[11,"mul","","",1,[[["i64"]],["bigint"]]],[11,"mul","","",1,[[["i128"]],["bigint"]]],[11,"mul","","",1,[[["i32"]],["bigint"]]],[11,"mul","","",1,[[["i64"]],["bigint"]]],[11,"mul","","",1,[[["i128"]],["bigint"]]],[11,"mul","","",2,[[["biguint"]],["biguint"]]],[11,"mul","","",2,[[["biguint"]],["biguint"]]],[11,"mul","","",2,[[["u8"]],["biguint"]]],[11,"mul","","",2,[[["u8"]],["biguint"]]],[11,"mul","","",2,[[["u16"]],["biguint"]]],[11,"mul","","",2,[[["u16"]],["biguint"]]],[11,"mul","","",2,[[["usize"]],["biguint"]]],[11,"mul","","",2,[[["usize"]],["biguint"]]],[11,"mul","","",2,[[["u32"]],["biguint"]]],[11,"mul","","",2,[[["u64"]],["biguint"]]],[11,"mul","","",2,[[["u128"]],["biguint"]]],[11,"mul","","",2,[[["u32"]],["biguint"]]],[11,"mul","","",2,[[["u64"]],["biguint"]]],[11,"mul","","",2,[[["u128"]],["biguint"]]],[11,"neg","","Negate Sign value.",0,[[],["sign"]]],[11,"neg","","",1,[[],["bigint"]]],[11,"neg","","",2,[[],["biguint"]]],[11,"add_assign","","",1,[[["self"],["bigint"]]]],[11,"add_assign","","",1,[[["self"],["bigint"]]]],[11,"add_assign","","",1,[[["self"],["u8"]]]],[11,"add_assign","","",1,[[["u16"],["self"]]]],[11,"add_assign","","",1,[[["self"],["usize"]]]],[11,"add_assign","","",1,[[["self"],["i8"]]]],[11,"add_assign","","",1,[[["self"],["i16"]]]],[11,"add_assign","","",1,[[["isize"],["self"]]]],[11,"add_assign","","",1,[[["self"],["u32"]]]],[11,"add_assign","","",1,[[["self"],["u64"]]]],[11,"add_assign","","",1,[[["self"],["u128"]]]],[11,"add_assign","","",1,[[["self"],["i32"]]]],[11,"add_assign","","",1,[[["i64"],["self"]]]],[11,"add_assign","","",1,[[["self"],["i128"]]]],[11,"add_assign","","",2,[[["self"],["biguint"]]]],[11,"add_assign","","",2,[[["self"],["biguint"]]]],[11,"add_assign","","",2,[[["self"],["u8"]]]],[11,"add_assign","","",2,[[["u16"],["self"]]]],[11,"add_assign","","",2,[[["self"],["usize"]]]],[11,"add_assign","","",2,[[["self"],["u32"]]]],[11,"add_assign","","",2,[[["self"],["u64"]]]],[11,"add_assign","","",2,[[["self"],["u128"]]]],[11,"sub_assign","","",1,[[["self"],["bigint"]]]],[11,"sub_assign","","",1,[[["self"],["bigint"]]]],[11,"sub_assign","","",1,[[["self"],["u8"]]]],[11,"sub_assign","","",1,[[["u16"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["usize"]]]],[11,"sub_assign","","",1,[[["self"],["i8"]]]],[11,"sub_assign","","",1,[[["self"],["i16"]]]],[11,"sub_assign","","",1,[[["isize"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["u32"]]]],[11,"sub_assign","","",1,[[["self"],["u64"]]]],[11,"sub_assign","","",1,[[["self"],["u128"]]]],[11,"sub_assign","","",1,[[["self"],["i32"]]]],[11,"sub_assign","","",1,[[["i64"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["i128"]]]],[11,"sub_assign","","",2,[[["self"],["biguint"]]]],[11,"sub_assign","","",2,[[["biguint"],["self"]]]],[11,"sub_assign","","",2,[[["self"],["u8"]]]],[11,"sub_assign","","",2,[[["u16"],["self"]]]],[11,"sub_assign","","",2,[[["self"],["usize"]]]],[11,"sub_assign","","",2,[[["self"],["u32"]]]],[11,"sub_assign","","",2,[[["self"],["u64"]]]],[11,"sub_assign","","",2,[[["self"],["u128"]]]],[11,"mul_assign","","",1,[[["self"],["bigint"]]]],[11,"mul_assign","","",1,[[["self"],["bigint"]]]],[11,"mul_assign","","",1,[[["self"],["u8"]]]],[11,"mul_assign","","",1,[[["u16"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["usize"]]]],[11,"mul_assign","","",1,[[["self"],["i8"]]]],[11,"mul_assign","","",1,[[["self"],["i16"]]]],[11,"mul_assign","","",1,[[["isize"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["u32"]]]],[11,"mul_assign","","",1,[[["self"],["u64"]]]],[11,"mul_assign","","",1,[[["self"],["u128"]]]],[11,"mul_assign","","",1,[[["self"],["i32"]]]],[11,"mul_assign","","",1,[[["i64"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["i128"]]]],[11,"mul_assign","","",2,[[["self"],["biguint"]]]],[11,"mul_assign","","",2,[[["biguint"],["self"]]]],[11,"mul_assign","","",2,[[["self"],["u8"]]]],[11,"mul_assign","","",2,[[["u16"],["self"]]]],[11,"mul_assign","","",2,[[["self"],["usize"]]]],[11,"mul_assign","","",2,[[["self"],["u32"]]]],[11,"mul_assign","","",2,[[["self"],["u64"]]]],[11,"mul_assign","","",2,[[["self"],["u128"]]]],[11,"div_assign","","",1,[[["self"],["bigint"]]]],[11,"div_assign","","",1,[[["self"],["bigint"]]]],[11,"div_assign","","",1,[[["self"],["u8"]]]],[11,"div_assign","","",1,[[["u16"],["self"]]]],[11,"div_assign","","",1,[[["self"],["usize"]]]],[11,"div_assign","","",1,[[["self"],["i8"]]]],[11,"div_assign","","",1,[[["self"],["i16"]]]],[11,"div_assign","","",1,[[["isize"],["self"]]]],[11,"div_assign","","",1,[[["self"],["u32"]]]],[11,"div_assign","","",1,[[["self"],["u64"]]]],[11,"div_assign","","",1,[[["self"],["u128"]]]],[11,"div_assign","","",1,[[["self"],["i32"]]]],[11,"div_assign","","",1,[[["i64"],["self"]]]],[11,"div_assign","","",1,[[["self"],["i128"]]]],[11,"div_assign","","",2,[[["self"],["biguint"]]]],[11,"div_assign","","",2,[[["biguint"],["self"]]]],[11,"div_assign","","",2,[[["self"],["u8"]]]],[11,"div_assign","","",2,[[["u16"],["self"]]]],[11,"div_assign","","",2,[[["self"],["usize"]]]],[11,"div_assign","","",2,[[["self"],["u32"]]]],[11,"div_assign","","",2,[[["self"],["u64"]]]],[11,"div_assign","","",2,[[["self"],["u128"]]]],[11,"rem_assign","","",1,[[["self"],["bigint"]]]],[11,"rem_assign","","",1,[[["self"],["bigint"]]]],[11,"rem_assign","","",1,[[["self"],["u8"]]]],[11,"rem_assign","","",1,[[["u16"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["usize"]]]],[11,"rem_assign","","",1,[[["self"],["i8"]]]],[11,"rem_assign","","",1,[[["self"],["i16"]]]],[11,"rem_assign","","",1,[[["isize"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["u32"]]]],[11,"rem_assign","","",1,[[["self"],["u64"]]]],[11,"rem_assign","","",1,[[["self"],["u128"]]]],[11,"rem_assign","","",1,[[["self"],["i32"]]]],[11,"rem_assign","","",1,[[["i64"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["i128"]]]],[11,"rem_assign","","",2,[[["self"],["biguint"]]]],[11,"rem_assign","","",2,[[["self"],["biguint"]]]],[11,"rem_assign","","",2,[[["self"],["u8"]]]],[11,"rem_assign","","",2,[[["u16"],["self"]]]],[11,"rem_assign","","",2,[[["self"],["usize"]]]],[11,"rem_assign","","",2,[[["self"],["u32"]]]],[11,"rem_assign","","",2,[[["self"],["u64"]]]],[11,"rem_assign","","",2,[[["self"],["u128"]]]],[11,"not","","",1,[[],["bigint"]]],[11,"bitand","","",1,[[["bigint"]],["bigint"]]],[11,"bitand","","",1,[[["bigint"]],["bigint"]]],[11,"bitand","","",2,[[["biguint"]],["biguint"]]],[11,"bitand","","",2,[[["biguint"]],["biguint"]]],[11,"bitor","","",1,[[["bigint"]],["bigint"]]],[11,"bitor","","",1,[[["bigint"]],["bigint"]]],[11,"bitor","","",2,[[["biguint"]],["biguint"]]],[11,"bitor","","",2,[[["biguint"]],["biguint"]]],[11,"bitxor","","",1,[[["bigint"]],["bigint"]]],[11,"bitxor","","",1,[[["bigint"]],["bigint"]]],[11,"bitxor","","",2,[[["biguint"]],["biguint"]]],[11,"bitxor","","",2,[[["biguint"]],["biguint"]]],[11,"shl","","",1,[[["usize"]],["bigint"]]],[11,"shl","","",2,[[["usize"]],["biguint"]]],[11,"shr","","",1,[[["usize"]],["bigint"]]],[11,"shr","","",2,[[["usize"]],["biguint"]]],[11,"bitand_assign","","",1,[[["self"],["bigint"]]]],[11,"bitand_assign","","",1,[[["self"],["bigint"]]]],[11,"bitand_assign","","",2,[[["self"],["biguint"]]]],[11,"bitand_assign","","",2,[[["self"],["biguint"]]]],[11,"bitor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitxor_assign","","",1,[[["self"],["bigint"]]]],[11,"bitxor_assign","","",2,[[["self"],["biguint"]]]],[11,"bitxor_assign","","",2,[[["self"],["biguint"]]]],[11,"shl_assign","","",1,[[["self"],["usize"]]]],[11,"shl_assign","","",2,[[["self"],["usize"]]]],[11,"shr_assign","","",1,[[["self"],["usize"]]]],[11,"shr_assign","","",2,[[["self"],["usize"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"sum","","",1,[[["i"]],["self"]]],[11,"sum","","",2,[[["i"]],["self"]]],[11,"product","","",1,[[["i"]],["self"]]],[11,"product","","",2,[[["i"]],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"nth_root","","",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","",1,[[["self"]],["self"]]],[11,"cbrt","","",1,[[["self"]],["self"]]],[11,"nth_root","","",2,[[["u32"],["self"]],["self"]]],[11,"sqrt","","",2,[[["self"]],["self"]]],[11,"cbrt","","",2,[[["self"]],["self"]]],[11,"div_rem","","",1,[[["bigint"],["self"]]]],[11,"div_floor","","",1,[[["bigint"],["self"]],["bigint"]]],[11,"mod_floor","","",1,[[["bigint"],["self"]],["bigint"]]],[11,"div_mod_floor","","",1,[[["bigint"],["self"]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",1,[[["bigint"],["self"]],["bigint"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",1,[[["bigint"],["self"]],["bigint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["bigint"],["self"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,[[["bigint"],["self"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,[[["self"]],["bool"]]],[11,"div_rem","","",2,[[["biguint"],["self"]]]],[11,"div_floor","","",2,[[["biguint"],["self"]],["biguint"]]],[11,"mod_floor","","",2,[[["biguint"],["self"]],["biguint"]]],[11,"div_mod_floor","","",2,[[["biguint"],["self"]]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[["self"]],["self"]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["biguint"],["self"]],["biguint"]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["biguint"],["self"]],["bool"]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["biguint"],["self"]],["bool"]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[["self"]],["bool"]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[["self"]],["bool"]]],[11,"to_i64","","",1,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","",1,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_u64","","",1,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","",1,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","",1,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",1,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"to_i64","","",2,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","",2,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_u64","","",2,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","",2,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","",2,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",2,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"from_i64","","",1,[[["i64"]],[["option",["bigint"]],["bigint"]]]],[11,"from_i128","","",1,[[["i128"]],[["option",["bigint"]],["bigint"]]]],[11,"from_u64","","",1,[[["u64"]],[["option",["bigint"]],["bigint"]]]],[11,"from_u128","","",1,[[["u128"]],[["option",["bigint"]],["bigint"]]]],[11,"from_f64","","",1,[[["f64"]],[["option",["bigint"]],["bigint"]]]],[11,"from_i64","","",2,[[["i64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_i128","","",2,[[["i128"]],[["option",["biguint"]],["biguint"]]]],[11,"from_u64","","",2,[[["u64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_u128","","",2,[[["u128"]],[["option",["biguint"]],["biguint"]]]],[11,"from_f64","","",2,[[["f64"]],[["option",["biguint"]],["biguint"]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",1,[[["str"],["u32"]],[["result",["bigint","parsebiginterror"]],["bigint"],["parsebiginterror"]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[["str"],["u32"]],[["parsebiginterror"],["result",["biguint","parsebiginterror"]],["biguint"]]]],[11,"zero","","",1,[[],["bigint"]]],[11,"set_zero","","",1,[[["self"]]]],[11,"is_zero","","",1,[[["self"]],["bool"]]],[11,"zero","","",2,[[],["biguint"]]],[11,"set_zero","","",2,[[["self"]]]],[11,"is_zero","","",2,[[["self"]],["bool"]]],[11,"one","","",1,[[],["bigint"]]],[11,"set_one","","",1,[[["self"]]]],[11,"is_one","","",1,[[["self"]],["bool"]]],[11,"one","","",2,[[],["biguint"]]],[11,"set_one","","",2,[[["self"]]]],[11,"is_one","","",2,[[["self"]],["bool"]]],[11,"checked_add","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_add","","",2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_sub","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_sub","","",2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_mul","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_mul","","",2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"checked_div","","",1,[[["bigint"],["self"]],[["option",["bigint"]],["bigint"]]]],[11,"checked_div","","",2,[[["biguint"],["self"]],[["option",["biguint"]],["biguint"]]]],[11,"abs","","",1,[[["self"]],["bigint"]]],[11,"abs_sub","","",1,[[["bigint"],["self"]],["bigint"]]],[11,"signum","","",1,[[["self"]],["bigint"]]],[11,"is_positive","","",1,[[["self"]],["bool"]]],[11,"is_negative","","",1,[[["self"]],["bool"]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,"ParseBigIntError"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[["t"]],["self"]]],[11,"i","","Returns imaginary unit",0,[[],["self"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["u32"],["self"]],["self"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["self"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["self"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["self"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[["self"]]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"]],["self"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["self"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["self"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["self"]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[["self"]],["self"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["self"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["self"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"]],["self"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["self"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["self"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["self"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["self"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["self"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["self"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["self"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["self"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["self"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["self"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["self"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["self"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["self"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex"],["self"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"div","","",0,[[["complex"]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",0,[[["t"]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["t"]]]],[11,"rem","","",0,[[["t"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["t"]]]],[11,"eq","","",0,[[["complex"],["self"]],["bool"]]],[11,"ne","","",0,[[["complex"],["self"]],["bool"]]],[11,"eq","","",1,[[["parsecomplexerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["parsecomplexerror"],["self"]],["bool"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result"]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",0,[[["t"]]]],[11,"mul","","",0,[[["complex"]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["t"]]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"default","","",0,[[],["complex"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"to_usize","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_isize","","",0,[[["self"]],[["option",["isize"]],["isize"]]]],[11,"to_u8","","",0,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","",0,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","",0,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"to_u64","","",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i8","","",0,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","",0,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"to_i64","","",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u128","","",0,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_i128","","",0,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_f32","","",0,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"from_usize","","",0,[[["usize"]],["option"]]],[11,"from_isize","","",0,[[["isize"]],["option"]]],[11,"from_u8","","",0,[[["u8"]],["option"]]],[11,"from_u16","","",0,[[["u16"]],["option"]]],[11,"from_u32","","",0,[[["u32"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_i8","","",0,[[["i8"]],["option"]]],[11,"from_i16","","",0,[[["i16"]],["option"]]],[11,"from_i32","","",0,[[["i32"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from","","",0,[[["toprimitive"]],["option"]]],[11,"as_","","",0,[[],["u"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result"]]],[11,"zero","","",0,[[],["self"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"one","","",0,[[],["self"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex"]],["complex"]]],[11,"mul_add_assign","","",0,[[["self"],["complex"]]]],[11,"mul_add_assign","","",0,[[["complex"],["self"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["complex"]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots"]],["roots"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots"],["u32"]],["roots"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots"]],["roots"]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer"]]]],[5,"div_floor","","Floored integer division",null,[[["integer"]],["integer"]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer"]],["integer"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer"]],["integer"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer"]],["integer"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer"]],["integer"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer"]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer"],["clone"]]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[["a"]],["rangestepinclusive"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[["t"]],["ratio"]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[["self"]],["t"]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"from_float","","Converts a float into a rational number.",0,[[["floatcore"]],[["bigrational"],["option",["bigrational"]]]]],[11,"approximate_float","","",0,[[["floatcore"],["numcast"]],[["option",["ratio"]],["ratio"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["ratio"]]],[11,"from","","",0,[[],["ratio"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"div","","",0,[[["ratio"]],["ratio"]]],[11,"div","","",0,[[["t"]],["ratio"]]],[11,"div","","",0,[[["ratio"]],["ratio"]]],[11,"div","","",0,[[["t"]],["ratio"]]],[11,"rem","","",0,[[["ratio"]],["ratio"]]],[11,"rem","","",0,[[["t"]],["ratio"]]],[11,"rem","","",0,[[["ratio"]],["ratio"]]],[11,"rem","","",0,[[["t"]],["ratio"]]],[11,"sub","","",0,[[["ratio"]],["ratio"]]],[11,"sub","","",0,[[["t"]],["ratio"]]],[11,"sub","","",0,[[["ratio"]],["ratio"]]],[11,"sub","","",0,[[["t"]],["ratio"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["parseratioerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["parseratioerror"],["self"]],["bool"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[["str"]],[["ratio"],["result",["ratio","parseratioerror"]],["parseratioerror"]]]],[11,"add","","",0,[[["ratio"]],["ratio"]]],[11,"add","","",0,[[["t"]],["ratio"]]],[11,"add","","",0,[[["ratio"]],["ratio"]]],[11,"add","","",0,[[["t"]],["ratio"]]],[11,"mul","","",0,[[["ratio"]],["ratio"]]],[11,"mul","","",0,[[["t"]],["ratio"]]],[11,"mul","","",0,[[["ratio"]],["ratio"]]],[11,"mul","","",0,[[["t"]],["ratio"]]],[11,"neg","","",0,[[],["ratio"]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["ratio"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["ratio"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["ratio"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["ratio"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["ratio"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"into","","",0,[[]]],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"clone","","",1,[[["self"]],["parseratioerror"]]],[11,"checked_add","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_div","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_mul","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"checked_sub","","",0,[[["ratio"],["self"]],[["option",["ratio"]],["ratio"]]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],[["ratio"],["result",["ratio","parseratioerror"]],["parseratioerror"]]]],[11,"one","","",0,[[],["ratio"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"pow","","",0,[[["i8"]],["ratio"]]],[11,"pow","","",0,[[["i8"]],["ratio"]]],[11,"pow","","",0,[[["i16"]],["ratio"]]],[11,"pow","","",0,[[["i16"]],["ratio"]]],[11,"pow","","",0,[[["i32"]],["ratio"]]],[11,"pow","","",0,[[["i32"]],["ratio"]]],[11,"pow","","",0,[[["i64"]],["ratio"]]],[11,"pow","","",0,[[["i64"]],["ratio"]]],[11,"pow","","",0,[[["isize"]],["ratio"]]],[11,"pow","","",0,[[["isize"]],["ratio"]]],[11,"pow","","",0,[[["u8"]],["ratio"]]],[11,"pow","","",0,[[["u8"]],["ratio"]]],[11,"pow","","",0,[[["u16"]],["ratio"]]],[11,"pow","","",0,[[["u16"]],["ratio"]]],[11,"pow","","",0,[[["u32"]],["ratio"]]],[11,"pow","","",0,[[["u32"]],["ratio"]]],[11,"pow","","",0,[[["u64"]],["ratio"]]],[11,"pow","","",0,[[["u64"]],["ratio"]]],[11,"pow","","",0,[[["usize"]],["ratio"]]],[11,"pow","","",0,[[["usize"]],["ratio"]]],[11,"abs","","",0,[[["self"]],["ratio"]]],[11,"abs_sub","","",0,[[["ratio"],["self"]],["ratio"]]],[11,"signum","","",0,[[["self"]],["ratio"]]],[11,"is_positive","","",0,[[["self"]],["bool"]]],[11,"is_negative","","",0,[[["self"]],["bool"]]],[11,"zero","","",0,[[],["ratio"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"inv","","",0,[[],["ratio"]]],[11,"description","","",1,[[["self"]],["str"]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["numcast"],["option"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["option",["isize"]],["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["option",["u32"]],["u32"]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["one"],["usize"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one"],["usize"],["clone"],["checkedmul"]],[["option"],["one"],["clone"],["checkedmul"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[],["self"]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["result",["error"]],["error"]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["bernoullierror"],["result",["bernoulli","bernoullierror"]],["bernoulli"]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["bernoullierror"],["result",["bernoulli","bernoullierror"]],["bernoulli"]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["weightederror"],["result",["weightederror"]]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["weightederror"],["weightedindex"],["result",["weightedindex","weightederror"]]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["result",["weightederror"]],["weightederror"]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["vec",["usize"]],["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["result",["weightederror"]],["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["error"],["result",["error"]]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","rand::rngs::adapter","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"next_u32","rand::rngs","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["result",["error"]],["error"]]]],[11,"source","rand","",39,[[["self"]],[["error"],["option",["error"]]]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",50,[[],["osrng"]]],[11,"clone","","",50,[[["self"]],["osrng"]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"read","","",0,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"from","","",39,[[["nonzerou32"]],["error"]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["vec",["f64"]],["f64"]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["vec",["u32"]],["u32"]],["self"]]],[11,"from","","",34,[[["vec",["usize"]],["usize"]],["self"]]],[11,"len","rand::seq","",54,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",55,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",55,[[["self"]]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","rand::seq","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["stdrng"]]],[11,"clone","","",52,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",56,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",52,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["bernoullierror"],["self"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["self"],["indexvec"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",53,[[["formatter"],["self"]],["result"]]],[11,"source","","",53,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["error"],["box",["error"]]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["error"],["box",["error"]]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",4,[[["self"]],[["result",["usize","error"]],["usize"],["error"]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["secret_integers"] = {"doc":"This crate defines simple wrappers around Rust's integer…","i":[[3,"U8","secret_integers","",null,null],[12,"0","","",0,null],[3,"U16","","",null,null],[12,"0","","",1,null],[3,"U32","","",null,null],[12,"0","","",2,null],[3,"U64","","",null,null],[12,"0","","",3,null],[3,"U128","","",null,null],[12,"0","","",4,null],[3,"I8","","",null,null],[12,"0","","",5,null],[3,"I16","","",null,null],[12,"0","","",6,null],[3,"I32","","",null,null],[12,"0","","",7,null],[3,"I64","","",null,null],[12,"0","","",8,null],[3,"I128","","",null,null],[12,"0","","",9,null],[11,"classify","","",0,[[["u8"],["into",["u8"]]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",0,[[],["u8"]]],[11,"zero","","",0,[[],["self"]]],[11,"one","","",0,[[],["self"]]],[11,"ones","","",0,[[],["self"]]],[11,"from_bytes_le","","",0,[[],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_le","","",0,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",0,[[],[["vec",["u8"]],["u8"]]]],[11,"to_bytes_be","","",0,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",0,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",0,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",0,[[],["self"]]],[11,"rotate_left","","",0,[[["u32"]],["self"]]],[11,"rotate_right","","",0,[[["u32"]],["self"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",0,[[],["self"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",0,[[],["self"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",0,[[],["self"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",0,[[],["self"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",0,[[],["self"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",0,[[],["self"]]],[11,"classify","","",1,[[["u16"],["into",["u16"]]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",1,[[],["u16"]]],[11,"zero","","",1,[[],["self"]]],[11,"one","","",1,[[],["self"]]],[11,"ones","","",1,[[],["self"]]],[11,"from_bytes_le","","",1,[[],[["vec",["u16"]],["u16"]]]],[11,"to_bytes_le","","",1,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",1,[[],[["vec",["u16"]],["u16"]]]],[11,"to_bytes_be","","",1,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",1,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",1,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",1,[[],["self"]]],[11,"rotate_left","","",1,[[["u32"]],["self"]]],[11,"rotate_right","","",1,[[["u32"]],["self"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",1,[[],["self"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",1,[[],["self"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",1,[[],["self"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",1,[[],["self"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",1,[[],["self"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",1,[[],["self"]]],[11,"classify","","",2,[[["into",["u32"]],["u32"]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",2,[[],["u32"]]],[11,"zero","","",2,[[],["self"]]],[11,"one","","",2,[[],["self"]]],[11,"ones","","",2,[[],["self"]]],[11,"from_bytes_le","","",2,[[],[["vec",["u32"]],["u32"]]]],[11,"to_bytes_le","","",2,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",2,[[],[["vec",["u32"]],["u32"]]]],[11,"to_bytes_be","","",2,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",2,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",2,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",2,[[],["self"]]],[11,"rotate_left","","",2,[[["u32"]],["self"]]],[11,"rotate_right","","",2,[[["u32"]],["self"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[],["self"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[],["self"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[],["self"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[],["self"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[],["self"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[],["self"]]],[11,"classify","","",3,[[["into",["u64"]],["u64"]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",3,[[],["u64"]]],[11,"zero","","",3,[[],["self"]]],[11,"one","","",3,[[],["self"]]],[11,"ones","","",3,[[],["self"]]],[11,"from_bytes_le","","",3,[[],[["u64"],["vec",["u64"]]]]],[11,"to_bytes_le","","",3,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",3,[[],[["u64"],["vec",["u64"]]]]],[11,"to_bytes_be","","",3,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",3,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",3,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",3,[[],["self"]]],[11,"rotate_left","","",3,[[["u32"]],["self"]]],[11,"rotate_right","","",3,[[["u32"]],["self"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",3,[[],["self"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",3,[[],["self"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",3,[[],["self"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",3,[[],["self"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",3,[[],["self"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",3,[[],["self"]]],[11,"classify","","",4,[[["into",["u128"]],["u128"]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",4,[[],["u128"]]],[11,"zero","","",4,[[],["self"]]],[11,"one","","",4,[[],["self"]]],[11,"ones","","",4,[[],["self"]]],[11,"from_bytes_le","","",4,[[],[["vec",["u128"]],["u128"]]]],[11,"to_bytes_le","","",4,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",4,[[],[["vec",["u128"]],["u128"]]]],[11,"to_bytes_be","","",4,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",4,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",4,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",4,[[],["self"]]],[11,"rotate_left","","",4,[[["u32"]],["self"]]],[11,"rotate_right","","",4,[[["u32"]],["self"]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[],["self"]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[],["self"]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[],["self"]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[],["self"]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[],["self"]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[],["self"]]],[11,"classify","","",5,[[["into",["i8"]],["i8"]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",5,[[],["i8"]]],[11,"zero","","",5,[[],["self"]]],[11,"one","","",5,[[],["self"]]],[11,"ones","","",5,[[],["self"]]],[11,"from_bytes_le","","",5,[[],[["i8"],["vec",["i8"]]]]],[11,"to_bytes_le","","",5,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",5,[[],[["i8"],["vec",["i8"]]]]],[11,"to_bytes_be","","",5,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",5,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",5,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",5,[[],["self"]]],[11,"rotate_left","","",5,[[["u32"]],["self"]]],[11,"rotate_right","","",5,[[["u32"]],["self"]]],[11,"classify","","",6,[[["into",["i16"]],["i16"]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",6,[[],["i16"]]],[11,"zero","","",6,[[],["self"]]],[11,"one","","",6,[[],["self"]]],[11,"ones","","",6,[[],["self"]]],[11,"from_bytes_le","","",6,[[],[["i16"],["vec",["i16"]]]]],[11,"to_bytes_le","","",6,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",6,[[],[["i16"],["vec",["i16"]]]]],[11,"to_bytes_be","","",6,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",6,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",6,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",6,[[],["self"]]],[11,"rotate_left","","",6,[[["u32"]],["self"]]],[11,"rotate_right","","",6,[[["u32"]],["self"]]],[11,"classify","","",7,[[["into",["i32"]],["i32"]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",7,[[],["i32"]]],[11,"zero","","",7,[[],["self"]]],[11,"one","","",7,[[],["self"]]],[11,"ones","","",7,[[],["self"]]],[11,"from_bytes_le","","",7,[[],[["i32"],["vec",["i32"]]]]],[11,"to_bytes_le","","",7,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",7,[[],[["i32"],["vec",["i32"]]]]],[11,"to_bytes_be","","",7,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",7,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",7,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",7,[[],["self"]]],[11,"rotate_left","","",7,[[["u32"]],["self"]]],[11,"rotate_right","","",7,[[["u32"]],["self"]]],[11,"classify","","",8,[[["i64"],["into",["i64"]]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",8,[[],["i64"]]],[11,"zero","","",8,[[],["self"]]],[11,"one","","",8,[[],["self"]]],[11,"ones","","",8,[[],["self"]]],[11,"from_bytes_le","","",8,[[],[["i64"],["vec",["i64"]]]]],[11,"to_bytes_le","","",8,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",8,[[],[["i64"],["vec",["i64"]]]]],[11,"to_bytes_be","","",8,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",8,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",8,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",8,[[],["self"]]],[11,"rotate_left","","",8,[[["u32"]],["self"]]],[11,"rotate_right","","",8,[[["u32"]],["self"]]],[11,"classify","","",9,[[["i128"],["into",["i128"]]],["self"]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",9,[[],["i128"]]],[11,"zero","","",9,[[],["self"]]],[11,"one","","",9,[[],["self"]]],[11,"ones","","",9,[[],["self"]]],[11,"from_bytes_le","","",9,[[],[["i128"],["vec",["i128"]]]]],[11,"to_bytes_le","","",9,[[],[["vec",["u8"]],["u8"]]]],[11,"from_bytes_be","","",9,[[],[["i128"],["vec",["i128"]]]]],[11,"to_bytes_be","","",9,[[],[["vec",["u8"]],["u8"]]]],[11,"to_be_bytes","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"checked_add","","Warning: panics when overflow.",9,[[],["self"]]],[11,"checked_sub","","Warning: panics when overflow.",9,[[],["self"]]],[11,"checked_mul","","Warning: panics when overflow.",9,[[],["self"]]],[11,"rotate_left","","",9,[[["u32"]],["self"]]],[11,"rotate_right","","",9,[[["u32"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",1,[[["u16"]],["self"]]],[11,"from","","",2,[[["u32"]],["self"]]],[11,"from","","",3,[[["u64"]],["self"]]],[11,"from","","",4,[[["u128"]],["self"]]],[11,"from","","",5,[[["i8"]],["self"]]],[11,"from","","",6,[[["i16"]],["self"]]],[11,"from","","",7,[[["i32"]],["self"]]],[11,"from","","",8,[[["i64"]],["self"]]],[11,"from","","",9,[[["i128"]],["self"]]],[11,"from","","",4,[[["u8"]],["u128"]]],[11,"from","","",0,[[["u128"]],["u8"]]],[11,"from","","",4,[[["u16"]],["u128"]]],[11,"from","","",1,[[["u128"]],["u16"]]],[11,"from","","",4,[[["u32"]],["u128"]]],[11,"from","","",2,[[["u128"]],["u32"]]],[11,"from","","",4,[[["u64"]],["u128"]]],[11,"from","","",3,[[["u128"]],["u64"]]],[11,"from","","",3,[[["u8"]],["u64"]]],[11,"from","","",0,[[["u64"]],["u8"]]],[11,"from","","",3,[[["u16"]],["u64"]]],[11,"from","","",1,[[["u64"]],["u16"]]],[11,"from","","",3,[[["u32"]],["u64"]]],[11,"from","","",2,[[["u64"]],["u32"]]],[11,"from","","",2,[[["u8"]],["u32"]]],[11,"from","","",0,[[["u32"]],["u8"]]],[11,"from","","",2,[[["u16"]],["u32"]]],[11,"from","","",1,[[["u32"]],["u16"]]],[11,"from","","",1,[[["u8"]],["u16"]]],[11,"from","","",0,[[["u16"]],["u8"]]],[11,"from","","",9,[[["i8"]],["i128"]]],[11,"from","","",5,[[["i128"]],["i8"]]],[11,"from","","",9,[[["i16"]],["i128"]]],[11,"from","","",6,[[["i128"]],["i16"]]],[11,"from","","",9,[[["i32"]],["i128"]]],[11,"from","","",7,[[["i128"]],["i32"]]],[11,"from","","",9,[[["i64"]],["i128"]]],[11,"from","","",8,[[["i128"]],["i64"]]],[11,"from","","",8,[[["i8"]],["i64"]]],[11,"from","","",5,[[["i64"]],["i8"]]],[11,"from","","",8,[[["i16"]],["i64"]]],[11,"from","","",6,[[["i64"]],["i16"]]],[11,"from","","",8,[[["i32"]],["i64"]]],[11,"from","","",7,[[["i64"]],["i32"]]],[11,"from","","",7,[[["i8"]],["i32"]]],[11,"from","","",5,[[["i32"]],["i8"]]],[11,"from","","",7,[[["i16"]],["i32"]]],[11,"from","","",6,[[["i32"]],["i16"]]],[11,"from","","",6,[[["i8"]],["i16"]]],[11,"from","","",5,[[["i16"]],["i8"]]],[11,"from","","",9,[[["u128"]],["i128"]]],[11,"from","","",8,[[["u64"]],["i64"]]],[11,"from","","",7,[[["u32"]],["i32"]]],[11,"from","","",6,[[["u16"]],["i16"]]],[11,"from","","",5,[[["u8"]],["i8"]]],[11,"clone","","",0,[[["self"]],["u8"]]],[11,"clone","","",1,[[["self"]],["u16"]]],[11,"clone","","",2,[[["self"]],["u32"]]],[11,"clone","","",3,[[["self"]],["u64"]]],[11,"clone","","",4,[[["self"]],["u128"]]],[11,"clone","","",5,[[["self"]],["i8"]]],[11,"clone","","",6,[[["self"]],["i16"]]],[11,"clone","","",7,[[["self"]],["i32"]]],[11,"clone","","",8,[[["self"]],["i64"]]],[11,"clone","","",9,[[["self"]],["i128"]]],[11,"default","","",0,[[],["u8"]]],[11,"default","","",1,[[],["u16"]]],[11,"default","","",2,[[],["u32"]]],[11,"default","","",3,[[],["u64"]]],[11,"default","","",4,[[],["u128"]]],[11,"default","","",5,[[],["i8"]]],[11,"default","","",6,[[],["i16"]]],[11,"default","","",7,[[],["i32"]]],[11,"default","","",8,[[],["i64"]]],[11,"default","","",9,[[],["i128"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"sub","","",0,[[],["self"]]],[11,"sub","","",1,[[],["self"]]],[11,"sub","","",2,[[],["self"]]],[11,"sub","","",3,[[],["self"]]],[11,"sub","","",4,[[],["self"]]],[11,"sub","","",5,[[],["self"]]],[11,"sub","","",6,[[],["self"]]],[11,"sub","","",7,[[],["self"]]],[11,"sub","","",8,[[],["self"]]],[11,"sub","","",9,[[],["self"]]],[11,"add","","",0,[[],["self"]]],[11,"add","","",1,[[],["self"]]],[11,"add","","",2,[[],["self"]]],[11,"add","","",3,[[],["self"]]],[11,"add","","",4,[[],["self"]]],[11,"add","","",5,[[],["self"]]],[11,"add","","",6,[[],["self"]]],[11,"add","","",7,[[],["self"]]],[11,"add","","",8,[[],["self"]]],[11,"add","","",9,[[],["self"]]],[11,"mul","","",0,[[],["self"]]],[11,"mul","","",1,[[],["self"]]],[11,"mul","","",2,[[],["self"]]],[11,"mul","","",3,[[],["self"]]],[11,"mul","","",4,[[],["self"]]],[11,"mul","","",5,[[],["self"]]],[11,"mul","","",6,[[],["self"]]],[11,"mul","","",7,[[],["self"]]],[11,"mul","","",8,[[],["self"]]],[11,"mul","","",9,[[],["self"]]],[11,"neg","","",0,[[],["self"]]],[11,"neg","","",1,[[],["self"]]],[11,"neg","","",2,[[],["self"]]],[11,"neg","","",3,[[],["self"]]],[11,"neg","","",4,[[],["self"]]],[11,"neg","","",5,[[],["self"]]],[11,"neg","","",6,[[],["self"]]],[11,"neg","","",7,[[],["self"]]],[11,"neg","","",8,[[],["self"]]],[11,"neg","","",9,[[],["self"]]],[11,"add_assign","","",0,[[["self"]]]],[11,"add_assign","","",1,[[["self"]]]],[11,"add_assign","","",2,[[["self"]]]],[11,"add_assign","","",3,[[["self"]]]],[11,"add_assign","","",4,[[["self"]]]],[11,"add_assign","","",5,[[["self"]]]],[11,"add_assign","","",6,[[["self"]]]],[11,"add_assign","","",7,[[["self"]]]],[11,"add_assign","","",8,[[["self"]]]],[11,"add_assign","","",9,[[["self"]]]],[11,"sub_assign","","",0,[[["self"]]]],[11,"sub_assign","","",1,[[["self"]]]],[11,"sub_assign","","",2,[[["self"]]]],[11,"sub_assign","","",3,[[["self"]]]],[11,"sub_assign","","",4,[[["self"]]]],[11,"sub_assign","","",5,[[["self"]]]],[11,"sub_assign","","",6,[[["self"]]]],[11,"sub_assign","","",7,[[["self"]]]],[11,"sub_assign","","",8,[[["self"]]]],[11,"sub_assign","","",9,[[["self"]]]],[11,"mul_assign","","",0,[[["self"]]]],[11,"mul_assign","","",1,[[["self"]]]],[11,"mul_assign","","",2,[[["self"]]]],[11,"mul_assign","","",3,[[["self"]]]],[11,"mul_assign","","",4,[[["self"]]]],[11,"mul_assign","","",5,[[["self"]]]],[11,"mul_assign","","",6,[[["self"]]]],[11,"mul_assign","","",7,[[["self"]]]],[11,"mul_assign","","",8,[[["self"]]]],[11,"mul_assign","","",9,[[["self"]]]],[11,"not","","",0,[[],["self"]]],[11,"not","","",1,[[],["self"]]],[11,"not","","",2,[[],["self"]]],[11,"not","","",3,[[],["self"]]],[11,"not","","",4,[[],["self"]]],[11,"not","","",5,[[],["self"]]],[11,"not","","",6,[[],["self"]]],[11,"not","","",7,[[],["self"]]],[11,"not","","",8,[[],["self"]]],[11,"not","","",9,[[],["self"]]],[11,"bitand","","",0,[[],["self"]]],[11,"bitand","","",1,[[],["self"]]],[11,"bitand","","",2,[[],["self"]]],[11,"bitand","","",3,[[],["self"]]],[11,"bitand","","",4,[[],["self"]]],[11,"bitand","","",5,[[],["self"]]],[11,"bitand","","",6,[[],["self"]]],[11,"bitand","","",7,[[],["self"]]],[11,"bitand","","",8,[[],["self"]]],[11,"bitand","","",9,[[],["self"]]],[11,"bitor","","",0,[[],["self"]]],[11,"bitor","","",1,[[],["self"]]],[11,"bitor","","",2,[[],["self"]]],[11,"bitor","","",3,[[],["self"]]],[11,"bitor","","",4,[[],["self"]]],[11,"bitor","","",5,[[],["self"]]],[11,"bitor","","",6,[[],["self"]]],[11,"bitor","","",7,[[],["self"]]],[11,"bitor","","",8,[[],["self"]]],[11,"bitor","","",9,[[],["self"]]],[11,"bitxor","","",0,[[],["self"]]],[11,"bitxor","","",1,[[],["self"]]],[11,"bitxor","","",2,[[],["self"]]],[11,"bitxor","","",3,[[],["self"]]],[11,"bitxor","","",4,[[],["self"]]],[11,"bitxor","","",5,[[],["self"]]],[11,"bitxor","","",6,[[],["self"]]],[11,"bitxor","","",7,[[],["self"]]],[11,"bitxor","","",8,[[],["self"]]],[11,"bitxor","","",9,[[],["self"]]],[11,"shl","","",0,[[["u32"]],["self"]]],[11,"shl","","",1,[[["u32"]],["self"]]],[11,"shl","","",2,[[["u32"]],["self"]]],[11,"shl","","",3,[[["u32"]],["self"]]],[11,"shl","","",4,[[["u32"]],["self"]]],[11,"shl","","",5,[[["u32"]],["self"]]],[11,"shl","","",6,[[["u32"]],["self"]]],[11,"shl","","",7,[[["u32"]],["self"]]],[11,"shl","","",8,[[["u32"]],["self"]]],[11,"shl","","",9,[[["u32"]],["self"]]],[11,"shr","","",0,[[["u32"]],["self"]]],[11,"shr","","",1,[[["u32"]],["self"]]],[11,"shr","","",2,[[["u32"]],["self"]]],[11,"shr","","",3,[[["u32"]],["self"]]],[11,"shr","","",4,[[["u32"]],["self"]]],[11,"shr","","",5,[[["u32"]],["self"]]],[11,"shr","","",6,[[["u32"]],["self"]]],[11,"shr","","",7,[[["u32"]],["self"]]],[11,"shr","","",8,[[["u32"]],["self"]]],[11,"shr","","",9,[[["u32"]],["self"]]],[11,"bitand_assign","","",0,[[["self"]]]],[11,"bitand_assign","","",1,[[["self"]]]],[11,"bitand_assign","","",2,[[["self"]]]],[11,"bitand_assign","","",3,[[["self"]]]],[11,"bitand_assign","","",4,[[["self"]]]],[11,"bitand_assign","","",5,[[["self"]]]],[11,"bitand_assign","","",6,[[["self"]]]],[11,"bitand_assign","","",7,[[["self"]]]],[11,"bitand_assign","","",8,[[["self"]]]],[11,"bitand_assign","","",9,[[["self"]]]],[11,"bitor_assign","","",0,[[["self"]]]],[11,"bitor_assign","","",1,[[["self"]]]],[11,"bitor_assign","","",2,[[["self"]]]],[11,"bitor_assign","","",3,[[["self"]]]],[11,"bitor_assign","","",4,[[["self"]]]],[11,"bitor_assign","","",5,[[["self"]]]],[11,"bitor_assign","","",6,[[["self"]]]],[11,"bitor_assign","","",7,[[["self"]]]],[11,"bitor_assign","","",8,[[["self"]]]],[11,"bitor_assign","","",9,[[["self"]]]],[11,"bitxor_assign","","",0,[[["self"]]]],[11,"bitxor_assign","","",1,[[["self"]]]],[11,"bitxor_assign","","",2,[[["self"]]]],[11,"bitxor_assign","","",3,[[["self"]]]],[11,"bitxor_assign","","",4,[[["self"]]]],[11,"bitxor_assign","","",5,[[["self"]]]],[11,"bitxor_assign","","",6,[[["self"]]]],[11,"bitxor_assign","","",7,[[["self"]]]],[11,"bitxor_assign","","",8,[[["self"]]]],[11,"bitxor_assign","","",9,[[["self"]]]],[11,"shl_assign","","",0,[[["self"],["u32"]]]],[11,"shl_assign","","",1,[[["self"],["u32"]]]],[11,"shl_assign","","",2,[[["self"],["u32"]]]],[11,"shl_assign","","",3,[[["self"],["u32"]]]],[11,"shl_assign","","",4,[[["self"],["u32"]]]],[11,"shl_assign","","",5,[[["self"],["u32"]]]],[11,"shl_assign","","",6,[[["self"],["u32"]]]],[11,"shl_assign","","",7,[[["self"],["u32"]]]],[11,"shl_assign","","",8,[[["self"],["u32"]]]],[11,"shl_assign","","",9,[[["self"],["u32"]]]],[11,"shr_assign","","",0,[[["self"],["u32"]]]],[11,"shr_assign","","",1,[[["self"],["u32"]]]],[11,"shr_assign","","",2,[[["self"],["u32"]]]],[11,"shr_assign","","",3,[[["self"],["u32"]]]],[11,"shr_assign","","",4,[[["self"],["u32"]]]],[11,"shr_assign","","",5,[[["self"],["u32"]]]],[11,"shr_assign","","",6,[[["self"],["u32"]]]],[11,"shr_assign","","",7,[[["self"],["u32"]]]],[11,"shr_assign","","",8,[[["self"],["u32"]]]],[11,"shr_assign","","",9,[[["self"],["u32"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]]],"p":[[3,"U8"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"U128"],[3,"I8"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"I128"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);