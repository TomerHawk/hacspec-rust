initSidebarItems({"fn":[["u128_from_be_bytes",""],["u128_from_le_bytes",""],["u128_to_be_bytes",""],["u32_from_le_bytes",""],["u32_to_be_bytes",""],["u32_to_le_bytes",""],["u64_slice_to_le_u8s",""],["u64_to_be_bytes",""],["u64_to_le_bytes",""]],"macro":[["array",""],["array_base",""],["assert_bytes_eq",""],["assert_secret_array_eq",""],["bytes",""],["field_integer",""],["public_array",""],["secret_array",""],["secret_bytes",""],["unsigned_integer",""]],"mod":[["prelude","This module conveniently exports common subroutines necessary for hacspecs"]],"struct":[["Counter","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["Seq","Variable length byte arrays."],["U128Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["U32Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["U64Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."]],"trait":[["SeqTrait","Common trait for all byte arrays."]],"type":[["ByteSeq",""]]});