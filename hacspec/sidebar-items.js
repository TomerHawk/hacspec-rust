initSidebarItems({"fn":[["div_ceil","Compute ceil(a/b), returning a u64. Note that float-uint conversion might be lossy."],["u128_from_be_bytes",""],["u128_from_le_bytes",""],["u128_to_be_bytes",""],["u32_from_be_bytes",""],["u32_from_le_bytes",""],["u32_from_le_bytes_u32",""],["u32_to_be_bytes",""],["u32_to_le_bytes",""],["u64_to_be_bytes",""],["u64_to_be_bytes_u64",""],["u64_to_le_bytes",""]],"macro":[["_array_base",""],["_public_array",""],["_secret_array","This creates arrays for secret integers, i.e. `$t` is the secret integer type and `$tbase` is the according Rust type."],["array","Create a new array with the given name, length, and type."],["assert_bytes_eq",""],["assert_secret_array_eq",""],["both_arrays",""],["both_bytes",""],["bytes","Convenience function to create a new byte array (of type `U8`) with the given name and length."],["create_test_vectors",""],["field_integer",""],["impl_unsigned_integer",""],["poly",""],["public_bytes","Convenience function to create a new public byte array (of type `u8`) with the given name and length."],["secret_array",""],["secret_bytes",""],["unsigned_integer",""]],"mod":[["array","Arrays"],["integer",""],["poly","Polynomials"],["prelude","This module conveniently exports common subroutines necessary for hacspecs"],["seq","Sequences"],["test_vectors","Provide utilities to read test vectors from JSON files."],["util","Utility functions for hacspec internally."]],"struct":[["Counter","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["DocPublicArray","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["DocPublicBytes","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["DocSecretArray","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["DocSecretBytes","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["U128Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["U32Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["U64Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["u128Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["u32Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."],["u64Word","Fixed length byte array. Because Rust requires fixed length arrays to have a known size at compile time there's no generic fixed length byte array here. Use this to define the fixed length byte arrays needed in your code."]],"trait":[["SeqTrait","Common trait for all byte arrays and sequences."]]});